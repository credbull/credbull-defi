name: ci-dev-sdk

defaults:
  run:
    working-directory: .

on:
  workflow_dispatch:
  push:
    branches:
      - "main*"
      - "development*"
      - "ops*"
    paths:
      - "packages/sdk/**"
      - ".github/workflows/ci-dev-sdk.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: testnet

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install yarn
        run: corepack prepare yarn@stable --activate

      - name: Install foundry-toolchain
        uses: foundry-rs/foundry-toolchain@v1.2.0
        with:
          version: nightly

      - name: Install Project Dependencies
        run: yarn install

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Setup Local Environment
        run: find . -type f -name ".env*.sample" -exec sh -c 'F={}; cp -nv $F $(dirname $F)/$(basename $F .sample)' \;
        working-directory: .

      # Docker compose detached (-d) so other jobs can continue
      # Env variables are sourced and then exported (set -a)
      - name: Run Docker compose detached
        run: |
          set -a
          source packages/api/.env
          set +a
          docker-compose up -d --build

      # TODO: using local supabase for SDK.
      # if we want a deployed instance, we need to set up a new one for the SDK.
      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1.3.0
        with:
          version: latest

      - name: Start Supabase
        run: supabase start
        working-directory: packages/api

      - name: Deploy Credbull Contracts
        run: yarn deploy
        working-directory: packages/contracts

      - name: Create Default Users
        run: yarn op --create-default-users
        working-directory: packages/ops

      - name: Logs
        run: docker logs api --tail all

      - name: Run SDK tests
        run: |
          set -a
          source ../api/.env
          source .env
          set +a
          yarn int-test
        working-directory: packages/sdk

      - name: Clean vault data
        run: yarn op --clean-vault-table
        working-directory: packages/ops

      - name: Cleanup Yarn Cache
        if: always()
        run: yarn cache clean
