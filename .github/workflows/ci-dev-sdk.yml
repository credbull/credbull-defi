name: ci-dev-sdk

defaults:
  run:
    working-directory: .

on:
  workflow_dispatch:
  push:
    branches: [ "*" ]
    paths:
      - "packages/sdk/**"
      - ".github/workflows/ci-dev-sdk.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: testnet

    steps:
      - uses: actions/checkout@v4

      - name: Install yarn
        run: npm install -g yarn

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install dependencies
        run: yarn install

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Docker compose detached (-d) so other jobs can continue
      # Env variables are sourced and then exported (set -a)
      - name: Run Docker compose detached
        run: |
          cp -n packages/api/.env.sample packages/api/.env
          set -a
          source packages/api/.env
          set +a
          docker-compose up -d --build

      # TODO: using local supabase for SDK.
      # if we want a deployed instance, we need to set up a new one for the SDK.
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - run: supabase start
        working-directory: packages/api/supabase

      - name: Deploy contracts
        run: cp -n .env.sample .env && yarn deploy
        working-directory: packages/contracts

      - name: Create Default Users
        run:  cp -n ../../.env.sample ../../.env && cp -n .env.sample .env && yarn op --create-default-users
        working-directory: scripts/operation/

      - name: Logs
        run: docker logs api --tail all

      - name: Run SDK tests
        run: cd packages/sdk/ && yarn int-test
        env:
          ADMIN_PRIVATE_KEY_SDK: ${{ secrets.SDK_DEFAULT_ANVIL_KEY }}
          ADMIN_EMAIL_SDK: admin@cbl.com
          ADMIN_PASSWORD_SDK: admin123

          USER_A_PRIVATE_KEY: ${{ secrets.SDK_USER_A_PRIVATE_KEY }}
          USER_A_EMAIL: usera@cbl.com
          USER_A_PASSWORD: usera123

          USER_B_PRIVATE_KEY: ${{ secrets.SDK_USER_B_PRIVATE_KEY }}
          USER_B_EMAIL: userb@cbl.com
          USER_B_PASSWORD: userb123

          NODE_ENV: development
          RPC_PROVIDER: http://localhost:8545
          CRON_SECRET: ${{ secrets.SDK_CRON_SECRET }}
          OPERATOR_PRIVATE_KEY: ${{ secrets.SDK_ETHERS_DEPLOYER_PRIVATE_KEY }}
          CUSTODIAN_PRIVATE_KEY: ${{ secrets.SDK_CUSTODIAN_PRIVATE_KEY }}

          API_BASE_URL: ${{ secrets.SDK_API_BASE_URL }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SDK_NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SDK_NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_TARGET_NETWORK: ${{ secrets.SDK_NEXT_PUBLIC_TARGET_NETWORK }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SDK_SUPABASE_SERVICE_ROLE_KEY }}
          ADMIN_PRIVATE_KEY: ${{ secrets.SDK_ADMIN_PRIVATE_KEY }}
          ADMIN_EMAIL: ${{ secrets.SDK_ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.SDK_ADMIN_PASSWORD }}
          PUBLIC_OWNER_ADDRESS: "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
          PUBLIC_OPERATOR_ADDRESS: "0x70997970C51812dc3A010C7d01b50e0d17dc79C8"
          ADDRESSES_TREASURY: "0x14dC79964da2C08b23698B3D3cc7Ca32193d9955"
          ADDRESSES_ACTIVITY_REWARD: "0x14dC79964da2C08b23698B3D3cc7Ca32193d9955"
          ADDRESSES_CUSTODIAN: "0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC"


      - name: Clean vault data
        run: cp -n .env.sample .env && yarn op --clean-vault-table
        working-directory: scripts/operation/

      - name: Cleanup
        if: always()
        run: npm uninstall -g yarn
