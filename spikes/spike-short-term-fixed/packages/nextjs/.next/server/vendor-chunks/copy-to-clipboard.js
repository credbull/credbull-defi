"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/copy-to-clipboard";
exports.ids = ["vendor-chunks/copy-to-clipboard"];
exports.modules = {

/***/ "(ssr)/./node_modules/copy-to-clipboard/index.js":
/*!*************************************************!*\
  !*** ./node_modules/copy-to-clipboard/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar deselectCurrent = __webpack_require__(/*! toggle-selection */ \"(ssr)/./node_modules/toggle-selection/index.js\");\nvar clipboardToIE11Formatting = {\n    \"text/plain\": \"Text\",\n    \"text/html\": \"Url\",\n    \"default\": \"Text\"\n};\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\nfunction format(message) {\n    var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"âŒ˜\" : \"Ctrl\") + \"+C\";\n    return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\nfunction copy(text, options) {\n    var debug, message, reselectPrevious, range, selection, mark, success = false;\n    if (!options) {\n        options = {};\n    }\n    debug = options.debug || false;\n    try {\n        reselectPrevious = deselectCurrent();\n        range = document.createRange();\n        selection = document.getSelection();\n        mark = document.createElement(\"span\");\n        mark.textContent = text;\n        // avoid screen readers from reading out loud the text\n        mark.ariaHidden = \"true\";\n        // reset user styles for span element\n        mark.style.all = \"unset\";\n        // prevents scrolling to the end of the page\n        mark.style.position = \"fixed\";\n        mark.style.top = 0;\n        mark.style.clip = \"rect(0, 0, 0, 0)\";\n        // used to preserve spaces and line breaks\n        mark.style.whiteSpace = \"pre\";\n        // do not inherit user-select (it may be `none`)\n        mark.style.webkitUserSelect = \"text\";\n        mark.style.MozUserSelect = \"text\";\n        mark.style.msUserSelect = \"text\";\n        mark.style.userSelect = \"text\";\n        mark.addEventListener(\"copy\", function(e) {\n            e.stopPropagation();\n            if (options.format) {\n                e.preventDefault();\n                if (typeof e.clipboardData === \"undefined\") {\n                    debug && console.warn(\"unable to use e.clipboardData\");\n                    debug && console.warn(\"trying IE specific stuff\");\n                    window.clipboardData.clearData();\n                    var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"];\n                    window.clipboardData.setData(format, text);\n                } else {\n                    e.clipboardData.clearData();\n                    e.clipboardData.setData(options.format, text);\n                }\n            }\n            if (options.onCopy) {\n                e.preventDefault();\n                options.onCopy(e.clipboardData);\n            }\n        });\n        document.body.appendChild(mark);\n        range.selectNodeContents(mark);\n        selection.addRange(range);\n        var successful = document.execCommand(\"copy\");\n        if (!successful) {\n            throw new Error(\"copy command was unsuccessful\");\n        }\n        success = true;\n    } catch (err) {\n        debug && console.error(\"unable to copy using execCommand: \", err);\n        debug && console.warn(\"trying IE specific stuff\");\n        try {\n            window.clipboardData.setData(options.format || \"text\", text);\n            options.onCopy && options.onCopy(window.clipboardData);\n            success = true;\n        } catch (err) {\n            debug && console.error(\"unable to copy using clipboardData: \", err);\n            debug && console.error(\"falling back to prompt\");\n            message = format(\"message\" in options ? options.message : defaultMessage);\n            window.prompt(message, text);\n        }\n    } finally{\n        if (selection) {\n            if (typeof selection.removeRange == \"function\") {\n                selection.removeRange(range);\n            } else {\n                selection.removeAllRanges();\n            }\n        }\n        if (mark) {\n            document.body.removeChild(mark);\n        }\n        reselectPrevious();\n    }\n    return success;\n}\nmodule.exports = copy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/copy-to-clipboard/index.js\n");

/***/ })

};
;