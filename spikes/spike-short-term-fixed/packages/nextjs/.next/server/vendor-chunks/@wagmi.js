"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@wagmi";
exports.ids = ["vendor-chunks/@wagmi"];
exports.modules = {

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/esm/coinbaseWallet.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/esm/coinbaseWallet.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coinbaseWallet: () => (/* binding */ coinbaseWallet)\n/* harmony export */ });\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n\n\ncoinbaseWallet.type = \"coinbaseWallet\";\nfunction coinbaseWallet(parameters = {}) {\n    if (parameters.version === \"3\" || parameters.headlessMode) return version3(parameters);\n    return version4(parameters);\n}\nfunction version4(parameters) {\n    let sdk;\n    let walletProvider;\n    let accountsChanged;\n    let chainChanged;\n    let disconnect;\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_0__.createConnector)((config)=>({\n            id: \"coinbaseWalletSDK\",\n            name: \"Coinbase Wallet\",\n            supportsSimulation: true,\n            type: coinbaseWallet.type,\n            async connect ({ chainId } = {}) {\n                try {\n                    const provider = await this.getProvider();\n                    const accounts = (await provider.request({\n                        method: \"eth_requestAccounts\"\n                    })).map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x));\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                    // Switch to chain if provided\n                    let currentChainId = await this.getChainId();\n                    if (chainId && currentChainId !== chainId) {\n                        const chain = await this.switchChain({\n                            chainId\n                        }).catch((error)=>{\n                            if (error.code === viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError.code) throw error;\n                            return {\n                                id: currentChainId\n                            };\n                        });\n                        currentChainId = chain?.id ?? currentChainId;\n                    }\n                    return {\n                        accounts,\n                        chainId: currentChainId\n                    };\n                } catch (error) {\n                    if (/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(error.message)) throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n                    throw error;\n                }\n            },\n            async disconnect () {\n                const provider = await this.getProvider();\n                if (accountsChanged) {\n                    provider.removeListener(\"accountsChanged\", accountsChanged);\n                    accountsChanged = undefined;\n                }\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                provider.disconnect();\n                provider.close?.();\n            },\n            async getAccounts () {\n                const provider = await this.getProvider();\n                return (await provider.request({\n                    method: \"eth_accounts\"\n                })).map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x));\n            },\n            async getChainId () {\n                const provider = await this.getProvider();\n                const chainId = await provider.request({\n                    method: \"eth_chainId\"\n                });\n                return Number(chainId);\n            },\n            async getProvider () {\n                if (!walletProvider) {\n                    // Unwrapping import for Vite compatibility.\n                    // See: https://github.com/vitejs/vite/issues/9703\n                    const CoinbaseWalletSDK = await (async ()=>{\n                        const { default: SDK } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/readable-stream\"), __webpack_require__.e(\"vendor-chunks/preact\"), __webpack_require__.e(\"vendor-chunks/sha.js\"), __webpack_require__.e(\"vendor-chunks/keccak\"), __webpack_require__.e(\"vendor-chunks/string_decoder\"), __webpack_require__.e(\"vendor-chunks/safe-buffer\"), __webpack_require__.e(\"vendor-chunks/util-deprecate\"), __webpack_require__.e(\"vendor-chunks/@coinbase\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @coinbase/wallet-sdk */ \"(ssr)/./node_modules/@coinbase/wallet-sdk/dist/index.js\", 19));\n                        if (typeof SDK !== \"function\" && typeof SDK.default === \"function\") return SDK.default;\n                        return SDK;\n                    })();\n                    sdk = new CoinbaseWalletSDK({\n                        ...parameters,\n                        appChainIds: config.chains.map((x)=>x.id)\n                    });\n                    walletProvider = sdk.makeWeb3Provider({\n                        ...parameters,\n                        options: parameters.preference ?? \"all\"\n                    });\n                }\n                return walletProvider;\n            },\n            async isAuthorized () {\n                try {\n                    const accounts = await this.getAccounts();\n                    return !!accounts.length;\n                } catch  {\n                    return false;\n                }\n            },\n            async switchChain ({ addEthereumChainParameter, chainId }) {\n                const chain = config.chains.find((chain)=>chain.id === chainId);\n                if (!chain) throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(new _wagmi_core__WEBPACK_IMPORTED_MODULE_3__.ChainNotConfiguredError());\n                const provider = await this.getProvider();\n                try {\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [\n                            {\n                                chainId: (0,viem__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(chain.id)\n                            }\n                        ]\n                    });\n                    return chain;\n                } catch (error) {\n                    // Indicates chain is not added to provider\n                    if (error.code === 4902) {\n                        try {\n                            let blockExplorerUrls;\n                            if (addEthereumChainParameter?.blockExplorerUrls) blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;\n                            else blockExplorerUrls = chain.blockExplorers?.default.url ? [\n                                chain.blockExplorers?.default.url\n                            ] : [];\n                            let rpcUrls;\n                            if (addEthereumChainParameter?.rpcUrls?.length) rpcUrls = addEthereumChainParameter.rpcUrls;\n                            else rpcUrls = [\n                                chain.rpcUrls.default?.http[0] ?? \"\"\n                            ];\n                            const addEthereumChain = {\n                                blockExplorerUrls,\n                                chainId: (0,viem__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(chainId),\n                                chainName: addEthereumChainParameter?.chainName ?? chain.name,\n                                iconUrls: addEthereumChainParameter?.iconUrls,\n                                nativeCurrency: addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n                                rpcUrls\n                            };\n                            await provider.request({\n                                method: \"wallet_addEthereumChain\",\n                                params: [\n                                    addEthereumChain\n                                ]\n                            });\n                            return chain;\n                        } catch (error) {\n                            throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n                        }\n                    }\n                    throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(error);\n                }\n            },\n            onAccountsChanged (accounts) {\n                if (accounts.length === 0) this.onDisconnect();\n                else config.emitter.emit(\"change\", {\n                    accounts: accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x))\n                });\n            },\n            onChainChanged (chain) {\n                const chainId = Number(chain);\n                config.emitter.emit(\"change\", {\n                    chainId\n                });\n            },\n            async onDisconnect (_error) {\n                config.emitter.emit(\"disconnect\");\n                const provider = await this.getProvider();\n                if (accountsChanged) {\n                    provider.removeListener(\"accountsChanged\", accountsChanged);\n                    accountsChanged = undefined;\n                }\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n            }\n        }));\n}\nfunction version3(parameters) {\n    const reloadOnDisconnect = false;\n    let sdk;\n    let walletProvider;\n    let accountsChanged;\n    let chainChanged;\n    let disconnect;\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_0__.createConnector)((config)=>({\n            id: \"coinbaseWalletSDK\",\n            name: \"Coinbase Wallet\",\n            supportsSimulation: true,\n            type: coinbaseWallet.type,\n            async connect ({ chainId } = {}) {\n                try {\n                    const provider = await this.getProvider();\n                    const accounts = (await provider.request({\n                        method: \"eth_requestAccounts\"\n                    })).map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x));\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                    // Switch to chain if provided\n                    let currentChainId = await this.getChainId();\n                    if (chainId && currentChainId !== chainId) {\n                        const chain = await this.switchChain({\n                            chainId\n                        }).catch((error)=>{\n                            if (error.code === viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError.code) throw error;\n                            return {\n                                id: currentChainId\n                            };\n                        });\n                        currentChainId = chain?.id ?? currentChainId;\n                    }\n                    return {\n                        accounts,\n                        chainId: currentChainId\n                    };\n                } catch (error) {\n                    if (/(user closed modal|accounts received is empty|user denied account)/i.test(error.message)) throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n                    throw error;\n                }\n            },\n            async disconnect () {\n                const provider = await this.getProvider();\n                if (accountsChanged) {\n                    provider.removeListener(\"accountsChanged\", accountsChanged);\n                    accountsChanged = undefined;\n                }\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                provider.disconnect();\n                provider.close();\n            },\n            async getAccounts () {\n                const provider = await this.getProvider();\n                return (await provider.request({\n                    method: \"eth_accounts\"\n                })).map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x));\n            },\n            async getChainId () {\n                const provider = await this.getProvider();\n                const chainId = await provider.request({\n                    method: \"eth_chainId\"\n                });\n                return Number(chainId);\n            },\n            async getProvider () {\n                if (!walletProvider) {\n                    // Unwrapping import for Vite compatibility.\n                    // See: https://github.com/vitejs/vite/issues/9703\n                    const CoinbaseWalletSDK = await (async ()=>{\n                        const { default: SDK } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/readable-stream\"), __webpack_require__.e(\"vendor-chunks/preact\"), __webpack_require__.e(\"vendor-chunks/sha.js\"), __webpack_require__.e(\"vendor-chunks/keccak\"), __webpack_require__.e(\"vendor-chunks/string_decoder\"), __webpack_require__.e(\"vendor-chunks/safe-buffer\"), __webpack_require__.e(\"vendor-chunks/util-deprecate\"), __webpack_require__.e(\"vendor-chunks/cbw-sdk\"), __webpack_require__.e(\"vendor-chunks/semver\"), __webpack_require__.e(\"vendor-chunks/eth-block-tracker\"), __webpack_require__.e(\"vendor-chunks/eth-json-rpc-filters\"), __webpack_require__.e(\"vendor-chunks/json-rpc-engine\"), __webpack_require__.e(\"vendor-chunks/eth-rpc-errors\"), __webpack_require__.e(\"vendor-chunks/debug\"), __webpack_require__.e(\"vendor-chunks/async-mutex\"), __webpack_require__.e(\"vendor-chunks/superstruct\"), __webpack_require__.e(\"vendor-chunks/xtend\"), __webpack_require__.e(\"vendor-chunks/supports-color\"), __webpack_require__.e(\"vendor-chunks/json-rpc-random-id\"), __webpack_require__.e(\"vendor-chunks/has-flag\"), __webpack_require__.e(\"vendor-chunks/fast-safe-stringify\"), __webpack_require__.e(\"vendor-chunks/eth-query\"), __webpack_require__.e(\"vendor-chunks/@metamask\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! cbw-sdk */ \"(ssr)/./node_modules/cbw-sdk/dist/index.js\", 19));\n                        if (typeof SDK !== \"function\" && typeof SDK.default === \"function\") return SDK.default;\n                        return SDK;\n                    })();\n                    sdk = new CoinbaseWalletSDK({\n                        ...parameters,\n                        reloadOnDisconnect\n                    });\n                    // Force types to retrieve private `walletExtension` method from the Coinbase Wallet SDK.\n                    const walletExtensionChainId = sdk.walletExtension?.getChainId();\n                    const chain = config.chains.find((chain)=>parameters.chainId ? chain.id === parameters.chainId : chain.id === walletExtensionChainId) || config.chains[0];\n                    const chainId = parameters.chainId || chain?.id;\n                    const jsonRpcUrl = parameters.jsonRpcUrl || chain?.rpcUrls.default.http[0];\n                    walletProvider = sdk.makeWeb3Provider(jsonRpcUrl, chainId);\n                }\n                return walletProvider;\n            },\n            async isAuthorized () {\n                try {\n                    const accounts = await this.getAccounts();\n                    return !!accounts.length;\n                } catch  {\n                    return false;\n                }\n            },\n            async switchChain ({ addEthereumChainParameter, chainId }) {\n                const chain = config.chains.find((chain)=>chain.id === chainId);\n                if (!chain) throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(new _wagmi_core__WEBPACK_IMPORTED_MODULE_3__.ChainNotConfiguredError());\n                const provider = await this.getProvider();\n                try {\n                    await provider.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [\n                            {\n                                chainId: (0,viem__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(chain.id)\n                            }\n                        ]\n                    });\n                    return chain;\n                } catch (error) {\n                    // Indicates chain is not added to provider\n                    if (error.code === 4902) {\n                        try {\n                            let blockExplorerUrls;\n                            if (addEthereumChainParameter?.blockExplorerUrls) blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;\n                            else blockExplorerUrls = chain.blockExplorers?.default.url ? [\n                                chain.blockExplorers?.default.url\n                            ] : [];\n                            let rpcUrls;\n                            if (addEthereumChainParameter?.rpcUrls?.length) rpcUrls = addEthereumChainParameter.rpcUrls;\n                            else rpcUrls = [\n                                chain.rpcUrls.default?.http[0] ?? \"\"\n                            ];\n                            const addEthereumChain = {\n                                blockExplorerUrls,\n                                chainId: (0,viem__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(chainId),\n                                chainName: addEthereumChainParameter?.chainName ?? chain.name,\n                                iconUrls: addEthereumChainParameter?.iconUrls,\n                                nativeCurrency: addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n                                rpcUrls\n                            };\n                            await provider.request({\n                                method: \"wallet_addEthereumChain\",\n                                params: [\n                                    addEthereumChain\n                                ]\n                            });\n                            return chain;\n                        } catch (error) {\n                            throw new viem__WEBPACK_IMPORTED_MODULE_2__.UserRejectedRequestError(error);\n                        }\n                    }\n                    throw new viem__WEBPACK_IMPORTED_MODULE_2__.SwitchChainError(error);\n                }\n            },\n            onAccountsChanged (accounts) {\n                if (accounts.length === 0) this.onDisconnect();\n                else config.emitter.emit(\"change\", {\n                    accounts: accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_1__.getAddress)(x))\n                });\n            },\n            onChainChanged (chain) {\n                const chainId = Number(chain);\n                config.emitter.emit(\"change\", {\n                    chainId\n                });\n            },\n            async onDisconnect (_error) {\n                config.emitter.emit(\"disconnect\");\n                const provider = await this.getProvider();\n                if (accountsChanged) {\n                    provider.removeListener(\"accountsChanged\", accountsChanged);\n                    accountsChanged = undefined;\n                }\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n            }\n        }));\n} //# sourceMappingURL=coinbaseWallet.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/esm/coinbaseWallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/esm/safe.js":
/*!*********************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/esm/safe.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   safe: () => (/* binding */ safe)\n/* harmony export */ });\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/promise/withTimeout.js\");\n\n\nsafe.type = \"safe\";\nfunction safe(parameters = {}) {\n    const { shimDisconnect = false } = parameters;\n    let provider_;\n    let disconnect;\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_0__.createConnector)((config)=>({\n            id: \"safe\",\n            name: \"Safe\",\n            type: safe.type,\n            async connect () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const accounts = await this.getAccounts();\n                const chainId = await this.getChainId();\n                if (!disconnect) {\n                    disconnect = this.onDisconnect.bind(this);\n                    provider.on(\"disconnect\", disconnect);\n                }\n                // Remove disconnected shim if it exists\n                if (shimDisconnect) await config.storage?.removeItem(\"safe.disconnected\");\n                return {\n                    accounts,\n                    chainId\n                };\n            },\n            async disconnect () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                // Add shim signalling connector is disconnected\n                if (shimDisconnect) await config.storage?.setItem(\"safe.disconnected\", true);\n            },\n            async getAccounts () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                return (await provider.request({\n                    method: \"eth_accounts\"\n                })).map(viem__WEBPACK_IMPORTED_MODULE_2__.getAddress);\n            },\n            async getProvider () {\n                // Only allowed in iframe context\n                const isIframe =  false && 0;\n                if (!isIframe) return;\n                if (!provider_) {\n                    const { default: SafeAppsSDK } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@noble\"), __webpack_require__.e(\"vendor-chunks/node-gyp-build\"), __webpack_require__.e(\"vendor-chunks/utf-8-validate\"), __webpack_require__.e(\"vendor-chunks/bufferutil\"), __webpack_require__.e(\"vendor-chunks/@safe-global\"), __webpack_require__.e(\"vendor-chunks/ws\")]).then(__webpack_require__.t.bind(__webpack_require__, /*! @safe-global/safe-apps-sdk */ \"(ssr)/./node_modules/@safe-global/safe-apps-sdk/dist/src/index.js\", 19));\n                    let SDK;\n                    if (typeof SafeAppsSDK !== \"function\" && typeof SafeAppsSDK.default === \"function\") SDK = SafeAppsSDK.default;\n                    else SDK = SafeAppsSDK;\n                    const sdk = new SDK(parameters);\n                    // `getInfo` hangs when not used in Safe App iFrame\n                    // https://github.com/safe-global/safe-apps-sdk/issues/263#issuecomment-1029835840\n                    const safe = await (0,viem__WEBPACK_IMPORTED_MODULE_3__.withTimeout)(()=>sdk.safe.getInfo(), {\n                        timeout: parameters.unstable_getInfoTimeout ?? 10\n                    });\n                    if (!safe) throw new Error(\"Could not load Safe information\");\n                    const { SafeAppProvider } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/@safe-global\").then(__webpack_require__.t.bind(__webpack_require__, /*! @safe-global/safe-apps-provider */ \"(ssr)/./node_modules/@safe-global/safe-apps-provider/dist/index.js\", 19));\n                    provider_ = new SafeAppProvider(safe, sdk);\n                }\n                return provider_;\n            },\n            async getChainId () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                return Number(provider.chainId);\n            },\n            async isAuthorized () {\n                try {\n                    const isDisconnected = shimDisconnect && // If shim exists in storage, connector is disconnected\n                    await config.storage?.getItem(\"safe.disconnected\");\n                    if (isDisconnected) return false;\n                    const accounts = await this.getAccounts();\n                    return !!accounts.length;\n                } catch  {\n                    return false;\n                }\n            },\n            onAccountsChanged () {\n            // Not relevant for Safe because changing account requires app reload.\n            },\n            onChainChanged () {\n            // Not relevant for Safe because Safe smart contract wallets only exist on single chain.\n            },\n            onDisconnect () {\n                config.emitter.emit(\"disconnect\");\n            }\n        }));\n} //# sourceMappingURL=safe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/esm/safe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/connectors/dist/esm/walletConnect.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/connectors/dist/esm/walletConnect.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   walletConnect: () => (/* binding */ walletConnect)\n/* harmony export */ });\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\");\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @wagmi/core */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n\n\nwalletConnect.type = \"walletConnect\";\nfunction walletConnect(parameters) {\n    const isNewChainsStale = parameters.isNewChainsStale ?? true;\n    let provider_;\n    let providerPromise;\n    const NAMESPACE = \"eip155\";\n    let accountsChanged;\n    let chainChanged;\n    let connect;\n    let displayUri;\n    let sessionDelete;\n    let disconnect;\n    return (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_0__.createConnector)((config)=>({\n            id: \"walletConnect\",\n            name: \"WalletConnect\",\n            type: walletConnect.type,\n            async setup () {\n                const provider = await this.getProvider().catch(()=>null);\n                if (!provider) return;\n                if (!connect) {\n                    connect = this.onConnect.bind(this);\n                    provider.on(\"connect\", connect);\n                }\n                if (!sessionDelete) {\n                    sessionDelete = this.onSessionDelete.bind(this);\n                    provider.on(\"session_delete\", sessionDelete);\n                }\n            },\n            async connect ({ chainId, ...rest } = {}) {\n                try {\n                    const provider = await this.getProvider();\n                    if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                    if (!displayUri) {\n                        displayUri = this.onDisplayUri;\n                        provider.on(\"display_uri\", displayUri);\n                    }\n                    let targetChainId = chainId;\n                    if (!targetChainId) {\n                        const state = await config.storage?.getItem(\"state\") ?? {};\n                        const isChainSupported = config.chains.some((x)=>x.id === state.chainId);\n                        if (isChainSupported) targetChainId = state.chainId;\n                        else targetChainId = config.chains[0]?.id;\n                    }\n                    if (!targetChainId) throw new Error(\"No chains found on connector.\");\n                    const isChainsStale = await this.isChainsStale();\n                    // If there is an active session with stale chains, disconnect current session.\n                    if (provider.session && isChainsStale) await provider.disconnect();\n                    // If there isn't an active session or chains are stale, connect.\n                    if (!provider.session || isChainsStale) {\n                        const optionalChains = config.chains.filter((chain)=>chain.id !== targetChainId).map((optionalChain)=>optionalChain.id);\n                        await provider.connect({\n                            optionalChains: [\n                                targetChainId,\n                                ...optionalChains\n                            ],\n                            ...\"pairingTopic\" in rest ? {\n                                pairingTopic: rest.pairingTopic\n                            } : {}\n                        });\n                        this.setRequestedChainsIds(config.chains.map((x)=>x.id));\n                    }\n                    // If session exists and chains are authorized, enable provider for required chain\n                    const accounts = (await provider.enable()).map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n                    const currentChainId = await this.getChainId();\n                    if (displayUri) {\n                        provider.removeListener(\"display_uri\", displayUri);\n                        displayUri = undefined;\n                    }\n                    if (connect) {\n                        provider.removeListener(\"connect\", connect);\n                        connect = undefined;\n                    }\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                    if (!sessionDelete) {\n                        sessionDelete = this.onSessionDelete.bind(this);\n                        provider.on(\"session_delete\", sessionDelete);\n                    }\n                    return {\n                        accounts,\n                        chainId: currentChainId\n                    };\n                } catch (error) {\n                    if (/(user rejected|connection request reset)/i.test(error?.message)) {\n                        throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                    }\n                    throw error;\n                }\n            },\n            async disconnect () {\n                const provider = await this.getProvider();\n                try {\n                    await provider?.disconnect();\n                } catch (error) {\n                    if (!/No matching key/i.test(error.message)) throw error;\n                } finally{\n                    if (chainChanged) {\n                        provider?.removeListener(\"chainChanged\", chainChanged);\n                        chainChanged = undefined;\n                    }\n                    if (disconnect) {\n                        provider?.removeListener(\"disconnect\", disconnect);\n                        disconnect = undefined;\n                    }\n                    if (!connect) {\n                        connect = this.onConnect.bind(this);\n                        provider?.on(\"connect\", connect);\n                    }\n                    if (accountsChanged) {\n                        provider?.removeListener(\"accountsChanged\", accountsChanged);\n                        accountsChanged = undefined;\n                    }\n                    if (sessionDelete) {\n                        provider?.removeListener(\"session_delete\", sessionDelete);\n                        sessionDelete = undefined;\n                    }\n                    this.setRequestedChainsIds([]);\n                }\n            },\n            async getAccounts () {\n                const provider = await this.getProvider();\n                return provider.accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n            },\n            async getProvider ({ chainId } = {}) {\n                async function initProvider() {\n                    const optionalChains = config.chains.map((x)=>x.id);\n                    if (!optionalChains.length) return;\n                    const { EthereumProvider } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/node-gyp-build\"), __webpack_require__.e(\"vendor-chunks/utf-8-validate\"), __webpack_require__.e(\"vendor-chunks/bufferutil\"), __webpack_require__.e(\"vendor-chunks/@walletconnect\"), __webpack_require__.e(\"vendor-chunks/multiformats\"), __webpack_require__.e(\"vendor-chunks/@stablelib\"), __webpack_require__.e(\"vendor-chunks/pino\"), __webpack_require__.e(\"vendor-chunks/uint8arrays\"), __webpack_require__.e(\"vendor-chunks/fast-redact\"), __webpack_require__.e(\"vendor-chunks/whatwg-url\"), __webpack_require__.e(\"vendor-chunks/pino-std-serializers\"), __webpack_require__.e(\"vendor-chunks/thread-stream\"), __webpack_require__.e(\"vendor-chunks/unstorage\"), __webpack_require__.e(\"vendor-chunks/tr46\"), __webpack_require__.e(\"vendor-chunks/node-fetch\"), __webpack_require__.e(\"vendor-chunks/idb-keyval\"), __webpack_require__.e(\"vendor-chunks/destr\"), __webpack_require__.e(\"vendor-chunks/sonic-boom\"), __webpack_require__.e(\"vendor-chunks/webidl-conversions\"), __webpack_require__.e(\"vendor-chunks/unfetch\"), __webpack_require__.e(\"vendor-chunks/strict-uri-encode\"), __webpack_require__.e(\"vendor-chunks/split-on-first\"), __webpack_require__.e(\"vendor-chunks/safe-stable-stringify\"), __webpack_require__.e(\"vendor-chunks/quick-format-unescaped\"), __webpack_require__.e(\"vendor-chunks/query-string\"), __webpack_require__.e(\"vendor-chunks/process-warning\"), __webpack_require__.e(\"vendor-chunks/on-exit-leak-free\"), __webpack_require__.e(\"vendor-chunks/lodash.isequal\"), __webpack_require__.e(\"vendor-chunks/isomorphic-unfetch\"), __webpack_require__.e(\"vendor-chunks/filter-obj\"), __webpack_require__.e(\"vendor-chunks/detect-browser\"), __webpack_require__.e(\"vendor-chunks/decode-uri-component\"), __webpack_require__.e(\"vendor-chunks/atomic-sleep\")]).then(__webpack_require__.bind(__webpack_require__, /*! @walletconnect/ethereum-provider */ \"(ssr)/./node_modules/@walletconnect/ethereum-provider/dist/index.es.js\"));\n                    return await EthereumProvider.init({\n                        ...parameters,\n                        disableProviderPing: true,\n                        optionalChains,\n                        projectId: parameters.projectId,\n                        rpcMap: Object.fromEntries(config.chains.map((chain)=>[\n                                chain.id,\n                                chain.rpcUrls.default.http[0]\n                            ])),\n                        showQrModal: parameters.showQrModal ?? true\n                    });\n                }\n                if (!provider_) {\n                    if (!providerPromise) providerPromise = initProvider();\n                    provider_ = await providerPromise;\n                    provider_?.events.setMaxListeners(Number.POSITIVE_INFINITY);\n                }\n                if (chainId) await this.switchChain?.({\n                    chainId\n                });\n                return provider_;\n            },\n            async getChainId () {\n                const provider = await this.getProvider();\n                return provider.chainId;\n            },\n            async isAuthorized () {\n                try {\n                    const [accounts, provider] = await Promise.all([\n                        this.getAccounts(),\n                        this.getProvider()\n                    ]);\n                    // If an account does not exist on the session, then the connector is unauthorized.\n                    if (!accounts.length) return false;\n                    // If the chains are stale on the session, then the connector is unauthorized.\n                    const isChainsStale = await this.isChainsStale();\n                    if (isChainsStale && provider.session) {\n                        await provider.disconnect().catch(()=>{});\n                        return false;\n                    }\n                    return true;\n                } catch  {\n                    return false;\n                }\n            },\n            async switchChain ({ addEthereumChainParameter, chainId }) {\n                const provider = await this.getProvider();\n                if (!provider) throw new _wagmi_core__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const chain = config.chains.find((x)=>x.id === chainId);\n                if (!chain) throw new viem__WEBPACK_IMPORTED_MODULE_3__.SwitchChainError(new _wagmi_core__WEBPACK_IMPORTED_MODULE_4__.ChainNotConfiguredError());\n                try {\n                    await Promise.all([\n                        new Promise((resolve)=>{\n                            const listener = ({ chainId: currentChainId })=>{\n                                if (currentChainId === chainId) {\n                                    config.emitter.off(\"change\", listener);\n                                    resolve();\n                                }\n                            };\n                            config.emitter.on(\"change\", listener);\n                        }),\n                        provider.request({\n                            method: \"wallet_switchEthereumChain\",\n                            params: [\n                                {\n                                    chainId: (0,viem__WEBPACK_IMPORTED_MODULE_5__.numberToHex)(chainId)\n                                }\n                            ]\n                        })\n                    ]);\n                    const requestedChains = await this.getRequestedChainsIds();\n                    this.setRequestedChainsIds([\n                        ...requestedChains,\n                        chainId\n                    ]);\n                    return chain;\n                } catch (err) {\n                    const error = err;\n                    if (/(user rejected)/i.test(error.message)) throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                    // Indicates chain is not added to provider\n                    try {\n                        let blockExplorerUrls;\n                        if (addEthereumChainParameter?.blockExplorerUrls) blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;\n                        else blockExplorerUrls = chain.blockExplorers?.default.url ? [\n                            chain.blockExplorers?.default.url\n                        ] : [];\n                        let rpcUrls;\n                        if (addEthereumChainParameter?.rpcUrls?.length) rpcUrls = addEthereumChainParameter.rpcUrls;\n                        else rpcUrls = [\n                            ...chain.rpcUrls.default.http\n                        ];\n                        const addEthereumChain = {\n                            blockExplorerUrls,\n                            chainId: (0,viem__WEBPACK_IMPORTED_MODULE_5__.numberToHex)(chainId),\n                            chainName: addEthereumChainParameter?.chainName ?? chain.name,\n                            iconUrls: addEthereumChainParameter?.iconUrls,\n                            nativeCurrency: addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n                            rpcUrls\n                        };\n                        await provider.request({\n                            method: \"wallet_addEthereumChain\",\n                            params: [\n                                addEthereumChain\n                            ]\n                        });\n                        const requestedChains = await this.getRequestedChainsIds();\n                        this.setRequestedChainsIds([\n                            ...requestedChains,\n                            chainId\n                        ]);\n                        return chain;\n                    } catch (error) {\n                        throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                    }\n                }\n            },\n            onAccountsChanged (accounts) {\n                if (accounts.length === 0) this.onDisconnect();\n                else config.emitter.emit(\"change\", {\n                    accounts: accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x))\n                });\n            },\n            onChainChanged (chain) {\n                const chainId = Number(chain);\n                config.emitter.emit(\"change\", {\n                    chainId\n                });\n            },\n            async onConnect (connectInfo) {\n                const chainId = Number(connectInfo.chainId);\n                const accounts = await this.getAccounts();\n                config.emitter.emit(\"connect\", {\n                    accounts,\n                    chainId\n                });\n            },\n            async onDisconnect (_error) {\n                this.setRequestedChainsIds([]);\n                config.emitter.emit(\"disconnect\");\n                const provider = await this.getProvider();\n                if (accountsChanged) {\n                    provider.removeListener(\"accountsChanged\", accountsChanged);\n                    accountsChanged = undefined;\n                }\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                if (sessionDelete) {\n                    provider.removeListener(\"session_delete\", sessionDelete);\n                    sessionDelete = undefined;\n                }\n                if (!connect) {\n                    connect = this.onConnect.bind(this);\n                    provider.on(\"connect\", connect);\n                }\n            },\n            onDisplayUri (uri) {\n                config.emitter.emit(\"message\", {\n                    type: \"display_uri\",\n                    data: uri\n                });\n            },\n            onSessionDelete () {\n                this.onDisconnect();\n            },\n            getNamespaceChainsIds () {\n                if (!provider_) return [];\n                const chainIds = provider_.session?.namespaces[NAMESPACE]?.accounts?.map((account)=>Number.parseInt(account.split(\":\")[1] || \"\"));\n                return chainIds ?? [];\n            },\n            async getRequestedChainsIds () {\n                return await config.storage?.getItem(this.requestedChainsStorageKey) ?? [];\n            },\n            /**\n         * Checks if the target chains match the chains that were\n         * initially requested by the connector for the WalletConnect session.\n         * If there is a mismatch, this means that the chains on the connector\n         * are considered stale, and need to be revalidated at a later point (via\n         * connection).\n         *\n         * There may be a scenario where a dapp adds a chain to the\n         * connector later on, however, this chain will not have been approved or rejected\n         * by the wallet. In this case, the chain is considered stale.\n         */ async isChainsStale () {\n                if (!isNewChainsStale) return false;\n                const connectorChains = config.chains.map((x)=>x.id);\n                const namespaceChains = this.getNamespaceChainsIds();\n                if (namespaceChains.length && !namespaceChains.some((id)=>connectorChains.includes(id))) return false;\n                const requestedChains = await this.getRequestedChainsIds();\n                return !connectorChains.every((id)=>requestedChains.includes(id));\n            },\n            async setRequestedChainsIds (chains) {\n                await config.storage?.setItem(this.requestedChainsStorageKey, chains);\n            },\n            get requestedChainsStorageKey () {\n                return `${this.id}.requestedChains`;\n            }\n        }));\n} //# sourceMappingURL=walletConnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/connectors/dist/esm/walletConnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/connect.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/connect.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connect: () => (/* binding */ connect)\n/* harmony export */ });\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n\n/** https://wagmi.sh/core/api/actions/connect */ async function connect(config, parameters) {\n    // \"Register\" connector if not already created\n    let connector;\n    if (typeof parameters.connector === \"function\") {\n        connector = config._internal.connectors.setup(parameters.connector);\n    } else connector = parameters.connector;\n    // Check if connector is already connected\n    if (connector.uid === config.state.current) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorAlreadyConnectedError();\n    try {\n        config.setState((x)=>({\n                ...x,\n                status: \"connecting\"\n            }));\n        connector.emitter.emit(\"message\", {\n            type: \"connecting\"\n        });\n        const data = await connector.connect({\n            chainId: parameters.chainId\n        });\n        const accounts = data.accounts;\n        connector.emitter.off(\"connect\", config._internal.events.connect);\n        connector.emitter.on(\"change\", config._internal.events.change);\n        connector.emitter.on(\"disconnect\", config._internal.events.disconnect);\n        await config.storage?.setItem(\"recentConnectorId\", connector.id);\n        config.setState((x)=>({\n                ...x,\n                connections: new Map(x.connections).set(connector.uid, {\n                    accounts,\n                    chainId: data.chainId,\n                    connector: connector\n                }),\n                current: connector.uid,\n                status: \"connected\"\n            }));\n        return {\n            accounts,\n            chainId: data.chainId\n        };\n    } catch (error) {\n        config.setState((x)=>({\n                ...x,\n                // Keep existing connector connected in case of error\n                status: x.current ? \"connected\" : \"disconnected\"\n            }));\n        throw error;\n    }\n} //# sourceMappingURL=connect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9jb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNFO0FBQ3RFLDhDQUE4QyxHQUN2QyxlQUFlQyxRQUFRQyxNQUFNLEVBQUVDLFVBQVU7SUFDNUMsOENBQThDO0lBQzlDLElBQUlDO0lBQ0osSUFBSSxPQUFPRCxXQUFXQyxTQUFTLEtBQUssWUFBWTtRQUM1Q0EsWUFBWUYsT0FBT0csU0FBUyxDQUFDQyxVQUFVLENBQUNDLEtBQUssQ0FBQ0osV0FBV0MsU0FBUztJQUN0RSxPQUVJQSxZQUFZRCxXQUFXQyxTQUFTO0lBQ3BDLDBDQUEwQztJQUMxQyxJQUFJQSxVQUFVSSxHQUFHLEtBQUtOLE9BQU9PLEtBQUssQ0FBQ0MsT0FBTyxFQUN0QyxNQUFNLElBQUlWLDZFQUE4QkE7SUFDNUMsSUFBSTtRQUNBRSxPQUFPUyxRQUFRLENBQUMsQ0FBQ0MsSUFBTztnQkFBRSxHQUFHQSxDQUFDO2dCQUFFQyxRQUFRO1lBQWE7UUFDckRULFVBQVVVLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLFdBQVc7WUFBRUMsTUFBTTtRQUFhO1FBQ3ZELE1BQU1DLE9BQU8sTUFBTWIsVUFBVUgsT0FBTyxDQUFDO1lBQUVpQixTQUFTZixXQUFXZSxPQUFPO1FBQUM7UUFDbkUsTUFBTUMsV0FBV0YsS0FBS0UsUUFBUTtRQUM5QmYsVUFBVVUsT0FBTyxDQUFDTSxHQUFHLENBQUMsV0FBV2xCLE9BQU9HLFNBQVMsQ0FBQ2dCLE1BQU0sQ0FBQ3BCLE9BQU87UUFDaEVHLFVBQVVVLE9BQU8sQ0FBQ1EsRUFBRSxDQUFDLFVBQVVwQixPQUFPRyxTQUFTLENBQUNnQixNQUFNLENBQUNFLE1BQU07UUFDN0RuQixVQUFVVSxPQUFPLENBQUNRLEVBQUUsQ0FBQyxjQUFjcEIsT0FBT0csU0FBUyxDQUFDZ0IsTUFBTSxDQUFDRyxVQUFVO1FBQ3JFLE1BQU10QixPQUFPdUIsT0FBTyxFQUFFQyxRQUFRLHFCQUFxQnRCLFVBQVV1QixFQUFFO1FBQy9EekIsT0FBT1MsUUFBUSxDQUFDLENBQUNDLElBQU87Z0JBQ3BCLEdBQUdBLENBQUM7Z0JBQ0pnQixhQUFhLElBQUlDLElBQUlqQixFQUFFZ0IsV0FBVyxFQUFFRSxHQUFHLENBQUMxQixVQUFVSSxHQUFHLEVBQUU7b0JBQ25EVztvQkFDQUQsU0FBU0QsS0FBS0MsT0FBTztvQkFDckJkLFdBQVdBO2dCQUNmO2dCQUNBTSxTQUFTTixVQUFVSSxHQUFHO2dCQUN0QkssUUFBUTtZQUNaO1FBQ0EsT0FBTztZQUFFTTtZQUFVRCxTQUFTRCxLQUFLQyxPQUFPO1FBQUM7SUFDN0MsRUFDQSxPQUFPYSxPQUFPO1FBQ1Y3QixPQUFPUyxRQUFRLENBQUMsQ0FBQ0MsSUFBTztnQkFDcEIsR0FBR0EsQ0FBQztnQkFDSixxREFBcUQ7Z0JBQ3JEQyxRQUFRRCxFQUFFRixPQUFPLEdBQUcsY0FBYztZQUN0QztRQUNBLE1BQU1xQjtJQUNWO0FBQ0osRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9jb25uZWN0LmpzPzU1M2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29ubmVjdG9yQWxyZWFkeUNvbm5lY3RlZEVycm9yLCB9IGZyb20gJy4uL2Vycm9ycy9jb25maWcuanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9jb25uZWN0ICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29ubmVjdChjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICAvLyBcIlJlZ2lzdGVyXCIgY29ubmVjdG9yIGlmIG5vdCBhbHJlYWR5IGNyZWF0ZWRcbiAgICBsZXQgY29ubmVjdG9yO1xuICAgIGlmICh0eXBlb2YgcGFyYW1ldGVycy5jb25uZWN0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgY29ubmVjdG9yID0gY29uZmlnLl9pbnRlcm5hbC5jb25uZWN0b3JzLnNldHVwKHBhcmFtZXRlcnMuY29ubmVjdG9yKTtcbiAgICB9XG4gICAgZWxzZVxuICAgICAgICBjb25uZWN0b3IgPSBwYXJhbWV0ZXJzLmNvbm5lY3RvcjtcbiAgICAvLyBDaGVjayBpZiBjb25uZWN0b3IgaXMgYWxyZWFkeSBjb25uZWN0ZWRcbiAgICBpZiAoY29ubmVjdG9yLnVpZCA9PT0gY29uZmlnLnN0YXRlLmN1cnJlbnQpXG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0b3JBbHJlYWR5Q29ubmVjdGVkRXJyb3IoKTtcbiAgICB0cnkge1xuICAgICAgICBjb25maWcuc2V0U3RhdGUoKHgpID0+ICh7IC4uLngsIHN0YXR1czogJ2Nvbm5lY3RpbmcnIH0pKTtcbiAgICAgICAgY29ubmVjdG9yLmVtaXR0ZXIuZW1pdCgnbWVzc2FnZScsIHsgdHlwZTogJ2Nvbm5lY3RpbmcnIH0pO1xuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgY29ubmVjdG9yLmNvbm5lY3QoeyBjaGFpbklkOiBwYXJhbWV0ZXJzLmNoYWluSWQgfSk7XG4gICAgICAgIGNvbnN0IGFjY291bnRzID0gZGF0YS5hY2NvdW50cztcbiAgICAgICAgY29ubmVjdG9yLmVtaXR0ZXIub2ZmKCdjb25uZWN0JywgY29uZmlnLl9pbnRlcm5hbC5ldmVudHMuY29ubmVjdCk7XG4gICAgICAgIGNvbm5lY3Rvci5lbWl0dGVyLm9uKCdjaGFuZ2UnLCBjb25maWcuX2ludGVybmFsLmV2ZW50cy5jaGFuZ2UpO1xuICAgICAgICBjb25uZWN0b3IuZW1pdHRlci5vbignZGlzY29ubmVjdCcsIGNvbmZpZy5faW50ZXJuYWwuZXZlbnRzLmRpc2Nvbm5lY3QpO1xuICAgICAgICBhd2FpdCBjb25maWcuc3RvcmFnZT8uc2V0SXRlbSgncmVjZW50Q29ubmVjdG9ySWQnLCBjb25uZWN0b3IuaWQpO1xuICAgICAgICBjb25maWcuc2V0U3RhdGUoKHgpID0+ICh7XG4gICAgICAgICAgICAuLi54LFxuICAgICAgICAgICAgY29ubmVjdGlvbnM6IG5ldyBNYXAoeC5jb25uZWN0aW9ucykuc2V0KGNvbm5lY3Rvci51aWQsIHtcbiAgICAgICAgICAgICAgICBhY2NvdW50cyxcbiAgICAgICAgICAgICAgICBjaGFpbklkOiBkYXRhLmNoYWluSWQsXG4gICAgICAgICAgICAgICAgY29ubmVjdG9yOiBjb25uZWN0b3IsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGN1cnJlbnQ6IGNvbm5lY3Rvci51aWQsXG4gICAgICAgICAgICBzdGF0dXM6ICdjb25uZWN0ZWQnLFxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiB7IGFjY291bnRzLCBjaGFpbklkOiBkYXRhLmNoYWluSWQgfTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbmZpZy5zZXRTdGF0ZSgoeCkgPT4gKHtcbiAgICAgICAgICAgIC4uLngsXG4gICAgICAgICAgICAvLyBLZWVwIGV4aXN0aW5nIGNvbm5lY3RvciBjb25uZWN0ZWQgaW4gY2FzZSBvZiBlcnJvclxuICAgICAgICAgICAgc3RhdHVzOiB4LmN1cnJlbnQgPyAnY29ubmVjdGVkJyA6ICdkaXNjb25uZWN0ZWQnLFxuICAgICAgICB9KSk7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbm5lY3QuanMubWFwIl0sIm5hbWVzIjpbIkNvbm5lY3RvckFscmVhZHlDb25uZWN0ZWRFcnJvciIsImNvbm5lY3QiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiY29ubmVjdG9yIiwiX2ludGVybmFsIiwiY29ubmVjdG9ycyIsInNldHVwIiwidWlkIiwic3RhdGUiLCJjdXJyZW50Iiwic2V0U3RhdGUiLCJ4Iiwic3RhdHVzIiwiZW1pdHRlciIsImVtaXQiLCJ0eXBlIiwiZGF0YSIsImNoYWluSWQiLCJhY2NvdW50cyIsIm9mZiIsImV2ZW50cyIsIm9uIiwiY2hhbmdlIiwiZGlzY29ubmVjdCIsInN0b3JhZ2UiLCJzZXRJdGVtIiwiaWQiLCJjb25uZWN0aW9ucyIsIk1hcCIsInNldCIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/connect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/disconnect.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/disconnect.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   disconnect: () => (/* binding */ disconnect)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/disconnect */ async function disconnect(config, parameters = {}) {\n    let connector;\n    if (parameters.connector) connector = parameters.connector;\n    else {\n        const { connections, current } = config.state;\n        const connection = connections.get(current);\n        connector = connection?.connector;\n    }\n    const connections = config.state.connections;\n    if (connector) {\n        await connector.disconnect();\n        connector.emitter.off(\"change\", config._internal.events.change);\n        connector.emitter.off(\"disconnect\", config._internal.events.disconnect);\n        connector.emitter.on(\"connect\", config._internal.events.connect);\n        connections.delete(connector.uid);\n    }\n    config.setState((x)=>{\n        // if no connections exist, move to disconnected state\n        if (connections.size === 0) return {\n            ...x,\n            connections: new Map(),\n            current: null,\n            status: \"disconnected\"\n        };\n        // switch over to another connection\n        const nextConnection = connections.values().next().value;\n        return {\n            ...x,\n            connections: new Map(connections),\n            current: nextConnection.connector.uid\n        };\n    });\n    // Set recent connector if exists\n    {\n        const current = config.state.current;\n        if (!current) return;\n        const connector = config.state.connections.get(current)?.connector;\n        if (!connector) return;\n        await config.storage?.setItem(\"recentConnectorId\", connector.id);\n    }\n} //# sourceMappingURL=disconnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9kaXNjb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpREFBaUQsR0FDMUMsZUFBZUEsV0FBV0MsTUFBTSxFQUFFQyxhQUFhLENBQUMsQ0FBQztJQUNwRCxJQUFJQztJQUNKLElBQUlELFdBQVdDLFNBQVMsRUFDcEJBLFlBQVlELFdBQVdDLFNBQVM7U0FDL0I7UUFDRCxNQUFNLEVBQUVDLFdBQVcsRUFBRUMsT0FBTyxFQUFFLEdBQUdKLE9BQU9LLEtBQUs7UUFDN0MsTUFBTUMsYUFBYUgsWUFBWUksR0FBRyxDQUFDSDtRQUNuQ0YsWUFBWUksWUFBWUo7SUFDNUI7SUFDQSxNQUFNQyxjQUFjSCxPQUFPSyxLQUFLLENBQUNGLFdBQVc7SUFDNUMsSUFBSUQsV0FBVztRQUNYLE1BQU1BLFVBQVVILFVBQVU7UUFDMUJHLFVBQVVNLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFVBQVVULE9BQU9VLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDQyxNQUFNO1FBQzlEVixVQUFVTSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxjQUFjVCxPQUFPVSxTQUFTLENBQUNDLE1BQU0sQ0FBQ1osVUFBVTtRQUN0RUcsVUFBVU0sT0FBTyxDQUFDSyxFQUFFLENBQUMsV0FBV2IsT0FBT1UsU0FBUyxDQUFDQyxNQUFNLENBQUNHLE9BQU87UUFDL0RYLFlBQVlZLE1BQU0sQ0FBQ2IsVUFBVWMsR0FBRztJQUNwQztJQUNBaEIsT0FBT2lCLFFBQVEsQ0FBQyxDQUFDQztRQUNiLHNEQUFzRDtRQUN0RCxJQUFJZixZQUFZZ0IsSUFBSSxLQUFLLEdBQ3JCLE9BQU87WUFDSCxHQUFHRCxDQUFDO1lBQ0pmLGFBQWEsSUFBSWlCO1lBQ2pCaEIsU0FBUztZQUNUaUIsUUFBUTtRQUNaO1FBQ0osb0NBQW9DO1FBQ3BDLE1BQU1DLGlCQUFpQm5CLFlBQVlvQixNQUFNLEdBQUdDLElBQUksR0FBR0MsS0FBSztRQUN4RCxPQUFPO1lBQ0gsR0FBR1AsQ0FBQztZQUNKZixhQUFhLElBQUlpQixJQUFJakI7WUFDckJDLFNBQVNrQixlQUFlcEIsU0FBUyxDQUFDYyxHQUFHO1FBQ3pDO0lBQ0o7SUFDQSxpQ0FBaUM7SUFDakM7UUFDSSxNQUFNWixVQUFVSixPQUFPSyxLQUFLLENBQUNELE9BQU87UUFDcEMsSUFBSSxDQUFDQSxTQUNEO1FBQ0osTUFBTUYsWUFBWUYsT0FBT0ssS0FBSyxDQUFDRixXQUFXLENBQUNJLEdBQUcsQ0FBQ0gsVUFBVUY7UUFDekQsSUFBSSxDQUFDQSxXQUNEO1FBQ0osTUFBTUYsT0FBTzBCLE9BQU8sRUFBRUMsUUFBUSxxQkFBcUJ6QixVQUFVMEIsRUFBRTtJQUNuRTtBQUNKLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvZGlzY29ubmVjdC5qcz9mOGExIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvZGlzY29ubmVjdCAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRpc2Nvbm5lY3QoY29uZmlnLCBwYXJhbWV0ZXJzID0ge30pIHtcbiAgICBsZXQgY29ubmVjdG9yO1xuICAgIGlmIChwYXJhbWV0ZXJzLmNvbm5lY3RvcilcbiAgICAgICAgY29ubmVjdG9yID0gcGFyYW1ldGVycy5jb25uZWN0b3I7XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHsgY29ubmVjdGlvbnMsIGN1cnJlbnQgfSA9IGNvbmZpZy5zdGF0ZTtcbiAgICAgICAgY29uc3QgY29ubmVjdGlvbiA9IGNvbm5lY3Rpb25zLmdldChjdXJyZW50KTtcbiAgICAgICAgY29ubmVjdG9yID0gY29ubmVjdGlvbj8uY29ubmVjdG9yO1xuICAgIH1cbiAgICBjb25zdCBjb25uZWN0aW9ucyA9IGNvbmZpZy5zdGF0ZS5jb25uZWN0aW9ucztcbiAgICBpZiAoY29ubmVjdG9yKSB7XG4gICAgICAgIGF3YWl0IGNvbm5lY3Rvci5kaXNjb25uZWN0KCk7XG4gICAgICAgIGNvbm5lY3Rvci5lbWl0dGVyLm9mZignY2hhbmdlJywgY29uZmlnLl9pbnRlcm5hbC5ldmVudHMuY2hhbmdlKTtcbiAgICAgICAgY29ubmVjdG9yLmVtaXR0ZXIub2ZmKCdkaXNjb25uZWN0JywgY29uZmlnLl9pbnRlcm5hbC5ldmVudHMuZGlzY29ubmVjdCk7XG4gICAgICAgIGNvbm5lY3Rvci5lbWl0dGVyLm9uKCdjb25uZWN0JywgY29uZmlnLl9pbnRlcm5hbC5ldmVudHMuY29ubmVjdCk7XG4gICAgICAgIGNvbm5lY3Rpb25zLmRlbGV0ZShjb25uZWN0b3IudWlkKTtcbiAgICB9XG4gICAgY29uZmlnLnNldFN0YXRlKCh4KSA9PiB7XG4gICAgICAgIC8vIGlmIG5vIGNvbm5lY3Rpb25zIGV4aXN0LCBtb3ZlIHRvIGRpc2Nvbm5lY3RlZCBzdGF0ZVxuICAgICAgICBpZiAoY29ubmVjdGlvbnMuc2l6ZSA9PT0gMClcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4ueCxcbiAgICAgICAgICAgICAgICBjb25uZWN0aW9uczogbmV3IE1hcCgpLFxuICAgICAgICAgICAgICAgIGN1cnJlbnQ6IG51bGwsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiAnZGlzY29ubmVjdGVkJyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIC8vIHN3aXRjaCBvdmVyIHRvIGFub3RoZXIgY29ubmVjdGlvblxuICAgICAgICBjb25zdCBuZXh0Q29ubmVjdGlvbiA9IGNvbm5lY3Rpb25zLnZhbHVlcygpLm5leHQoKS52YWx1ZTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLngsXG4gICAgICAgICAgICBjb25uZWN0aW9uczogbmV3IE1hcChjb25uZWN0aW9ucyksXG4gICAgICAgICAgICBjdXJyZW50OiBuZXh0Q29ubmVjdGlvbi5jb25uZWN0b3IudWlkLFxuICAgICAgICB9O1xuICAgIH0pO1xuICAgIC8vIFNldCByZWNlbnQgY29ubmVjdG9yIGlmIGV4aXN0c1xuICAgIHtcbiAgICAgICAgY29uc3QgY3VycmVudCA9IGNvbmZpZy5zdGF0ZS5jdXJyZW50O1xuICAgICAgICBpZiAoIWN1cnJlbnQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGNvbm5lY3RvciA9IGNvbmZpZy5zdGF0ZS5jb25uZWN0aW9ucy5nZXQoY3VycmVudCk/LmNvbm5lY3RvcjtcbiAgICAgICAgaWYgKCFjb25uZWN0b3IpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGF3YWl0IGNvbmZpZy5zdG9yYWdlPy5zZXRJdGVtKCdyZWNlbnRDb25uZWN0b3JJZCcsIGNvbm5lY3Rvci5pZCk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlzY29ubmVjdC5qcy5tYXAiXSwibmFtZXMiOlsiZGlzY29ubmVjdCIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJjb25uZWN0b3IiLCJjb25uZWN0aW9ucyIsImN1cnJlbnQiLCJzdGF0ZSIsImNvbm5lY3Rpb24iLCJnZXQiLCJlbWl0dGVyIiwib2ZmIiwiX2ludGVybmFsIiwiZXZlbnRzIiwiY2hhbmdlIiwib24iLCJjb25uZWN0IiwiZGVsZXRlIiwidWlkIiwic2V0U3RhdGUiLCJ4Iiwic2l6ZSIsIk1hcCIsInN0YXR1cyIsIm5leHRDb25uZWN0aW9uIiwidmFsdWVzIiwibmV4dCIsInZhbHVlIiwic3RvcmFnZSIsInNldEl0ZW0iLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/disconnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getAccount.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getAccount.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccount: () => (/* binding */ getAccount)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/getAccount */ function getAccount(config) {\n    const uid = config.state.current;\n    const connection = config.state.connections.get(uid);\n    const addresses = connection?.accounts;\n    const address = addresses?.[0];\n    const chain = config.chains.find((chain)=>chain.id === connection?.chainId);\n    const status = config.state.status;\n    switch(status){\n        case \"connected\":\n            return {\n                address: address,\n                addresses: addresses,\n                chain,\n                chainId: connection?.chainId,\n                connector: connection?.connector,\n                isConnected: true,\n                isConnecting: false,\n                isDisconnected: false,\n                isReconnecting: false,\n                status\n            };\n        case \"reconnecting\":\n            return {\n                address,\n                addresses,\n                chain,\n                chainId: connection?.chainId,\n                connector: connection?.connector,\n                isConnected: !!address,\n                isConnecting: false,\n                isDisconnected: false,\n                isReconnecting: true,\n                status\n            };\n        case \"connecting\":\n            return {\n                address,\n                addresses,\n                chain,\n                chainId: connection?.chainId,\n                connector: connection?.connector,\n                isConnected: false,\n                isConnecting: true,\n                isDisconnected: false,\n                isReconnecting: false,\n                status\n            };\n        case \"disconnected\":\n            return {\n                address: undefined,\n                addresses: undefined,\n                chain: undefined,\n                chainId: undefined,\n                connector: undefined,\n                isConnected: false,\n                isConnecting: false,\n                isDisconnected: true,\n                isReconnecting: false,\n                status\n            };\n    }\n} //# sourceMappingURL=getAccount.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRBY2NvdW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpREFBaUQsR0FDMUMsU0FBU0EsV0FBV0MsTUFBTTtJQUM3QixNQUFNQyxNQUFNRCxPQUFPRSxLQUFLLENBQUNDLE9BQU87SUFDaEMsTUFBTUMsYUFBYUosT0FBT0UsS0FBSyxDQUFDRyxXQUFXLENBQUNDLEdBQUcsQ0FBQ0w7SUFDaEQsTUFBTU0sWUFBWUgsWUFBWUk7SUFDOUIsTUFBTUMsVUFBVUYsV0FBVyxDQUFDLEVBQUU7SUFDOUIsTUFBTUcsUUFBUVYsT0FBT1csTUFBTSxDQUFDQyxJQUFJLENBQUMsQ0FBQ0YsUUFBVUEsTUFBTUcsRUFBRSxLQUFLVCxZQUFZVTtJQUNyRSxNQUFNQyxTQUFTZixPQUFPRSxLQUFLLENBQUNhLE1BQU07SUFDbEMsT0FBUUE7UUFDSixLQUFLO1lBQ0QsT0FBTztnQkFDSE4sU0FBU0E7Z0JBQ1RGLFdBQVdBO2dCQUNYRztnQkFDQUksU0FBU1YsWUFBWVU7Z0JBQ3JCRSxXQUFXWixZQUFZWTtnQkFDdkJDLGFBQWE7Z0JBQ2JDLGNBQWM7Z0JBQ2RDLGdCQUFnQjtnQkFDaEJDLGdCQUFnQjtnQkFDaEJMO1lBQ0o7UUFDSixLQUFLO1lBQ0QsT0FBTztnQkFDSE47Z0JBQ0FGO2dCQUNBRztnQkFDQUksU0FBU1YsWUFBWVU7Z0JBQ3JCRSxXQUFXWixZQUFZWTtnQkFDdkJDLGFBQWEsQ0FBQyxDQUFDUjtnQkFDZlMsY0FBYztnQkFDZEMsZ0JBQWdCO2dCQUNoQkMsZ0JBQWdCO2dCQUNoQkw7WUFDSjtRQUNKLEtBQUs7WUFDRCxPQUFPO2dCQUNITjtnQkFDQUY7Z0JBQ0FHO2dCQUNBSSxTQUFTVixZQUFZVTtnQkFDckJFLFdBQVdaLFlBQVlZO2dCQUN2QkMsYUFBYTtnQkFDYkMsY0FBYztnQkFDZEMsZ0JBQWdCO2dCQUNoQkMsZ0JBQWdCO2dCQUNoQkw7WUFDSjtRQUNKLEtBQUs7WUFDRCxPQUFPO2dCQUNITixTQUFTWTtnQkFDVGQsV0FBV2M7Z0JBQ1hYLE9BQU9XO2dCQUNQUCxTQUFTTztnQkFDVEwsV0FBV0s7Z0JBQ1hKLGFBQWE7Z0JBQ2JDLGNBQWM7Z0JBQ2RDLGdCQUFnQjtnQkFDaEJDLGdCQUFnQjtnQkFDaEJMO1lBQ0o7SUFDUjtBQUNKLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvZ2V0QWNjb3VudC5qcz9hYjE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvZ2V0QWNjb3VudCAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFjY291bnQoY29uZmlnKSB7XG4gICAgY29uc3QgdWlkID0gY29uZmlnLnN0YXRlLmN1cnJlbnQ7XG4gICAgY29uc3QgY29ubmVjdGlvbiA9IGNvbmZpZy5zdGF0ZS5jb25uZWN0aW9ucy5nZXQodWlkKTtcbiAgICBjb25zdCBhZGRyZXNzZXMgPSBjb25uZWN0aW9uPy5hY2NvdW50cztcbiAgICBjb25zdCBhZGRyZXNzID0gYWRkcmVzc2VzPy5bMF07XG4gICAgY29uc3QgY2hhaW4gPSBjb25maWcuY2hhaW5zLmZpbmQoKGNoYWluKSA9PiBjaGFpbi5pZCA9PT0gY29ubmVjdGlvbj8uY2hhaW5JZCk7XG4gICAgY29uc3Qgc3RhdHVzID0gY29uZmlnLnN0YXRlLnN0YXR1cztcbiAgICBzd2l0Y2ggKHN0YXR1cykge1xuICAgICAgICBjYXNlICdjb25uZWN0ZWQnOlxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBhZGRyZXNzOiBhZGRyZXNzLFxuICAgICAgICAgICAgICAgIGFkZHJlc3NlczogYWRkcmVzc2VzLFxuICAgICAgICAgICAgICAgIGNoYWluLFxuICAgICAgICAgICAgICAgIGNoYWluSWQ6IGNvbm5lY3Rpb24/LmNoYWluSWQsXG4gICAgICAgICAgICAgICAgY29ubmVjdG9yOiBjb25uZWN0aW9uPy5jb25uZWN0b3IsXG4gICAgICAgICAgICAgICAgaXNDb25uZWN0ZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgaXNDb25uZWN0aW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpc0Rpc2Nvbm5lY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNSZWNvbm5lY3Rpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHN0YXR1cyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgJ3JlY29ubmVjdGluZyc6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGFkZHJlc3MsXG4gICAgICAgICAgICAgICAgYWRkcmVzc2VzLFxuICAgICAgICAgICAgICAgIGNoYWluLFxuICAgICAgICAgICAgICAgIGNoYWluSWQ6IGNvbm5lY3Rpb24/LmNoYWluSWQsXG4gICAgICAgICAgICAgICAgY29ubmVjdG9yOiBjb25uZWN0aW9uPy5jb25uZWN0b3IsXG4gICAgICAgICAgICAgICAgaXNDb25uZWN0ZWQ6ICEhYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBpc0Nvbm5lY3Rpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzRGlzY29ubmVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpc1JlY29ubmVjdGluZzogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzdGF0dXMsXG4gICAgICAgICAgICB9O1xuICAgICAgICBjYXNlICdjb25uZWN0aW5nJzpcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBhZGRyZXNzZXMsXG4gICAgICAgICAgICAgICAgY2hhaW4sXG4gICAgICAgICAgICAgICAgY2hhaW5JZDogY29ubmVjdGlvbj8uY2hhaW5JZCxcbiAgICAgICAgICAgICAgICBjb25uZWN0b3I6IGNvbm5lY3Rpb24/LmNvbm5lY3RvcixcbiAgICAgICAgICAgICAgICBpc0Nvbm5lY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNDb25uZWN0aW5nOiB0cnVlLFxuICAgICAgICAgICAgICAgIGlzRGlzY29ubmVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpc1JlY29ubmVjdGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgc3RhdHVzLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgY2FzZSAnZGlzY29ubmVjdGVkJzpcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYWRkcmVzczogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGFkZHJlc3NlczogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGNoYWluOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgY2hhaW5JZDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGNvbm5lY3RvcjogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGlzQ29ubmVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpc0Nvbm5lY3Rpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzRGlzY29ubmVjdGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIGlzUmVjb25uZWN0aW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzdGF0dXMsXG4gICAgICAgICAgICB9O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEFjY291bnQuanMubWFwIl0sIm5hbWVzIjpbImdldEFjY291bnQiLCJjb25maWciLCJ1aWQiLCJzdGF0ZSIsImN1cnJlbnQiLCJjb25uZWN0aW9uIiwiY29ubmVjdGlvbnMiLCJnZXQiLCJhZGRyZXNzZXMiLCJhY2NvdW50cyIsImFkZHJlc3MiLCJjaGFpbiIsImNoYWlucyIsImZpbmQiLCJpZCIsImNoYWluSWQiLCJzdGF0dXMiLCJjb25uZWN0b3IiLCJpc0Nvbm5lY3RlZCIsImlzQ29ubmVjdGluZyIsImlzRGlzY29ubmVjdGVkIiwiaXNSZWNvbm5lY3RpbmciLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getBalance.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getBalance.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBalance: () => (/* binding */ getBalance)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/contract.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/fromHex.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/data/trim.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/unit/formatUnits.js\");\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/getBalance.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n/* harmony import */ var _utils_getUnit_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/getUnit.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getUnit.js\");\n/* harmony import */ var _readContracts_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./readContracts.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContracts.js\");\n\n\n\n\n\n/** https://wagmi.sh/core/api/actions/getBalance */ async function getBalance(config, parameters) {\n    const { address, blockNumber, blockTag, chainId, token: tokenAddress, unit = \"ether\" } = parameters;\n    if (tokenAddress) {\n        try {\n            return getTokenBalance(config, {\n                balanceAddress: address,\n                chainId,\n                symbolType: \"string\",\n                tokenAddress\n            });\n        } catch (error) {\n            // In the chance that there is an error upon decoding the contract result,\n            // it could be likely that the contract data is represented as bytes32 instead\n            // of a string.\n            if (error instanceof viem__WEBPACK_IMPORTED_MODULE_0__.ContractFunctionExecutionError) {\n                const balance = await getTokenBalance(config, {\n                    balanceAddress: address,\n                    chainId,\n                    symbolType: \"bytes32\",\n                    tokenAddress\n                });\n                const symbol = (0,viem__WEBPACK_IMPORTED_MODULE_1__.hexToString)((0,viem__WEBPACK_IMPORTED_MODULE_2__.trim)(balance.symbol, {\n                    dir: \"right\"\n                }));\n                return {\n                    ...balance,\n                    symbol\n                };\n            }\n            throw error;\n        }\n    }\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_4__.getBalance, \"getBalance\");\n    const value = await action(blockNumber ? {\n        address,\n        blockNumber\n    } : {\n        address,\n        blockTag\n    });\n    const chain = config.chains.find((x)=>x.id === chainId) ?? client.chain;\n    return {\n        decimals: chain.nativeCurrency.decimals,\n        formatted: (0,viem__WEBPACK_IMPORTED_MODULE_5__.formatUnits)(value, (0,_utils_getUnit_js__WEBPACK_IMPORTED_MODULE_6__.getUnit)(unit)),\n        symbol: chain.nativeCurrency.symbol,\n        value\n    };\n}\nasync function getTokenBalance(config, parameters) {\n    const { balanceAddress, chainId, symbolType, tokenAddress, unit } = parameters;\n    const contract = {\n        abi: [\n            {\n                type: \"function\",\n                name: \"balanceOf\",\n                stateMutability: \"view\",\n                inputs: [\n                    {\n                        type: \"address\"\n                    }\n                ],\n                outputs: [\n                    {\n                        type: \"uint256\"\n                    }\n                ]\n            },\n            {\n                type: \"function\",\n                name: \"decimals\",\n                stateMutability: \"view\",\n                inputs: [],\n                outputs: [\n                    {\n                        type: \"uint8\"\n                    }\n                ]\n            },\n            {\n                type: \"function\",\n                name: \"symbol\",\n                stateMutability: \"view\",\n                inputs: [],\n                outputs: [\n                    {\n                        type: symbolType\n                    }\n                ]\n            }\n        ],\n        address: tokenAddress\n    };\n    const [value, decimals, symbol] = await (0,_readContracts_js__WEBPACK_IMPORTED_MODULE_7__.readContracts)(config, {\n        allowFailure: false,\n        contracts: [\n            {\n                ...contract,\n                functionName: \"balanceOf\",\n                args: [\n                    balanceAddress\n                ],\n                chainId\n            },\n            {\n                ...contract,\n                functionName: \"decimals\",\n                chainId\n            },\n            {\n                ...contract,\n                functionName: \"symbol\",\n                chainId\n            }\n        ]\n    });\n    const formatted = (0,viem__WEBPACK_IMPORTED_MODULE_5__.formatUnits)(value ?? \"0\", (0,_utils_getUnit_js__WEBPACK_IMPORTED_MODULE_6__.getUnit)(unit ?? decimals));\n    return {\n        decimals,\n        formatted,\n        symbol,\n        value\n    };\n} //# sourceMappingURL=getBalance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRCYWxhbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF1RjtBQUN6QjtBQUNaO0FBQ0o7QUFDSztBQUNuRCxpREFBaUQsR0FDMUMsZUFBZUksV0FBV0ssTUFBTSxFQUFFQyxVQUFVO0lBQy9DLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxXQUFXLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxPQUFPQyxZQUFZLEVBQUVDLE9BQU8sT0FBTyxFQUFHLEdBQUdQO0lBQzFGLElBQUlNLGNBQWM7UUFDZCxJQUFJO1lBQ0EsT0FBT0UsZ0JBQWdCVCxRQUFRO2dCQUMzQlUsZ0JBQWdCUjtnQkFDaEJHO2dCQUNBTSxZQUFZO2dCQUNaSjtZQUNKO1FBQ0osRUFDQSxPQUFPSyxPQUFPO1lBQ1YsMEVBQTBFO1lBQzFFLDhFQUE4RTtZQUM5RSxlQUFlO1lBQ2YsSUFBSUEsaUJBQWlCckIsZ0VBQThCQSxFQUFFO2dCQUNqRCxNQUFNc0IsVUFBVSxNQUFNSixnQkFBZ0JULFFBQVE7b0JBQzFDVSxnQkFBZ0JSO29CQUNoQkc7b0JBQ0FNLFlBQVk7b0JBQ1pKO2dCQUNKO2dCQUNBLE1BQU1PLFNBQVNyQixpREFBV0EsQ0FBQ0MsMENBQUlBLENBQUNtQixRQUFRQyxNQUFNLEVBQUU7b0JBQUVDLEtBQUs7Z0JBQVE7Z0JBQy9ELE9BQU87b0JBQUUsR0FBR0YsT0FBTztvQkFBRUM7Z0JBQU87WUFDaEM7WUFDQSxNQUFNRjtRQUNWO0lBQ0o7SUFDQSxNQUFNSSxTQUFTaEIsT0FBT2lCLFNBQVMsQ0FBQztRQUFFWjtJQUFRO0lBQzFDLE1BQU1hLFNBQVNyQiw4REFBU0EsQ0FBQ21CLFFBQVFwQixvREFBZUEsRUFBRTtJQUNsRCxNQUFNdUIsUUFBUSxNQUFNRCxPQUFPZixjQUFjO1FBQUVEO1FBQVNDO0lBQVksSUFBSTtRQUFFRDtRQUFTRTtJQUFTO0lBQ3hGLE1BQU1nQixRQUFRcEIsT0FBT3FCLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUNDLElBQU1BLEVBQUVDLEVBQUUsS0FBS25CLFlBQVlXLE9BQU9JLEtBQUs7SUFDekUsT0FBTztRQUNISyxVQUFVTCxNQUFNTSxjQUFjLENBQUNELFFBQVE7UUFDdkNFLFdBQVduQyxpREFBV0EsQ0FBQzJCLE9BQU9yQiwwREFBT0EsQ0FBQ1U7UUFDdENNLFFBQVFNLE1BQU1NLGNBQWMsQ0FBQ1osTUFBTTtRQUNuQ0s7SUFDSjtBQUNKO0FBQ0EsZUFBZVYsZ0JBQWdCVCxNQUFNLEVBQUVDLFVBQVU7SUFDN0MsTUFBTSxFQUFFUyxjQUFjLEVBQUVMLE9BQU8sRUFBRU0sVUFBVSxFQUFFSixZQUFZLEVBQUVDLElBQUksRUFBRSxHQUFHUDtJQUNwRSxNQUFNMkIsV0FBVztRQUNiQyxLQUFLO1lBQ0Q7Z0JBQ0lDLE1BQU07Z0JBQ05DLE1BQU07Z0JBQ05DLGlCQUFpQjtnQkFDakJDLFFBQVE7b0JBQUM7d0JBQUVILE1BQU07b0JBQVU7aUJBQUU7Z0JBQzdCSSxTQUFTO29CQUFDO3dCQUFFSixNQUFNO29CQUFVO2lCQUFFO1lBQ2xDO1lBQ0E7Z0JBQ0lBLE1BQU07Z0JBQ05DLE1BQU07Z0JBQ05DLGlCQUFpQjtnQkFDakJDLFFBQVEsRUFBRTtnQkFDVkMsU0FBUztvQkFBQzt3QkFBRUosTUFBTTtvQkFBUTtpQkFBRTtZQUNoQztZQUNBO2dCQUNJQSxNQUFNO2dCQUNOQyxNQUFNO2dCQUNOQyxpQkFBaUI7Z0JBQ2pCQyxRQUFRLEVBQUU7Z0JBQ1ZDLFNBQVM7b0JBQUM7d0JBQUVKLE1BQU1uQjtvQkFBVztpQkFBRTtZQUNuQztTQUNIO1FBQ0RULFNBQVNLO0lBQ2I7SUFDQSxNQUFNLENBQUNZLE9BQU9NLFVBQVVYLE9BQU8sR0FBRyxNQUFNZixnRUFBYUEsQ0FBQ0MsUUFBUTtRQUMxRG1DLGNBQWM7UUFDZEMsV0FBVztZQUNQO2dCQUNJLEdBQUdSLFFBQVE7Z0JBQ1hTLGNBQWM7Z0JBQ2RDLE1BQU07b0JBQUM1QjtpQkFBZTtnQkFDdEJMO1lBQ0o7WUFDQTtnQkFBRSxHQUFHdUIsUUFBUTtnQkFBRVMsY0FBYztnQkFBWWhDO1lBQVE7WUFDakQ7Z0JBQUUsR0FBR3VCLFFBQVE7Z0JBQUVTLGNBQWM7Z0JBQVVoQztZQUFRO1NBQ2xEO0lBQ0w7SUFDQSxNQUFNc0IsWUFBWW5DLGlEQUFXQSxDQUFDMkIsU0FBUyxLQUFLckIsMERBQU9BLENBQUNVLFFBQVFpQjtJQUM1RCxPQUFPO1FBQUVBO1FBQVVFO1FBQVdiO1FBQVFLO0lBQU07QUFDaEQsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRCYWxhbmNlLmpzPzExZDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udHJhY3RGdW5jdGlvbkV4ZWN1dGlvbkVycm9yLCBmb3JtYXRVbml0cywgaGV4VG9TdHJpbmcsIHRyaW0sIH0gZnJvbSAndmllbSc7XG5pbXBvcnQgeyBnZXRCYWxhbmNlIGFzIHZpZW1fZ2V0QmFsYW5jZSwgfSBmcm9tICd2aWVtL2FjdGlvbnMnO1xuaW1wb3J0IHsgZ2V0QWN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvZ2V0QWN0aW9uLmpzJztcbmltcG9ydCB7IGdldFVuaXQgfSBmcm9tICcuLi91dGlscy9nZXRVbml0LmpzJztcbmltcG9ydCB7IHJlYWRDb250cmFjdHMgfSBmcm9tICcuL3JlYWRDb250cmFjdHMuanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9nZXRCYWxhbmNlICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QmFsYW5jZShjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGFkZHJlc3MsIGJsb2NrTnVtYmVyLCBibG9ja1RhZywgY2hhaW5JZCwgdG9rZW46IHRva2VuQWRkcmVzcywgdW5pdCA9ICdldGhlcicsIH0gPSBwYXJhbWV0ZXJzO1xuICAgIGlmICh0b2tlbkFkZHJlc3MpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBnZXRUb2tlbkJhbGFuY2UoY29uZmlnLCB7XG4gICAgICAgICAgICAgICAgYmFsYW5jZUFkZHJlc3M6IGFkZHJlc3MsXG4gICAgICAgICAgICAgICAgY2hhaW5JZCxcbiAgICAgICAgICAgICAgICBzeW1ib2xUeXBlOiAnc3RyaW5nJyxcbiAgICAgICAgICAgICAgICB0b2tlbkFkZHJlc3MsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIC8vIEluIHRoZSBjaGFuY2UgdGhhdCB0aGVyZSBpcyBhbiBlcnJvciB1cG9uIGRlY29kaW5nIHRoZSBjb250cmFjdCByZXN1bHQsXG4gICAgICAgICAgICAvLyBpdCBjb3VsZCBiZSBsaWtlbHkgdGhhdCB0aGUgY29udHJhY3QgZGF0YSBpcyByZXByZXNlbnRlZCBhcyBieXRlczMyIGluc3RlYWRcbiAgICAgICAgICAgIC8vIG9mIGEgc3RyaW5nLlxuICAgICAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgQ29udHJhY3RGdW5jdGlvbkV4ZWN1dGlvbkVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYmFsYW5jZSA9IGF3YWl0IGdldFRva2VuQmFsYW5jZShjb25maWcsIHtcbiAgICAgICAgICAgICAgICAgICAgYmFsYW5jZUFkZHJlc3M6IGFkZHJlc3MsXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQsXG4gICAgICAgICAgICAgICAgICAgIHN5bWJvbFR5cGU6ICdieXRlczMyJyxcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5BZGRyZXNzLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHN5bWJvbCA9IGhleFRvU3RyaW5nKHRyaW0oYmFsYW5jZS5zeW1ib2wsIHsgZGlyOiAncmlnaHQnIH0pKTtcbiAgICAgICAgICAgICAgICByZXR1cm4geyAuLi5iYWxhbmNlLCBzeW1ib2wgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGNsaWVudCA9IGNvbmZpZy5nZXRDbGllbnQoeyBjaGFpbklkIH0pO1xuICAgIGNvbnN0IGFjdGlvbiA9IGdldEFjdGlvbihjbGllbnQsIHZpZW1fZ2V0QmFsYW5jZSwgJ2dldEJhbGFuY2UnKTtcbiAgICBjb25zdCB2YWx1ZSA9IGF3YWl0IGFjdGlvbihibG9ja051bWJlciA/IHsgYWRkcmVzcywgYmxvY2tOdW1iZXIgfSA6IHsgYWRkcmVzcywgYmxvY2tUYWcgfSk7XG4gICAgY29uc3QgY2hhaW4gPSBjb25maWcuY2hhaW5zLmZpbmQoKHgpID0+IHguaWQgPT09IGNoYWluSWQpID8/IGNsaWVudC5jaGFpbjtcbiAgICByZXR1cm4ge1xuICAgICAgICBkZWNpbWFsczogY2hhaW4ubmF0aXZlQ3VycmVuY3kuZGVjaW1hbHMsXG4gICAgICAgIGZvcm1hdHRlZDogZm9ybWF0VW5pdHModmFsdWUsIGdldFVuaXQodW5pdCkpLFxuICAgICAgICBzeW1ib2w6IGNoYWluLm5hdGl2ZUN1cnJlbmN5LnN5bWJvbCxcbiAgICAgICAgdmFsdWUsXG4gICAgfTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGdldFRva2VuQmFsYW5jZShjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGJhbGFuY2VBZGRyZXNzLCBjaGFpbklkLCBzeW1ib2xUeXBlLCB0b2tlbkFkZHJlc3MsIHVuaXQgfSA9IHBhcmFtZXRlcnM7XG4gICAgY29uc3QgY29udHJhY3QgPSB7XG4gICAgICAgIGFiaTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdmdW5jdGlvbicsXG4gICAgICAgICAgICAgICAgbmFtZTogJ2JhbGFuY2VPZicsXG4gICAgICAgICAgICAgICAgc3RhdGVNdXRhYmlsaXR5OiAndmlldycsXG4gICAgICAgICAgICAgICAgaW5wdXRzOiBbeyB0eXBlOiAnYWRkcmVzcycgfV0sXG4gICAgICAgICAgICAgICAgb3V0cHV0czogW3sgdHlwZTogJ3VpbnQyNTYnIH1dLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnZnVuY3Rpb24nLFxuICAgICAgICAgICAgICAgIG5hbWU6ICdkZWNpbWFscycsXG4gICAgICAgICAgICAgICAgc3RhdGVNdXRhYmlsaXR5OiAndmlldycsXG4gICAgICAgICAgICAgICAgaW5wdXRzOiBbXSxcbiAgICAgICAgICAgICAgICBvdXRwdXRzOiBbeyB0eXBlOiAndWludDgnIH1dLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnZnVuY3Rpb24nLFxuICAgICAgICAgICAgICAgIG5hbWU6ICdzeW1ib2wnLFxuICAgICAgICAgICAgICAgIHN0YXRlTXV0YWJpbGl0eTogJ3ZpZXcnLFxuICAgICAgICAgICAgICAgIGlucHV0czogW10sXG4gICAgICAgICAgICAgICAgb3V0cHV0czogW3sgdHlwZTogc3ltYm9sVHlwZSB9XSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIGFkZHJlc3M6IHRva2VuQWRkcmVzcyxcbiAgICB9O1xuICAgIGNvbnN0IFt2YWx1ZSwgZGVjaW1hbHMsIHN5bWJvbF0gPSBhd2FpdCByZWFkQ29udHJhY3RzKGNvbmZpZywge1xuICAgICAgICBhbGxvd0ZhaWx1cmU6IGZhbHNlLFxuICAgICAgICBjb250cmFjdHM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAuLi5jb250cmFjdCxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbk5hbWU6ICdiYWxhbmNlT2YnLFxuICAgICAgICAgICAgICAgIGFyZ3M6IFtiYWxhbmNlQWRkcmVzc10sXG4gICAgICAgICAgICAgICAgY2hhaW5JZCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7IC4uLmNvbnRyYWN0LCBmdW5jdGlvbk5hbWU6ICdkZWNpbWFscycsIGNoYWluSWQgfSxcbiAgICAgICAgICAgIHsgLi4uY29udHJhY3QsIGZ1bmN0aW9uTmFtZTogJ3N5bWJvbCcsIGNoYWluSWQgfSxcbiAgICAgICAgXSxcbiAgICB9KTtcbiAgICBjb25zdCBmb3JtYXR0ZWQgPSBmb3JtYXRVbml0cyh2YWx1ZSA/PyAnMCcsIGdldFVuaXQodW5pdCA/PyBkZWNpbWFscykpO1xuICAgIHJldHVybiB7IGRlY2ltYWxzLCBmb3JtYXR0ZWQsIHN5bWJvbCwgdmFsdWUgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEJhbGFuY2UuanMubWFwIl0sIm5hbWVzIjpbIkNvbnRyYWN0RnVuY3Rpb25FeGVjdXRpb25FcnJvciIsImZvcm1hdFVuaXRzIiwiaGV4VG9TdHJpbmciLCJ0cmltIiwiZ2V0QmFsYW5jZSIsInZpZW1fZ2V0QmFsYW5jZSIsImdldEFjdGlvbiIsImdldFVuaXQiLCJyZWFkQ29udHJhY3RzIiwiY29uZmlnIiwicGFyYW1ldGVycyIsImFkZHJlc3MiLCJibG9ja051bWJlciIsImJsb2NrVGFnIiwiY2hhaW5JZCIsInRva2VuIiwidG9rZW5BZGRyZXNzIiwidW5pdCIsImdldFRva2VuQmFsYW5jZSIsImJhbGFuY2VBZGRyZXNzIiwic3ltYm9sVHlwZSIsImVycm9yIiwiYmFsYW5jZSIsInN5bWJvbCIsImRpciIsImNsaWVudCIsImdldENsaWVudCIsImFjdGlvbiIsInZhbHVlIiwiY2hhaW4iLCJjaGFpbnMiLCJmaW5kIiwieCIsImlkIiwiZGVjaW1hbHMiLCJuYXRpdmVDdXJyZW5jeSIsImZvcm1hdHRlZCIsImNvbnRyYWN0IiwiYWJpIiwidHlwZSIsIm5hbWUiLCJzdGF0ZU11dGFiaWxpdHkiLCJpbnB1dHMiLCJvdXRwdXRzIiwiYWxsb3dGYWlsdXJlIiwiY29udHJhY3RzIiwiZnVuY3Rpb25OYW1lIiwiYXJncyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getBalance.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getBlockNumber.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getBlockNumber.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBlockNumber: () => (/* binding */ getBlockNumber)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/getBlockNumber.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n/** https://wagmi.sh/core/api/actions/getBlockNumber */ function getBlockNumber(config, parameters = {}) {\n    const { chainId, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.getBlockNumber, \"getBlockNumber\");\n    return action(rest);\n} //# sourceMappingURL=getBlockNumber.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRCbG9ja051bWJlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0U7QUFDcEI7QUFDbEQscURBQXFELEdBQzlDLFNBQVNBLGVBQWVHLE1BQU0sRUFBRUMsYUFBYSxDQUFDLENBQUM7SUFDbEQsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsTUFBTSxHQUFHRjtJQUM3QixNQUFNRyxTQUFTSixPQUFPSyxTQUFTLENBQUM7UUFBRUg7SUFBUTtJQUMxQyxNQUFNSSxTQUFTUCw4REFBU0EsQ0FBQ0ssUUFBUU4sd0RBQW1CQSxFQUFFO0lBQ3RELE9BQU9RLE9BQU9IO0FBQ2xCLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvZ2V0QmxvY2tOdW1iZXIuanM/MTc1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRCbG9ja051bWJlciBhcyB2aWVtX2dldEJsb2NrTnVtYmVyLCB9IGZyb20gJ3ZpZW0vYWN0aW9ucyc7XG5pbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICcuLi91dGlscy9nZXRBY3Rpb24uanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9nZXRCbG9ja051bWJlciAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJsb2NrTnVtYmVyKGNvbmZpZywgcGFyYW1ldGVycyA9IHt9KSB7XG4gICAgY29uc3QgeyBjaGFpbklkLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IGNsaWVudCA9IGNvbmZpZy5nZXRDbGllbnQoeyBjaGFpbklkIH0pO1xuICAgIGNvbnN0IGFjdGlvbiA9IGdldEFjdGlvbihjbGllbnQsIHZpZW1fZ2V0QmxvY2tOdW1iZXIsICdnZXRCbG9ja051bWJlcicpO1xuICAgIHJldHVybiBhY3Rpb24ocmVzdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRCbG9ja051bWJlci5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0QmxvY2tOdW1iZXIiLCJ2aWVtX2dldEJsb2NrTnVtYmVyIiwiZ2V0QWN0aW9uIiwiY29uZmlnIiwicGFyYW1ldGVycyIsImNoYWluSWQiLCJyZXN0IiwiY2xpZW50IiwiZ2V0Q2xpZW50IiwiYWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getBlockNumber.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getChainId.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getChainId.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getChainId: () => (/* binding */ getChainId)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/getChainId */ function getChainId(config) {\n    return config.state.chainId;\n} //# sourceMappingURL=getChainId.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDaGFpbklkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpREFBaUQsR0FDMUMsU0FBU0EsV0FBV0MsTUFBTTtJQUM3QixPQUFPQSxPQUFPQyxLQUFLLENBQUNDLE9BQU87QUFDL0IsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDaGFpbklkLmpzPzExZTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9nZXRDaGFpbklkICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2hhaW5JZChjb25maWcpIHtcbiAgICByZXR1cm4gY29uZmlnLnN0YXRlLmNoYWluSWQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRDaGFpbklkLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRDaGFpbklkIiwiY29uZmlnIiwic3RhdGUiLCJjaGFpbklkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getChainId.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getChains.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getChains.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getChains: () => (/* binding */ getChains)\n/* harmony export */ });\n/* harmony import */ var _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/deepEqual.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\");\n\nlet previousChains = [];\n/** https://wagmi.sh/core/api/actions/getChains */ function getChains(config) {\n    const chains = config.chains;\n    if ((0,_utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(previousChains, chains)) return previousChains;\n    previousChains = chains;\n    return chains;\n} //# sourceMappingURL=getChains.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDaGFpbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0Q7QUFDbEQsSUFBSUMsaUJBQWlCLEVBQUU7QUFDdkIsZ0RBQWdELEdBQ3pDLFNBQVNDLFVBQVVDLE1BQU07SUFDNUIsTUFBTUMsU0FBU0QsT0FBT0MsTUFBTTtJQUM1QixJQUFJSiw4REFBU0EsQ0FBQ0MsZ0JBQWdCRyxTQUMxQixPQUFPSDtJQUNYQSxpQkFBaUJHO0lBQ2pCLE9BQU9BO0FBQ1gsRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDaGFpbnMuanM/MTRiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWVwRXF1YWwgfSBmcm9tICcuLi91dGlscy9kZWVwRXF1YWwuanMnO1xubGV0IHByZXZpb3VzQ2hhaW5zID0gW107XG4vKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL2dldENoYWlucyAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldENoYWlucyhjb25maWcpIHtcbiAgICBjb25zdCBjaGFpbnMgPSBjb25maWcuY2hhaW5zO1xuICAgIGlmIChkZWVwRXF1YWwocHJldmlvdXNDaGFpbnMsIGNoYWlucykpXG4gICAgICAgIHJldHVybiBwcmV2aW91c0NoYWlucztcbiAgICBwcmV2aW91c0NoYWlucyA9IGNoYWlucztcbiAgICByZXR1cm4gY2hhaW5zO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0Q2hhaW5zLmpzLm1hcCJdLCJuYW1lcyI6WyJkZWVwRXF1YWwiLCJwcmV2aW91c0NoYWlucyIsImdldENoYWlucyIsImNvbmZpZyIsImNoYWlucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getChains.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getClient.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getClient.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getClient: () => (/* binding */ getClient)\n/* harmony export */ });\nfunction getClient(config, parameters = {}) {\n    let client = undefined;\n    try {\n        client = config.getClient(parameters);\n    } catch  {}\n    return client;\n} //# sourceMappingURL=getClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLFVBQVVDLE1BQU0sRUFBRUMsYUFBYSxDQUFDLENBQUM7SUFDN0MsSUFBSUMsU0FBU0M7SUFDYixJQUFJO1FBQ0FELFNBQVNGLE9BQU9ELFNBQVMsQ0FBQ0U7SUFDOUIsRUFDQSxPQUFNLENBQUU7SUFDUixPQUFPQztBQUNYLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvZ2V0Q2xpZW50LmpzPzEzMmIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGdldENsaWVudChjb25maWcsIHBhcmFtZXRlcnMgPSB7fSkge1xuICAgIGxldCBjbGllbnQgPSB1bmRlZmluZWQ7XG4gICAgdHJ5IHtcbiAgICAgICAgY2xpZW50ID0gY29uZmlnLmdldENsaWVudChwYXJhbWV0ZXJzKTtcbiAgICB9XG4gICAgY2F0Y2ggeyB9XG4gICAgcmV0dXJuIGNsaWVudDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldENsaWVudC5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0Q2xpZW50IiwiY29uZmlnIiwicGFyYW1ldGVycyIsImNsaWVudCIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnections.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getConnections.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getConnections: () => (/* binding */ getConnections)\n/* harmony export */ });\n/* harmony import */ var _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/deepEqual.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\");\n\nlet previousConnections = [];\n/** https://wagmi.sh/core/api/actions/getConnections */ function getConnections(config) {\n    const connections = [\n        ...config.state.connections.values()\n    ];\n    if (config.state.status === \"reconnecting\") return previousConnections;\n    if ((0,_utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(previousConnections, connections)) return previousConnections;\n    previousConnections = connections;\n    return connections;\n} //# sourceMappingURL=getConnections.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDb25uZWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDtBQUNsRCxJQUFJQyxzQkFBc0IsRUFBRTtBQUM1QixxREFBcUQsR0FDOUMsU0FBU0MsZUFBZUMsTUFBTTtJQUNqQyxNQUFNQyxjQUFjO1dBQUlELE9BQU9FLEtBQUssQ0FBQ0QsV0FBVyxDQUFDRSxNQUFNO0tBQUc7SUFDMUQsSUFBSUgsT0FBT0UsS0FBSyxDQUFDRSxNQUFNLEtBQUssZ0JBQ3hCLE9BQU9OO0lBQ1gsSUFBSUQsOERBQVNBLENBQUNDLHFCQUFxQkcsY0FDL0IsT0FBT0g7SUFDWEEsc0JBQXNCRztJQUN0QixPQUFPQTtBQUNYLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvZ2V0Q29ubmVjdGlvbnMuanM/YTM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWVwRXF1YWwgfSBmcm9tICcuLi91dGlscy9kZWVwRXF1YWwuanMnO1xubGV0IHByZXZpb3VzQ29ubmVjdGlvbnMgPSBbXTtcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvZ2V0Q29ubmVjdGlvbnMgKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb25uZWN0aW9ucyhjb25maWcpIHtcbiAgICBjb25zdCBjb25uZWN0aW9ucyA9IFsuLi5jb25maWcuc3RhdGUuY29ubmVjdGlvbnMudmFsdWVzKCldO1xuICAgIGlmIChjb25maWcuc3RhdGUuc3RhdHVzID09PSAncmVjb25uZWN0aW5nJylcbiAgICAgICAgcmV0dXJuIHByZXZpb3VzQ29ubmVjdGlvbnM7XG4gICAgaWYgKGRlZXBFcXVhbChwcmV2aW91c0Nvbm5lY3Rpb25zLCBjb25uZWN0aW9ucykpXG4gICAgICAgIHJldHVybiBwcmV2aW91c0Nvbm5lY3Rpb25zO1xuICAgIHByZXZpb3VzQ29ubmVjdGlvbnMgPSBjb25uZWN0aW9ucztcbiAgICByZXR1cm4gY29ubmVjdGlvbnM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRDb25uZWN0aW9ucy5qcy5tYXAiXSwibmFtZXMiOlsiZGVlcEVxdWFsIiwicHJldmlvdXNDb25uZWN0aW9ucyIsImdldENvbm5lY3Rpb25zIiwiY29uZmlnIiwiY29ubmVjdGlvbnMiLCJzdGF0ZSIsInZhbHVlcyIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnections.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getConnectorClient: () => (/* binding */ getConnectorClient)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/custom.js\");\n/* harmony import */ var viem_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/utils */ \"(ssr)/./node_modules/viem/_esm/accounts/utils/parseAccount.js\");\n/* harmony import */ var viem_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/utils */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n\n\n\n/** https://wagmi.sh/core/api/actions/getConnectorClient */ async function getConnectorClient(config, parameters = {}) {\n    // Get connection\n    let connection;\n    if (parameters.connector) {\n        const { connector } = parameters;\n        const [accounts, chainId] = await Promise.all([\n            connector.getAccounts(),\n            connector.getChainId()\n        ]);\n        connection = {\n            accounts: accounts,\n            chainId,\n            connector\n        };\n    } else connection = config.state.connections.get(config.state.current);\n    if (!connection) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorNotConnectedError();\n    const chainId = parameters.chainId ?? connection.chainId;\n    // Check connector using same chainId as connection\n    const connectorChainId = await connection.connector.getChainId();\n    if (connectorChainId !== connection.chainId) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorChainMismatchError({\n        connectionChainId: connection.chainId,\n        connectorChainId\n    });\n    const connector = connection.connector;\n    if (connector.getClient) return connector.getClient({\n        chainId\n    });\n    // Default using `custom` transport\n    const account = (0,viem_utils__WEBPACK_IMPORTED_MODULE_1__.parseAccount)(parameters.account ?? connection.accounts[0]);\n    account.address = (0,viem_utils__WEBPACK_IMPORTED_MODULE_2__.getAddress)(account.address); // TODO: Checksum address as part of `parseAccount`?\n    const chain = config.chains.find((chain)=>chain.id === chainId);\n    const provider = await connection.connector.getProvider({\n        chainId\n    });\n    // If account was provided, check that it exists on the connector\n    if (parameters.account && !connection.accounts.some((x)=>x.toLowerCase() === account.address.toLowerCase())) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorAccountNotFoundError({\n        address: account.address,\n        connector\n    });\n    return (0,viem__WEBPACK_IMPORTED_MODULE_3__.createClient)({\n        account,\n        chain,\n        name: \"Connector Client\",\n        transport: (opts)=>(0,viem__WEBPACK_IMPORTED_MODULE_4__.custom)(provider)({\n                ...opts,\n                retryCount: 0\n            })\n    });\n} //# sourceMappingURL=getConnectorClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDb25uZWN0b3JDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTZDO0FBQ1M7QUFDd0U7QUFDOUgseURBQXlELEdBQ2xELGVBQWVPLG1CQUFtQkMsTUFBTSxFQUFFQyxhQUFhLENBQUMsQ0FBQztJQUM1RCxpQkFBaUI7SUFDakIsSUFBSUM7SUFDSixJQUFJRCxXQUFXRSxTQUFTLEVBQUU7UUFDdEIsTUFBTSxFQUFFQSxTQUFTLEVBQUUsR0FBR0Y7UUFDdEIsTUFBTSxDQUFDRyxVQUFVQyxRQUFRLEdBQUcsTUFBTUMsUUFBUUMsR0FBRyxDQUFDO1lBQzFDSixVQUFVSyxXQUFXO1lBQ3JCTCxVQUFVTSxVQUFVO1NBQ3ZCO1FBQ0RQLGFBQWE7WUFDVEUsVUFBVUE7WUFDVkM7WUFDQUY7UUFDSjtJQUNKLE9BRUlELGFBQWFGLE9BQU9VLEtBQUssQ0FBQ0MsV0FBVyxDQUFDQyxHQUFHLENBQUNaLE9BQU9VLEtBQUssQ0FBQ0csT0FBTztJQUNsRSxJQUFJLENBQUNYLFlBQ0QsTUFBTSxJQUFJSix5RUFBMEJBO0lBQ3hDLE1BQU1PLFVBQVVKLFdBQVdJLE9BQU8sSUFBSUgsV0FBV0csT0FBTztJQUN4RCxtREFBbUQ7SUFDbkQsTUFBTVMsbUJBQW1CLE1BQU1aLFdBQVdDLFNBQVMsQ0FBQ00sVUFBVTtJQUM5RCxJQUFJSyxxQkFBcUJaLFdBQVdHLE9BQU8sRUFDdkMsTUFBTSxJQUFJUiwwRUFBMkJBLENBQUM7UUFDbENrQixtQkFBbUJiLFdBQVdHLE9BQU87UUFDckNTO0lBQ0o7SUFDSixNQUFNWCxZQUFZRCxXQUFXQyxTQUFTO0lBQ3RDLElBQUlBLFVBQVVhLFNBQVMsRUFDbkIsT0FBT2IsVUFBVWEsU0FBUyxDQUFDO1FBQUVYO0lBQVE7SUFDekMsbUNBQW1DO0lBQ25DLE1BQU1ZLFVBQVV0Qix3REFBWUEsQ0FBQ00sV0FBV2dCLE9BQU8sSUFBSWYsV0FBV0UsUUFBUSxDQUFDLEVBQUU7SUFDekVhLFFBQVFDLE9BQU8sR0FBR3hCLHNEQUFVQSxDQUFDdUIsUUFBUUMsT0FBTyxHQUFHLG9EQUFvRDtJQUNuRyxNQUFNQyxRQUFRbkIsT0FBT29CLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUNGLFFBQVVBLE1BQU1HLEVBQUUsS0FBS2pCO0lBQ3pELE1BQU1rQixXQUFZLE1BQU1yQixXQUFXQyxTQUFTLENBQUNxQixXQUFXLENBQUM7UUFBRW5CO0lBQVE7SUFDbkUsaUVBQWlFO0lBQ2pFLElBQUlKLFdBQVdnQixPQUFPLElBQ2xCLENBQUNmLFdBQVdFLFFBQVEsQ0FBQ3FCLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxXQUFXLE9BQU9WLFFBQVFDLE9BQU8sQ0FBQ1MsV0FBVyxLQUNoRixNQUFNLElBQUkvQiw0RUFBNkJBLENBQUM7UUFDcENzQixTQUFTRCxRQUFRQyxPQUFPO1FBQ3hCZjtJQUNKO0lBQ0osT0FBT1gsa0RBQVlBLENBQUM7UUFDaEJ5QjtRQUNBRTtRQUNBUyxNQUFNO1FBQ05DLFdBQVcsQ0FBQ0MsT0FBU3JDLDRDQUFNQSxDQUFDOEIsVUFBVTtnQkFBRSxHQUFHTyxJQUFJO2dCQUFFQyxZQUFZO1lBQUU7SUFDbkU7QUFDSixFQUNBLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL2dldENvbm5lY3RvckNsaWVudC5qcz83YjM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCwgY3VzdG9tLCB9IGZyb20gJ3ZpZW0nO1xuaW1wb3J0IHsgZ2V0QWRkcmVzcywgcGFyc2VBY2NvdW50IH0gZnJvbSAndmllbS91dGlscyc7XG5pbXBvcnQgeyBDb25uZWN0b3JBY2NvdW50Tm90Rm91bmRFcnJvciwgQ29ubmVjdG9yQ2hhaW5NaXNtYXRjaEVycm9yLCBDb25uZWN0b3JOb3RDb25uZWN0ZWRFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMvY29uZmlnLmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvZ2V0Q29ubmVjdG9yQ2xpZW50ICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Q29ubmVjdG9yQ2xpZW50KGNvbmZpZywgcGFyYW1ldGVycyA9IHt9KSB7XG4gICAgLy8gR2V0IGNvbm5lY3Rpb25cbiAgICBsZXQgY29ubmVjdGlvbjtcbiAgICBpZiAocGFyYW1ldGVycy5jb25uZWN0b3IpIHtcbiAgICAgICAgY29uc3QgeyBjb25uZWN0b3IgfSA9IHBhcmFtZXRlcnM7XG4gICAgICAgIGNvbnN0IFthY2NvdW50cywgY2hhaW5JZF0gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgICAgICBjb25uZWN0b3IuZ2V0QWNjb3VudHMoKSxcbiAgICAgICAgICAgIGNvbm5lY3Rvci5nZXRDaGFpbklkKCksXG4gICAgICAgIF0pO1xuICAgICAgICBjb25uZWN0aW9uID0ge1xuICAgICAgICAgICAgYWNjb3VudHM6IGFjY291bnRzLFxuICAgICAgICAgICAgY2hhaW5JZCxcbiAgICAgICAgICAgIGNvbm5lY3RvcixcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZVxuICAgICAgICBjb25uZWN0aW9uID0gY29uZmlnLnN0YXRlLmNvbm5lY3Rpb25zLmdldChjb25maWcuc3RhdGUuY3VycmVudCk7XG4gICAgaWYgKCFjb25uZWN0aW9uKVxuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdG9yTm90Q29ubmVjdGVkRXJyb3IoKTtcbiAgICBjb25zdCBjaGFpbklkID0gcGFyYW1ldGVycy5jaGFpbklkID8/IGNvbm5lY3Rpb24uY2hhaW5JZDtcbiAgICAvLyBDaGVjayBjb25uZWN0b3IgdXNpbmcgc2FtZSBjaGFpbklkIGFzIGNvbm5lY3Rpb25cbiAgICBjb25zdCBjb25uZWN0b3JDaGFpbklkID0gYXdhaXQgY29ubmVjdGlvbi5jb25uZWN0b3IuZ2V0Q2hhaW5JZCgpO1xuICAgIGlmIChjb25uZWN0b3JDaGFpbklkICE9PSBjb25uZWN0aW9uLmNoYWluSWQpXG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0b3JDaGFpbk1pc21hdGNoRXJyb3Ioe1xuICAgICAgICAgICAgY29ubmVjdGlvbkNoYWluSWQ6IGNvbm5lY3Rpb24uY2hhaW5JZCxcbiAgICAgICAgICAgIGNvbm5lY3RvckNoYWluSWQsXG4gICAgICAgIH0pO1xuICAgIGNvbnN0IGNvbm5lY3RvciA9IGNvbm5lY3Rpb24uY29ubmVjdG9yO1xuICAgIGlmIChjb25uZWN0b3IuZ2V0Q2xpZW50KVxuICAgICAgICByZXR1cm4gY29ubmVjdG9yLmdldENsaWVudCh7IGNoYWluSWQgfSk7XG4gICAgLy8gRGVmYXVsdCB1c2luZyBgY3VzdG9tYCB0cmFuc3BvcnRcbiAgICBjb25zdCBhY2NvdW50ID0gcGFyc2VBY2NvdW50KHBhcmFtZXRlcnMuYWNjb3VudCA/PyBjb25uZWN0aW9uLmFjY291bnRzWzBdKTtcbiAgICBhY2NvdW50LmFkZHJlc3MgPSBnZXRBZGRyZXNzKGFjY291bnQuYWRkcmVzcyk7IC8vIFRPRE86IENoZWNrc3VtIGFkZHJlc3MgYXMgcGFydCBvZiBgcGFyc2VBY2NvdW50YD9cbiAgICBjb25zdCBjaGFpbiA9IGNvbmZpZy5jaGFpbnMuZmluZCgoY2hhaW4pID0+IGNoYWluLmlkID09PSBjaGFpbklkKTtcbiAgICBjb25zdCBwcm92aWRlciA9IChhd2FpdCBjb25uZWN0aW9uLmNvbm5lY3Rvci5nZXRQcm92aWRlcih7IGNoYWluSWQgfSkpO1xuICAgIC8vIElmIGFjY291bnQgd2FzIHByb3ZpZGVkLCBjaGVjayB0aGF0IGl0IGV4aXN0cyBvbiB0aGUgY29ubmVjdG9yXG4gICAgaWYgKHBhcmFtZXRlcnMuYWNjb3VudCAmJlxuICAgICAgICAhY29ubmVjdGlvbi5hY2NvdW50cy5zb21lKCh4KSA9PiB4LnRvTG93ZXJDYXNlKCkgPT09IGFjY291bnQuYWRkcmVzcy50b0xvd2VyQ2FzZSgpKSlcbiAgICAgICAgdGhyb3cgbmV3IENvbm5lY3RvckFjY291bnROb3RGb3VuZEVycm9yKHtcbiAgICAgICAgICAgIGFkZHJlc3M6IGFjY291bnQuYWRkcmVzcyxcbiAgICAgICAgICAgIGNvbm5lY3RvcixcbiAgICAgICAgfSk7XG4gICAgcmV0dXJuIGNyZWF0ZUNsaWVudCh7XG4gICAgICAgIGFjY291bnQsXG4gICAgICAgIGNoYWluLFxuICAgICAgICBuYW1lOiAnQ29ubmVjdG9yIENsaWVudCcsXG4gICAgICAgIHRyYW5zcG9ydDogKG9wdHMpID0+IGN1c3RvbShwcm92aWRlcikoeyAuLi5vcHRzLCByZXRyeUNvdW50OiAwIH0pLFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0Q29ubmVjdG9yQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJjdXN0b20iLCJnZXRBZGRyZXNzIiwicGFyc2VBY2NvdW50IiwiQ29ubmVjdG9yQWNjb3VudE5vdEZvdW5kRXJyb3IiLCJDb25uZWN0b3JDaGFpbk1pc21hdGNoRXJyb3IiLCJDb25uZWN0b3JOb3RDb25uZWN0ZWRFcnJvciIsImdldENvbm5lY3RvckNsaWVudCIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJjb25uZWN0aW9uIiwiY29ubmVjdG9yIiwiYWNjb3VudHMiLCJjaGFpbklkIiwiUHJvbWlzZSIsImFsbCIsImdldEFjY291bnRzIiwiZ2V0Q2hhaW5JZCIsInN0YXRlIiwiY29ubmVjdGlvbnMiLCJnZXQiLCJjdXJyZW50IiwiY29ubmVjdG9yQ2hhaW5JZCIsImNvbm5lY3Rpb25DaGFpbklkIiwiZ2V0Q2xpZW50IiwiYWNjb3VudCIsImFkZHJlc3MiLCJjaGFpbiIsImNoYWlucyIsImZpbmQiLCJpZCIsInByb3ZpZGVyIiwiZ2V0UHJvdmlkZXIiLCJzb21lIiwieCIsInRvTG93ZXJDYXNlIiwibmFtZSIsInRyYW5zcG9ydCIsIm9wdHMiLCJyZXRyeUNvdW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectors.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getConnectors.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getConnectors: () => (/* binding */ getConnectors)\n/* harmony export */ });\n/* harmony import */ var _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/deepEqual.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\");\n\nlet previousConnectors = [];\n/** https://wagmi.sh/core/api/actions/getConnectors */ function getConnectors(config) {\n    const connectors = config.connectors;\n    if ((0,_utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(previousConnectors, connectors)) return previousConnectors;\n    previousConnectors = connectors;\n    return connectors;\n} //# sourceMappingURL=getConnectors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDb25uZWN0b3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtEO0FBQ2xELElBQUlDLHFCQUFxQixFQUFFO0FBQzNCLG9EQUFvRCxHQUM3QyxTQUFTQyxjQUFjQyxNQUFNO0lBQ2hDLE1BQU1DLGFBQWFELE9BQU9DLFVBQVU7SUFDcEMsSUFBSUosOERBQVNBLENBQUNDLG9CQUFvQkcsYUFDOUIsT0FBT0g7SUFDWEEscUJBQXFCRztJQUNyQixPQUFPQTtBQUNYLEVBQ0EseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvZ2V0Q29ubmVjdG9ycy5qcz9jMWNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZXBFcXVhbCB9IGZyb20gJy4uL3V0aWxzL2RlZXBFcXVhbC5qcyc7XG5sZXQgcHJldmlvdXNDb25uZWN0b3JzID0gW107XG4vKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL2dldENvbm5lY3RvcnMgKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb25uZWN0b3JzKGNvbmZpZykge1xuICAgIGNvbnN0IGNvbm5lY3RvcnMgPSBjb25maWcuY29ubmVjdG9ycztcbiAgICBpZiAoZGVlcEVxdWFsKHByZXZpb3VzQ29ubmVjdG9ycywgY29ubmVjdG9ycykpXG4gICAgICAgIHJldHVybiBwcmV2aW91c0Nvbm5lY3RvcnM7XG4gICAgcHJldmlvdXNDb25uZWN0b3JzID0gY29ubmVjdG9ycztcbiAgICByZXR1cm4gY29ubmVjdG9ycztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldENvbm5lY3RvcnMuanMubWFwIl0sIm5hbWVzIjpbImRlZXBFcXVhbCIsInByZXZpb3VzQ29ubmVjdG9ycyIsImdldENvbm5lY3RvcnMiLCJjb25maWciLCJjb25uZWN0b3JzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAddress.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getEnsAddress.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsAddress: () => (/* binding */ getEnsAddress)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/ens/getEnsAddress.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n/** https://wagmi.sh/core/api/actions/getEnsAddress */ function getEnsAddress(config, parameters) {\n    const { chainId, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.getEnsAddress, \"getEnsAddress\");\n    return action(rest);\n} //# sourceMappingURL=getEnsAddress.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRFbnNBZGRyZXNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvRTtBQUNsQjtBQUNsRCxvREFBb0QsR0FDN0MsU0FBU0EsY0FBY0csTUFBTSxFQUFFQyxVQUFVO0lBQzVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUdDLE1BQU0sR0FBR0Y7SUFDN0IsTUFBTUcsU0FBU0osT0FBT0ssU0FBUyxDQUFDO1FBQUVIO0lBQVE7SUFDMUMsTUFBTUksU0FBU1AsOERBQVNBLENBQUNLLFFBQVFOLHVEQUFrQkEsRUFBRTtJQUNyRCxPQUFPUSxPQUFPSDtBQUNsQixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL2dldEVuc0FkZHJlc3MuanM/OGY0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRFbnNBZGRyZXNzIGFzIHZpZW1fZ2V0RW5zQWRkcmVzcywgfSBmcm9tICd2aWVtL2FjdGlvbnMnO1xuaW1wb3J0IHsgZ2V0QWN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvZ2V0QWN0aW9uLmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvZ2V0RW5zQWRkcmVzcyAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEVuc0FkZHJlc3MoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBjaGFpbklkLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IGNsaWVudCA9IGNvbmZpZy5nZXRDbGllbnQoeyBjaGFpbklkIH0pO1xuICAgIGNvbnN0IGFjdGlvbiA9IGdldEFjdGlvbihjbGllbnQsIHZpZW1fZ2V0RW5zQWRkcmVzcywgJ2dldEVuc0FkZHJlc3MnKTtcbiAgICByZXR1cm4gYWN0aW9uKHJlc3QpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0RW5zQWRkcmVzcy5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0RW5zQWRkcmVzcyIsInZpZW1fZ2V0RW5zQWRkcmVzcyIsImdldEFjdGlvbiIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJjaGFpbklkIiwicmVzdCIsImNsaWVudCIsImdldENsaWVudCIsImFjdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAddress.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAvatar.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getEnsAvatar.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsAvatar: () => (/* binding */ getEnsAvatar)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/ens/getEnsAvatar.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n/** https://wagmi.sh/core/api/actions/getEnsAvatar */ function getEnsAvatar(config, parameters) {\n    const { chainId, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.getEnsAvatar, \"getEnsAvatar\");\n    return action(rest);\n} //# sourceMappingURL=getEnsAvatar.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRFbnNBdmF0YXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtFO0FBQ2hCO0FBQ2xELG1EQUFtRCxHQUM1QyxTQUFTQSxhQUFhRyxNQUFNLEVBQUVDLFVBQVU7SUFDM0MsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsTUFBTSxHQUFHRjtJQUM3QixNQUFNRyxTQUFTSixPQUFPSyxTQUFTLENBQUM7UUFBRUg7SUFBUTtJQUMxQyxNQUFNSSxTQUFTUCw4REFBU0EsQ0FBQ0ssUUFBUU4sc0RBQWlCQSxFQUFFO0lBQ3BELE9BQU9RLE9BQU9IO0FBQ2xCLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvZ2V0RW5zQXZhdGFyLmpzP2EwNzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RW5zQXZhdGFyIGFzIHZpZW1fZ2V0RW5zQXZhdGFyLCB9IGZyb20gJ3ZpZW0vYWN0aW9ucyc7XG5pbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICcuLi91dGlscy9nZXRBY3Rpb24uanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9nZXRFbnNBdmF0YXIgKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnNBdmF0YXIoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBjaGFpbklkLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IGNsaWVudCA9IGNvbmZpZy5nZXRDbGllbnQoeyBjaGFpbklkIH0pO1xuICAgIGNvbnN0IGFjdGlvbiA9IGdldEFjdGlvbihjbGllbnQsIHZpZW1fZ2V0RW5zQXZhdGFyLCAnZ2V0RW5zQXZhdGFyJyk7XG4gICAgcmV0dXJuIGFjdGlvbihyZXN0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEVuc0F2YXRhci5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0RW5zQXZhdGFyIiwidmllbV9nZXRFbnNBdmF0YXIiLCJnZXRBY3Rpb24iLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiY2hhaW5JZCIsInJlc3QiLCJjbGllbnQiLCJnZXRDbGllbnQiLCJhY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAvatar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsName.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getEnsName.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsName: () => (/* binding */ getEnsName)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/ens/getEnsName.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n/** https://wagmi.sh/core/api/actions/getEnsName */ function getEnsName(config, parameters) {\n    const { chainId, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.getEnsName, \"getEnsName\");\n    return action(rest);\n} //# sourceMappingURL=getEnsName.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRFbnNOYW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4RDtBQUNaO0FBQ2xELGlEQUFpRCxHQUMxQyxTQUFTQSxXQUFXRyxNQUFNLEVBQUVDLFVBQVU7SUFDekMsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsTUFBTSxHQUFHRjtJQUM3QixNQUFNRyxTQUFTSixPQUFPSyxTQUFTLENBQUM7UUFBRUg7SUFBUTtJQUMxQyxNQUFNSSxTQUFTUCw4REFBU0EsQ0FBQ0ssUUFBUU4sb0RBQWVBLEVBQUU7SUFDbEQsT0FBT1EsT0FBT0g7QUFDbEIsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRFbnNOYW1lLmpzP2I3YWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RW5zTmFtZSBhcyB2aWVtX2dldEVuc05hbWUsIH0gZnJvbSAndmllbS9hY3Rpb25zJztcbmltcG9ydCB7IGdldEFjdGlvbiB9IGZyb20gJy4uL3V0aWxzL2dldEFjdGlvbi5qcyc7XG4vKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL2dldEVuc05hbWUgKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnNOYW1lKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgY2hhaW5JZCwgLi4ucmVzdCB9ID0gcGFyYW1ldGVycztcbiAgICBjb25zdCBjbGllbnQgPSBjb25maWcuZ2V0Q2xpZW50KHsgY2hhaW5JZCB9KTtcbiAgICBjb25zdCBhY3Rpb24gPSBnZXRBY3Rpb24oY2xpZW50LCB2aWVtX2dldEVuc05hbWUsICdnZXRFbnNOYW1lJyk7XG4gICAgcmV0dXJuIGFjdGlvbihyZXN0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEVuc05hbWUuanMubWFwIl0sIm5hbWVzIjpbImdldEVuc05hbWUiLCJ2aWVtX2dldEVuc05hbWUiLCJnZXRBY3Rpb24iLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiY2hhaW5JZCIsInJlc3QiLCJjbGllbnQiLCJnZXRDbGllbnQiLCJhY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsName.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getPublicClient.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getPublicClient.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPublicClient: () => (/* binding */ getPublicClient)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/decorators/public.js\");\n/* harmony import */ var _getClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getClient.js\");\n\n\nfunction getPublicClient(config, parameters = {}) {\n    const client = (0,_getClient_js__WEBPACK_IMPORTED_MODULE_0__.getClient)(config, parameters);\n    return client?.extend(viem__WEBPACK_IMPORTED_MODULE_1__.publicActions);\n} //# sourceMappingURL=getPublicClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRQdWJsaWNDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ007QUFDcEMsU0FBU0UsZ0JBQWdCQyxNQUFNLEVBQUVDLGFBQWEsQ0FBQyxDQUFDO0lBQ25ELE1BQU1DLFNBQVNKLHdEQUFTQSxDQUFDRSxRQUFRQztJQUNqQyxPQUFPQyxRQUFRQyxPQUFPTiwrQ0FBYUE7QUFDdkMsRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRQdWJsaWNDbGllbnQuanM/OWU2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwdWJsaWNBY3Rpb25zIH0gZnJvbSAndmllbSc7XG5pbXBvcnQgeyBnZXRDbGllbnQgfSBmcm9tICcuL2dldENsaWVudC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0UHVibGljQ2xpZW50KGNvbmZpZywgcGFyYW1ldGVycyA9IHt9KSB7XG4gICAgY29uc3QgY2xpZW50ID0gZ2V0Q2xpZW50KGNvbmZpZywgcGFyYW1ldGVycyk7XG4gICAgcmV0dXJuIGNsaWVudD8uZXh0ZW5kKHB1YmxpY0FjdGlvbnMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0UHVibGljQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJwdWJsaWNBY3Rpb25zIiwiZ2V0Q2xpZW50IiwiZ2V0UHVibGljQ2xpZW50IiwiY29uZmlnIiwicGFyYW1ldGVycyIsImNsaWVudCIsImV4dGVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getPublicClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getWalletClient.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getWalletClient.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getWalletClient: () => (/* binding */ getWalletClient)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/decorators/wallet.js\");\n/* harmony import */ var _getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getConnectorClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\");\n\n\nasync function getWalletClient(config, parameters = {}) {\n    const client = await (0,_getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__.getConnectorClient)(config, parameters);\n    client.extend(viem__WEBPACK_IMPORTED_MODULE_1__.walletActions);\n    // @ts-ignore\n    return client.extend(viem__WEBPACK_IMPORTED_MODULE_1__.walletActions);\n} //# sourceMappingURL=getWalletClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRXYWxsZXRDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ3lCO0FBQ3ZELGVBQWVFLGdCQUFnQkMsTUFBTSxFQUFFQyxhQUFhLENBQUMsQ0FBQztJQUN6RCxNQUFNQyxTQUFTLE1BQU1KLDBFQUFrQkEsQ0FBQ0UsUUFBUUM7SUFDaERDLE9BQU9DLE1BQU0sQ0FBQ04sK0NBQWFBO0lBQzNCLGFBQWE7SUFDYixPQUFPSyxPQUFPQyxNQUFNLENBQUNOLCtDQUFhQTtBQUN0QyxFQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL2dldFdhbGxldENsaWVudC5qcz83YjE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdhbGxldEFjdGlvbnMgfSBmcm9tICd2aWVtJztcbmltcG9ydCB7IGdldENvbm5lY3RvckNsaWVudCwgfSBmcm9tICcuL2dldENvbm5lY3RvckNsaWVudC5qcyc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0V2FsbGV0Q2xpZW50KGNvbmZpZywgcGFyYW1ldGVycyA9IHt9KSB7XG4gICAgY29uc3QgY2xpZW50ID0gYXdhaXQgZ2V0Q29ubmVjdG9yQ2xpZW50KGNvbmZpZywgcGFyYW1ldGVycyk7XG4gICAgY2xpZW50LmV4dGVuZCh3YWxsZXRBY3Rpb25zKTtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgcmV0dXJuIGNsaWVudC5leHRlbmQod2FsbGV0QWN0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRXYWxsZXRDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbIndhbGxldEFjdGlvbnMiLCJnZXRDb25uZWN0b3JDbGllbnQiLCJnZXRXYWxsZXRDbGllbnQiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiY2xpZW50IiwiZXh0ZW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getWalletClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/multicall.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/multicall.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multicall: () => (/* binding */ multicall)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/multicall.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\nasync function multicall(config, parameters) {\n    const { allowFailure = true, chainId, contracts, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.multicall, \"multicall\");\n    return action({\n        allowFailure,\n        contracts,\n        ...rest\n    });\n} //# sourceMappingURL=multicall.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9tdWx0aWNhbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJEO0FBQ1Q7QUFDM0MsZUFBZUEsVUFBVUcsTUFBTSxFQUFFQyxVQUFVO0lBQzlDLE1BQU0sRUFBRUMsZUFBZSxJQUFJLEVBQUVDLE9BQU8sRUFBRUMsU0FBUyxFQUFFLEdBQUdDLE1BQU0sR0FBR0o7SUFDN0QsTUFBTUssU0FBU04sT0FBT08sU0FBUyxDQUFDO1FBQUVKO0lBQVE7SUFDMUMsTUFBTUssU0FBU1QsOERBQVNBLENBQUNPLFFBQVFSLG1EQUFjQSxFQUFFO0lBQ2pELE9BQU9VLE9BQU87UUFDVk47UUFDQUU7UUFDQSxHQUFHQyxJQUFJO0lBQ1g7QUFDSixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL211bHRpY2FsbC5qcz83YTJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG11bHRpY2FsbCBhcyB2aWVtX211bHRpY2FsbCB9IGZyb20gJ3ZpZW0vYWN0aW9ucyc7XG5pbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICcuLi91dGlscy9nZXRBY3Rpb24uanMnO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG11bHRpY2FsbChjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGFsbG93RmFpbHVyZSA9IHRydWUsIGNoYWluSWQsIGNvbnRyYWN0cywgLi4ucmVzdCB9ID0gcGFyYW1ldGVycztcbiAgICBjb25zdCBjbGllbnQgPSBjb25maWcuZ2V0Q2xpZW50KHsgY2hhaW5JZCB9KTtcbiAgICBjb25zdCBhY3Rpb24gPSBnZXRBY3Rpb24oY2xpZW50LCB2aWVtX211bHRpY2FsbCwgJ211bHRpY2FsbCcpO1xuICAgIHJldHVybiBhY3Rpb24oe1xuICAgICAgICBhbGxvd0ZhaWx1cmUsXG4gICAgICAgIGNvbnRyYWN0cyxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11bHRpY2FsbC5qcy5tYXAiXSwibmFtZXMiOlsibXVsdGljYWxsIiwidmllbV9tdWx0aWNhbGwiLCJnZXRBY3Rpb24iLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiYWxsb3dGYWlsdXJlIiwiY2hhaW5JZCIsImNvbnRyYWN0cyIsInJlc3QiLCJjbGllbnQiLCJnZXRDbGllbnQiLCJhY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/multicall.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContract.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/readContract.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readContract: () => (/* binding */ readContract)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/readContract.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n/** https://wagmi.sh/core/api/actions/readContract */ function readContract(config, parameters) {\n    const { chainId, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.readContract, \"readContract\");\n    return action(rest);\n} //# sourceMappingURL=readContract.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9yZWFkQ29udHJhY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtFO0FBQ2hCO0FBQ2xELG1EQUFtRCxHQUM1QyxTQUFTQSxhQUFhRyxNQUFNLEVBQUVDLFVBQVU7SUFDM0MsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsTUFBTSxHQUFHRjtJQUM3QixNQUFNRyxTQUFTSixPQUFPSyxTQUFTLENBQUM7UUFBRUg7SUFBUTtJQUMxQyxNQUFNSSxTQUFTUCw4REFBU0EsQ0FBQ0ssUUFBUU4sc0RBQWlCQSxFQUFFO0lBQ3BELE9BQU9RLE9BQU9IO0FBQ2xCLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvcmVhZENvbnRyYWN0LmpzP2QzYTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVhZENvbnRyYWN0IGFzIHZpZW1fcmVhZENvbnRyYWN0LCB9IGZyb20gJ3ZpZW0vYWN0aW9ucyc7XG5pbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICcuLi91dGlscy9nZXRBY3Rpb24uanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9yZWFkQ29udHJhY3QgKi9cbmV4cG9ydCBmdW5jdGlvbiByZWFkQ29udHJhY3QoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBjaGFpbklkLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IGNsaWVudCA9IGNvbmZpZy5nZXRDbGllbnQoeyBjaGFpbklkIH0pO1xuICAgIGNvbnN0IGFjdGlvbiA9IGdldEFjdGlvbihjbGllbnQsIHZpZW1fcmVhZENvbnRyYWN0LCAncmVhZENvbnRyYWN0Jyk7XG4gICAgcmV0dXJuIGFjdGlvbihyZXN0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWRDb250cmFjdC5qcy5tYXAiXSwibmFtZXMiOlsicmVhZENvbnRyYWN0IiwidmllbV9yZWFkQ29udHJhY3QiLCJnZXRBY3Rpb24iLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiY2hhaW5JZCIsInJlc3QiLCJjbGllbnQiLCJnZXRDbGllbnQiLCJhY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContracts.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/readContracts.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readContracts: () => (/* binding */ readContracts)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/contract.js\");\n/* harmony import */ var _multicall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multicall.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/multicall.js\");\n/* harmony import */ var _readContract_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./readContract.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContract.js\");\n\n\n\nasync function readContracts(config, parameters) {\n    const { allowFailure = true, blockNumber, blockTag, ...rest } = parameters;\n    const contracts = parameters.contracts;\n    try {\n        const contractsByChainId = {};\n        for (const [index, contract] of contracts.entries()){\n            const chainId = contract.chainId ?? config.state.chainId;\n            if (!contractsByChainId[chainId]) contractsByChainId[chainId] = [];\n            contractsByChainId[chainId]?.push({\n                contract,\n                index\n            });\n        }\n        const promises = ()=>Object.entries(contractsByChainId).map(([chainId, contracts])=>(0,_multicall_js__WEBPACK_IMPORTED_MODULE_0__.multicall)(config, {\n                    ...rest,\n                    allowFailure,\n                    blockNumber,\n                    blockTag,\n                    chainId: Number.parseInt(chainId),\n                    contracts: contracts.map(({ contract })=>contract)\n                }));\n        const multicallResults = (await Promise.all(promises())).flat();\n        // Reorder the contract results back to the order they were\n        // provided in.\n        const resultIndexes = Object.values(contractsByChainId).flatMap((contracts)=>contracts.map(({ index })=>index));\n        return multicallResults.reduce((results, result, index)=>{\n            if (results) results[resultIndexes[index]] = result;\n            return results;\n        }, []);\n    } catch (error) {\n        if (error instanceof viem__WEBPACK_IMPORTED_MODULE_1__.ContractFunctionExecutionError) throw error;\n        const promises = ()=>contracts.map((contract)=>(0,_readContract_js__WEBPACK_IMPORTED_MODULE_2__.readContract)(config, {\n                    ...contract,\n                    blockNumber,\n                    blockTag\n                }));\n        if (allowFailure) return (await Promise.allSettled(promises())).map((result)=>{\n            if (result.status === \"fulfilled\") return {\n                result: result.value,\n                status: \"success\"\n            };\n            return {\n                error: result.reason,\n                result: undefined,\n                status: \"failure\"\n            };\n        });\n        return await Promise.all(promises());\n    }\n} //# sourceMappingURL=readContracts.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9yZWFkQ29udHJhY3RzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBc0Q7QUFDWDtBQUNNO0FBQzFDLGVBQWVHLGNBQWNDLE1BQU0sRUFBRUMsVUFBVTtJQUNsRCxNQUFNLEVBQUVDLGVBQWUsSUFBSSxFQUFFQyxXQUFXLEVBQUVDLFFBQVEsRUFBRSxHQUFHQyxNQUFNLEdBQUdKO0lBQ2hFLE1BQU1LLFlBQVlMLFdBQVdLLFNBQVM7SUFDdEMsSUFBSTtRQUNBLE1BQU1DLHFCQUFxQixDQUFDO1FBQzVCLEtBQUssTUFBTSxDQUFDQyxPQUFPQyxTQUFTLElBQUlILFVBQVVJLE9BQU8sR0FBSTtZQUNqRCxNQUFNQyxVQUFVRixTQUFTRSxPQUFPLElBQUlYLE9BQU9ZLEtBQUssQ0FBQ0QsT0FBTztZQUN4RCxJQUFJLENBQUNKLGtCQUFrQixDQUFDSSxRQUFRLEVBQzVCSixrQkFBa0IsQ0FBQ0ksUUFBUSxHQUFHLEVBQUU7WUFDcENKLGtCQUFrQixDQUFDSSxRQUFRLEVBQUVFLEtBQUs7Z0JBQUVKO2dCQUFVRDtZQUFNO1FBQ3hEO1FBQ0EsTUFBTU0sV0FBVyxJQUFNQyxPQUFPTCxPQUFPLENBQUNILG9CQUFvQlMsR0FBRyxDQUFDLENBQUMsQ0FBQ0wsU0FBU0wsVUFBVSxHQUFLVCx3REFBU0EsQ0FBQ0csUUFBUTtvQkFDdEcsR0FBR0ssSUFBSTtvQkFDUEg7b0JBQ0FDO29CQUNBQztvQkFDQU8sU0FBU00sT0FBT0MsUUFBUSxDQUFDUDtvQkFDekJMLFdBQVdBLFVBQVVVLEdBQUcsQ0FBQyxDQUFDLEVBQUVQLFFBQVEsRUFBRSxHQUFLQTtnQkFDL0M7UUFDQSxNQUFNVSxtQkFBbUIsQ0FBQyxNQUFNQyxRQUFRQyxHQUFHLENBQUNQLFdBQVUsRUFBR1EsSUFBSTtRQUM3RCwyREFBMkQ7UUFDM0QsZUFBZTtRQUNmLE1BQU1DLGdCQUFnQlIsT0FBT1MsTUFBTSxDQUFDakIsb0JBQW9Ca0IsT0FBTyxDQUFDLENBQUNuQixZQUFjQSxVQUFVVSxHQUFHLENBQUMsQ0FBQyxFQUFFUixLQUFLLEVBQUUsR0FBS0E7UUFDNUcsT0FBT1csaUJBQWlCTyxNQUFNLENBQUMsQ0FBQ0MsU0FBU0MsUUFBUXBCO1lBQzdDLElBQUltQixTQUNBQSxPQUFPLENBQUNKLGFBQWEsQ0FBQ2YsTUFBTSxDQUFDLEdBQUdvQjtZQUNwQyxPQUFPRDtRQUNYLEdBQUcsRUFBRTtJQUNULEVBQ0EsT0FBT0UsT0FBTztRQUNWLElBQUlBLGlCQUFpQmpDLGdFQUE4QkEsRUFDL0MsTUFBTWlDO1FBQ1YsTUFBTWYsV0FBVyxJQUFNUixVQUFVVSxHQUFHLENBQUMsQ0FBQ1AsV0FBYVgsOERBQVlBLENBQUNFLFFBQVE7b0JBQUUsR0FBR1MsUUFBUTtvQkFBRU47b0JBQWFDO2dCQUFTO1FBQzdHLElBQUlGLGNBQ0EsT0FBTyxDQUFDLE1BQU1rQixRQUFRVSxVQUFVLENBQUNoQixXQUFVLEVBQUdFLEdBQUcsQ0FBQyxDQUFDWTtZQUMvQyxJQUFJQSxPQUFPRyxNQUFNLEtBQUssYUFDbEIsT0FBTztnQkFBRUgsUUFBUUEsT0FBT0ksS0FBSztnQkFBRUQsUUFBUTtZQUFVO1lBQ3JELE9BQU87Z0JBQUVGLE9BQU9ELE9BQU9LLE1BQU07Z0JBQUVMLFFBQVFNO2dCQUFXSCxRQUFRO1lBQVU7UUFDeEU7UUFDSixPQUFRLE1BQU1YLFFBQVFDLEdBQUcsQ0FBQ1A7SUFDOUI7QUFDSixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL3JlYWRDb250cmFjdHMuanM/ZjUwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb250cmFjdEZ1bmN0aW9uRXhlY3V0aW9uRXJyb3IgfSBmcm9tICd2aWVtJztcbmltcG9ydCB7IG11bHRpY2FsbCB9IGZyb20gJy4vbXVsdGljYWxsLmpzJztcbmltcG9ydCB7IHJlYWRDb250cmFjdCB9IGZyb20gJy4vcmVhZENvbnRyYWN0LmpzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZWFkQ29udHJhY3RzKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgYWxsb3dGYWlsdXJlID0gdHJ1ZSwgYmxvY2tOdW1iZXIsIGJsb2NrVGFnLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IGNvbnRyYWN0cyA9IHBhcmFtZXRlcnMuY29udHJhY3RzO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGNvbnRyYWN0c0J5Q2hhaW5JZCA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IFtpbmRleCwgY29udHJhY3RdIG9mIGNvbnRyYWN0cy5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGNoYWluSWQgPSBjb250cmFjdC5jaGFpbklkID8/IGNvbmZpZy5zdGF0ZS5jaGFpbklkO1xuICAgICAgICAgICAgaWYgKCFjb250cmFjdHNCeUNoYWluSWRbY2hhaW5JZF0pXG4gICAgICAgICAgICAgICAgY29udHJhY3RzQnlDaGFpbklkW2NoYWluSWRdID0gW107XG4gICAgICAgICAgICBjb250cmFjdHNCeUNoYWluSWRbY2hhaW5JZF0/LnB1c2goeyBjb250cmFjdCwgaW5kZXggfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcHJvbWlzZXMgPSAoKSA9PiBPYmplY3QuZW50cmllcyhjb250cmFjdHNCeUNoYWluSWQpLm1hcCgoW2NoYWluSWQsIGNvbnRyYWN0c10pID0+IG11bHRpY2FsbChjb25maWcsIHtcbiAgICAgICAgICAgIC4uLnJlc3QsXG4gICAgICAgICAgICBhbGxvd0ZhaWx1cmUsXG4gICAgICAgICAgICBibG9ja051bWJlcixcbiAgICAgICAgICAgIGJsb2NrVGFnLFxuICAgICAgICAgICAgY2hhaW5JZDogTnVtYmVyLnBhcnNlSW50KGNoYWluSWQpLFxuICAgICAgICAgICAgY29udHJhY3RzOiBjb250cmFjdHMubWFwKCh7IGNvbnRyYWN0IH0pID0+IGNvbnRyYWN0KSxcbiAgICAgICAgfSkpO1xuICAgICAgICBjb25zdCBtdWx0aWNhbGxSZXN1bHRzID0gKGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKCkpKS5mbGF0KCk7XG4gICAgICAgIC8vIFJlb3JkZXIgdGhlIGNvbnRyYWN0IHJlc3VsdHMgYmFjayB0byB0aGUgb3JkZXIgdGhleSB3ZXJlXG4gICAgICAgIC8vIHByb3ZpZGVkIGluLlxuICAgICAgICBjb25zdCByZXN1bHRJbmRleGVzID0gT2JqZWN0LnZhbHVlcyhjb250cmFjdHNCeUNoYWluSWQpLmZsYXRNYXAoKGNvbnRyYWN0cykgPT4gY29udHJhY3RzLm1hcCgoeyBpbmRleCB9KSA9PiBpbmRleCkpO1xuICAgICAgICByZXR1cm4gbXVsdGljYWxsUmVzdWx0cy5yZWR1Y2UoKHJlc3VsdHMsIHJlc3VsdCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIGlmIChyZXN1bHRzKVxuICAgICAgICAgICAgICAgIHJlc3VsdHNbcmVzdWx0SW5kZXhlc1tpbmRleF1dID0gcmVzdWx0O1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgICAgIH0sIFtdKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIENvbnRyYWN0RnVuY3Rpb25FeGVjdXRpb25FcnJvcilcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICBjb25zdCBwcm9taXNlcyA9ICgpID0+IGNvbnRyYWN0cy5tYXAoKGNvbnRyYWN0KSA9PiByZWFkQ29udHJhY3QoY29uZmlnLCB7IC4uLmNvbnRyYWN0LCBibG9ja051bWJlciwgYmxvY2tUYWcgfSkpO1xuICAgICAgICBpZiAoYWxsb3dGYWlsdXJlKVxuICAgICAgICAgICAgcmV0dXJuIChhd2FpdCBQcm9taXNlLmFsbFNldHRsZWQocHJvbWlzZXMoKSkpLm1hcCgocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5zdGF0dXMgPT09ICdmdWxmaWxsZWQnKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyByZXN1bHQ6IHJlc3VsdC52YWx1ZSwgc3RhdHVzOiAnc3VjY2VzcycgfTtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBlcnJvcjogcmVzdWx0LnJlYXNvbiwgcmVzdWx0OiB1bmRlZmluZWQsIHN0YXR1czogJ2ZhaWx1cmUnIH07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIChhd2FpdCBQcm9taXNlLmFsbChwcm9taXNlcygpKSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhZENvbnRyYWN0cy5qcy5tYXAiXSwibmFtZXMiOlsiQ29udHJhY3RGdW5jdGlvbkV4ZWN1dGlvbkVycm9yIiwibXVsdGljYWxsIiwicmVhZENvbnRyYWN0IiwicmVhZENvbnRyYWN0cyIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJhbGxvd0ZhaWx1cmUiLCJibG9ja051bWJlciIsImJsb2NrVGFnIiwicmVzdCIsImNvbnRyYWN0cyIsImNvbnRyYWN0c0J5Q2hhaW5JZCIsImluZGV4IiwiY29udHJhY3QiLCJlbnRyaWVzIiwiY2hhaW5JZCIsInN0YXRlIiwicHVzaCIsInByb21pc2VzIiwiT2JqZWN0IiwibWFwIiwiTnVtYmVyIiwicGFyc2VJbnQiLCJtdWx0aWNhbGxSZXN1bHRzIiwiUHJvbWlzZSIsImFsbCIsImZsYXQiLCJyZXN1bHRJbmRleGVzIiwidmFsdWVzIiwiZmxhdE1hcCIsInJlZHVjZSIsInJlc3VsdHMiLCJyZXN1bHQiLCJlcnJvciIsImFsbFNldHRsZWQiLCJzdGF0dXMiLCJ2YWx1ZSIsInJlYXNvbiIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContracts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/reconnect.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/reconnect.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reconnect: () => (/* binding */ reconnect)\n/* harmony export */ });\nlet isReconnecting = false;\n/** https://wagmi.sh/core/api/actions/reconnect */ async function reconnect(config, parameters = {}) {\n    // If already reconnecting, do nothing\n    if (isReconnecting) return [];\n    isReconnecting = true;\n    config.setState((x)=>({\n            ...x,\n            status: x.current ? \"reconnecting\" : \"connecting\"\n        }));\n    const connectors = [];\n    if (parameters.connectors?.length) {\n        for (const connector_ of parameters.connectors){\n            let connector;\n            // \"Register\" connector if not already created\n            if (typeof connector_ === \"function\") connector = config._internal.connectors.setup(connector_);\n            else connector = connector_;\n            connectors.push(connector);\n        }\n    } else connectors.push(...config.connectors);\n    // Try recently-used connectors first\n    let recentConnectorId;\n    try {\n        recentConnectorId = await config.storage?.getItem(\"recentConnectorId\");\n    } catch  {}\n    const scores = {};\n    for (const [, connection] of config.state.connections){\n        scores[connection.connector.id] = 1;\n    }\n    if (recentConnectorId) scores[recentConnectorId] = 0;\n    const sorted = Object.keys(scores).length > 0 ? [\n        ...connectors\n    ].sort((a, b)=>(scores[a.id] ?? 10) - (scores[b.id] ?? 10)) : connectors;\n    // Iterate through each connector and try to connect\n    let connected = false;\n    const connections = [];\n    const providers = [];\n    for (const connector of sorted){\n        const provider = await connector.getProvider().catch(()=>undefined);\n        if (!provider) continue;\n        // If we already have an instance of this connector's provider,\n        // then we have already checked it (ie. injected connectors can\n        // share the same `window.ethereum` instance, so we don't want to\n        // connect to it again).\n        if (providers.some((x)=>x === provider)) continue;\n        const isAuthorized = await connector.isAuthorized();\n        if (!isAuthorized) continue;\n        const data = await connector.connect({\n            isReconnecting: true\n        }).catch(()=>null);\n        if (!data) continue;\n        connector.emitter.off(\"connect\", config._internal.events.connect);\n        connector.emitter.on(\"change\", config._internal.events.change);\n        connector.emitter.on(\"disconnect\", config._internal.events.disconnect);\n        config.setState((x)=>{\n            const connections = new Map(connected ? x.connections : new Map()).set(connector.uid, {\n                accounts: data.accounts,\n                chainId: data.chainId,\n                connector\n            });\n            return {\n                ...x,\n                current: connected ? x.current : connector.uid,\n                connections\n            };\n        });\n        connections.push({\n            accounts: data.accounts,\n            chainId: data.chainId,\n            connector\n        });\n        providers.push(provider);\n        connected = true;\n    }\n    // Prevent overwriting connected status from race condition\n    if (config.state.status === \"reconnecting\" || config.state.status === \"connecting\") {\n        // If connecting didn't succeed, set to disconnected\n        if (!connected) config.setState((x)=>({\n                ...x,\n                connections: new Map(),\n                current: null,\n                status: \"disconnected\"\n            }));\n        else config.setState((x)=>({\n                ...x,\n                status: \"connected\"\n            }));\n    }\n    isReconnecting = false;\n    return connections;\n} //# sourceMappingURL=reconnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/reconnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/signMessage.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/signMessage.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signMessage: () => (/* binding */ signMessage)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/wallet/signMessage.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n/* harmony import */ var _getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getConnectorClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\");\n\n\n\n/** https://wagmi.sh/core/api/actions/signMessage */ async function signMessage(config, parameters) {\n    const { account, connector, ...rest } = parameters;\n    let client;\n    if (typeof account === \"object\" && account.type === \"local\") client = config.getClient();\n    else client = await (0,_getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__.getConnectorClient)(config, {\n        account,\n        connector\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_2__.signMessage, \"signMessage\");\n    return action({\n        ...rest,\n        ...account ? {\n            account\n        } : {}\n    });\n} //# sourceMappingURL=signMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9zaWduTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdFO0FBQ2Q7QUFDWTtBQUM5RCxrREFBa0QsR0FDM0MsZUFBZUEsWUFBWUksTUFBTSxFQUFFQyxVQUFVO0lBQ2hELE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxTQUFTLEVBQUUsR0FBR0MsTUFBTSxHQUFHSDtJQUN4QyxJQUFJSTtJQUNKLElBQUksT0FBT0gsWUFBWSxZQUFZQSxRQUFRSSxJQUFJLEtBQUssU0FDaERELFNBQVNMLE9BQU9PLFNBQVM7U0FFekJGLFNBQVMsTUFBTU4sMEVBQWtCQSxDQUFDQyxRQUFRO1FBQUVFO1FBQVNDO0lBQVU7SUFDbkUsTUFBTUssU0FBU1YsOERBQVNBLENBQUNPLFFBQVFSLHFEQUFnQkEsRUFBRTtJQUNuRCxPQUFPVyxPQUFPO1FBQ1YsR0FBR0osSUFBSTtRQUNQLEdBQUlGLFVBQVU7WUFBRUE7UUFBUSxJQUFJLENBQUMsQ0FBQztJQUNsQztBQUNKLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvc2lnbk1lc3NhZ2UuanM/NGZmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzaWduTWVzc2FnZSBhcyB2aWVtX3NpZ25NZXNzYWdlLCB9IGZyb20gJ3ZpZW0vYWN0aW9ucyc7XG5pbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICcuLi91dGlscy9nZXRBY3Rpb24uanMnO1xuaW1wb3J0IHsgZ2V0Q29ubmVjdG9yQ2xpZW50LCB9IGZyb20gJy4vZ2V0Q29ubmVjdG9yQ2xpZW50LmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvc2lnbk1lc3NhZ2UgKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaWduTWVzc2FnZShjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGFjY291bnQsIGNvbm5lY3RvciwgLi4ucmVzdCB9ID0gcGFyYW1ldGVycztcbiAgICBsZXQgY2xpZW50O1xuICAgIGlmICh0eXBlb2YgYWNjb3VudCA9PT0gJ29iamVjdCcgJiYgYWNjb3VudC50eXBlID09PSAnbG9jYWwnKVxuICAgICAgICBjbGllbnQgPSBjb25maWcuZ2V0Q2xpZW50KCk7XG4gICAgZWxzZVxuICAgICAgICBjbGllbnQgPSBhd2FpdCBnZXRDb25uZWN0b3JDbGllbnQoY29uZmlnLCB7IGFjY291bnQsIGNvbm5lY3RvciB9KTtcbiAgICBjb25zdCBhY3Rpb24gPSBnZXRBY3Rpb24oY2xpZW50LCB2aWVtX3NpZ25NZXNzYWdlLCAnc2lnbk1lc3NhZ2UnKTtcbiAgICByZXR1cm4gYWN0aW9uKHtcbiAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgLi4uKGFjY291bnQgPyB7IGFjY291bnQgfSA6IHt9KSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25NZXNzYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJzaWduTWVzc2FnZSIsInZpZW1fc2lnbk1lc3NhZ2UiLCJnZXRBY3Rpb24iLCJnZXRDb25uZWN0b3JDbGllbnQiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiYWNjb3VudCIsImNvbm5lY3RvciIsInJlc3QiLCJjbGllbnQiLCJ0eXBlIiwiZ2V0Q2xpZW50IiwiYWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/signMessage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/simulateContract.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/simulateContract.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   simulateContract: () => (/* binding */ simulateContract)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/simulateContract.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n/* harmony import */ var _getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getConnectorClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\");\n\n\n\n/** https://wagmi.sh/core/api/actions/simulateContract */ async function simulateContract(config, parameters) {\n    const { abi, chainId, connector, ...rest } = parameters;\n    let account;\n    if (parameters.account) account = parameters.account;\n    else {\n        const connectorClient = await (0,_getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__.getConnectorClient)(config, {\n            chainId,\n            connector\n        });\n        account = connectorClient.account;\n    }\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_2__.simulateContract, \"simulateContract\");\n    const { result, request } = await action({\n        ...rest,\n        abi,\n        account\n    });\n    return {\n        chainId: client.chain.id,\n        result,\n        request: {\n            __mode: \"prepared\",\n            ...request,\n            chainId\n        }\n    };\n} //# sourceMappingURL=simulateContract.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9zaW11bGF0ZUNvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEU7QUFDeEI7QUFDWTtBQUM5RCx1REFBdUQsR0FDaEQsZUFBZUEsaUJBQWlCSSxNQUFNLEVBQUVDLFVBQVU7SUFDckQsTUFBTSxFQUFFQyxHQUFHLEVBQUVDLE9BQU8sRUFBRUMsU0FBUyxFQUFFLEdBQUdDLE1BQU0sR0FBR0o7SUFDN0MsSUFBSUs7SUFDSixJQUFJTCxXQUFXSyxPQUFPLEVBQ2xCQSxVQUFVTCxXQUFXSyxPQUFPO1NBQzNCO1FBQ0QsTUFBTUMsa0JBQWtCLE1BQU1SLDBFQUFrQkEsQ0FBQ0MsUUFBUTtZQUNyREc7WUFDQUM7UUFDSjtRQUNBRSxVQUFVQyxnQkFBZ0JELE9BQU87SUFDckM7SUFDQSxNQUFNRSxTQUFTUixPQUFPUyxTQUFTLENBQUM7UUFBRU47SUFBUTtJQUMxQyxNQUFNTyxTQUFTWiw4REFBU0EsQ0FBQ1UsUUFBUVgsMERBQXFCQSxFQUFFO0lBQ3hELE1BQU0sRUFBRWMsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBRyxNQUFNRixPQUFPO1FBQUUsR0FBR0wsSUFBSTtRQUFFSDtRQUFLSTtJQUFRO0lBQ2pFLE9BQU87UUFDSEgsU0FBU0ssT0FBT0ssS0FBSyxDQUFDQyxFQUFFO1FBQ3hCSDtRQUNBQyxTQUFTO1lBQUVHLFFBQVE7WUFBWSxHQUFHSCxPQUFPO1lBQUVUO1FBQVE7SUFDdkQ7QUFDSixFQUNBLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL3NpbXVsYXRlQ29udHJhY3QuanM/MTYzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzaW11bGF0ZUNvbnRyYWN0IGFzIHZpZW1fc2ltdWxhdGVDb250cmFjdCwgfSBmcm9tICd2aWVtL2FjdGlvbnMnO1xuaW1wb3J0IHsgZ2V0QWN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvZ2V0QWN0aW9uLmpzJztcbmltcG9ydCB7IGdldENvbm5lY3RvckNsaWVudCwgfSBmcm9tICcuL2dldENvbm5lY3RvckNsaWVudC5qcyc7XG4vKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL3NpbXVsYXRlQ29udHJhY3QgKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaW11bGF0ZUNvbnRyYWN0KGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgYWJpLCBjaGFpbklkLCBjb25uZWN0b3IsIC4uLnJlc3QgfSA9IHBhcmFtZXRlcnM7XG4gICAgbGV0IGFjY291bnQ7XG4gICAgaWYgKHBhcmFtZXRlcnMuYWNjb3VudClcbiAgICAgICAgYWNjb3VudCA9IHBhcmFtZXRlcnMuYWNjb3VudDtcbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgY29ubmVjdG9yQ2xpZW50ID0gYXdhaXQgZ2V0Q29ubmVjdG9yQ2xpZW50KGNvbmZpZywge1xuICAgICAgICAgICAgY2hhaW5JZCxcbiAgICAgICAgICAgIGNvbm5lY3RvcixcbiAgICAgICAgfSk7XG4gICAgICAgIGFjY291bnQgPSBjb25uZWN0b3JDbGllbnQuYWNjb3VudDtcbiAgICB9XG4gICAgY29uc3QgY2xpZW50ID0gY29uZmlnLmdldENsaWVudCh7IGNoYWluSWQgfSk7XG4gICAgY29uc3QgYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgdmllbV9zaW11bGF0ZUNvbnRyYWN0LCAnc2ltdWxhdGVDb250cmFjdCcpO1xuICAgIGNvbnN0IHsgcmVzdWx0LCByZXF1ZXN0IH0gPSBhd2FpdCBhY3Rpb24oeyAuLi5yZXN0LCBhYmksIGFjY291bnQgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY2hhaW5JZDogY2xpZW50LmNoYWluLmlkLFxuICAgICAgICByZXN1bHQsXG4gICAgICAgIHJlcXVlc3Q6IHsgX19tb2RlOiAncHJlcGFyZWQnLCAuLi5yZXF1ZXN0LCBjaGFpbklkIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpbXVsYXRlQ29udHJhY3QuanMubWFwIl0sIm5hbWVzIjpbInNpbXVsYXRlQ29udHJhY3QiLCJ2aWVtX3NpbXVsYXRlQ29udHJhY3QiLCJnZXRBY3Rpb24iLCJnZXRDb25uZWN0b3JDbGllbnQiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiYWJpIiwiY2hhaW5JZCIsImNvbm5lY3RvciIsInJlc3QiLCJhY2NvdW50IiwiY29ubmVjdG9yQ2xpZW50IiwiY2xpZW50IiwiZ2V0Q2xpZW50IiwiYWN0aW9uIiwicmVzdWx0IiwicmVxdWVzdCIsImNoYWluIiwiaWQiLCJfX21vZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/simulateContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/switchChain.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/switchChain.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   switchChain: () => (/* binding */ switchChain)\n/* harmony export */ });\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var _errors_connector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/connector.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\");\n\n\n/** https://wagmi.sh/core/api/actions/switchChain */ async function switchChain(config, parameters) {\n    const { addEthereumChainParameter, chainId } = parameters;\n    const connection = config.state.connections.get(parameters.connector?.uid ?? config.state.current);\n    if (connection) {\n        const connector = connection.connector;\n        if (!connector.switchChain) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_0__.SwitchChainNotSupportedError({\n            connector\n        });\n        const chain = await connector.switchChain({\n            addEthereumChainParameter,\n            chainId\n        });\n        return chain;\n    }\n    const chain = config.chains.find((x)=>x.id === chainId);\n    if (!chain) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_1__.ChainNotConfiguredError();\n    config.setState((x)=>({\n            ...x,\n            chainId\n        }));\n    return chain;\n} //# sourceMappingURL=switchChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9zd2l0Y2hDaGFpbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0Q7QUFDUTtBQUN2RSxrREFBa0QsR0FDM0MsZUFBZUUsWUFBWUMsTUFBTSxFQUFFQyxVQUFVO0lBQ2hELE1BQU0sRUFBRUMseUJBQXlCLEVBQUVDLE9BQU8sRUFBRSxHQUFHRjtJQUMvQyxNQUFNRyxhQUFhSixPQUFPSyxLQUFLLENBQUNDLFdBQVcsQ0FBQ0MsR0FBRyxDQUFDTixXQUFXTyxTQUFTLEVBQUVDLE9BQU9ULE9BQU9LLEtBQUssQ0FBQ0ssT0FBTztJQUNqRyxJQUFJTixZQUFZO1FBQ1osTUFBTUksWUFBWUosV0FBV0ksU0FBUztRQUN0QyxJQUFJLENBQUNBLFVBQVVULFdBQVcsRUFDdEIsTUFBTSxJQUFJRCw4RUFBNEJBLENBQUM7WUFBRVU7UUFBVTtRQUN2RCxNQUFNRyxRQUFRLE1BQU1ILFVBQVVULFdBQVcsQ0FBQztZQUN0Q0c7WUFDQUM7UUFDSjtRQUNBLE9BQU9RO0lBQ1g7SUFDQSxNQUFNQSxRQUFRWCxPQUFPWSxNQUFNLENBQUNDLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxFQUFFLEtBQUtaO0lBQ2pELElBQUksQ0FBQ1EsT0FDRCxNQUFNLElBQUlkLHNFQUF1QkE7SUFDckNHLE9BQU9nQixRQUFRLENBQUMsQ0FBQ0YsSUFBTztZQUFFLEdBQUdBLENBQUM7WUFBRVg7UUFBUTtJQUN4QyxPQUFPUTtBQUNYLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvc3dpdGNoQ2hhaW4uanM/OTE2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFpbk5vdENvbmZpZ3VyZWRFcnJvciwgfSBmcm9tICcuLi9lcnJvcnMvY29uZmlnLmpzJztcbmltcG9ydCB7IFN3aXRjaENoYWluTm90U3VwcG9ydGVkRXJyb3IsIH0gZnJvbSAnLi4vZXJyb3JzL2Nvbm5lY3Rvci5qcyc7XG4vKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL3N3aXRjaENoYWluICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc3dpdGNoQ2hhaW4oY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBhZGRFdGhlcmV1bUNoYWluUGFyYW1ldGVyLCBjaGFpbklkIH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBjb25maWcuc3RhdGUuY29ubmVjdGlvbnMuZ2V0KHBhcmFtZXRlcnMuY29ubmVjdG9yPy51aWQgPz8gY29uZmlnLnN0YXRlLmN1cnJlbnQpO1xuICAgIGlmIChjb25uZWN0aW9uKSB7XG4gICAgICAgIGNvbnN0IGNvbm5lY3RvciA9IGNvbm5lY3Rpb24uY29ubmVjdG9yO1xuICAgICAgICBpZiAoIWNvbm5lY3Rvci5zd2l0Y2hDaGFpbilcbiAgICAgICAgICAgIHRocm93IG5ldyBTd2l0Y2hDaGFpbk5vdFN1cHBvcnRlZEVycm9yKHsgY29ubmVjdG9yIH0pO1xuICAgICAgICBjb25zdCBjaGFpbiA9IGF3YWl0IGNvbm5lY3Rvci5zd2l0Y2hDaGFpbih7XG4gICAgICAgICAgICBhZGRFdGhlcmV1bUNoYWluUGFyYW1ldGVyLFxuICAgICAgICAgICAgY2hhaW5JZCxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBjaGFpbjtcbiAgICB9XG4gICAgY29uc3QgY2hhaW4gPSBjb25maWcuY2hhaW5zLmZpbmQoKHgpID0+IHguaWQgPT09IGNoYWluSWQpO1xuICAgIGlmICghY2hhaW4pXG4gICAgICAgIHRocm93IG5ldyBDaGFpbk5vdENvbmZpZ3VyZWRFcnJvcigpO1xuICAgIGNvbmZpZy5zZXRTdGF0ZSgoeCkgPT4gKHsgLi4ueCwgY2hhaW5JZCB9KSk7XG4gICAgcmV0dXJuIGNoYWluO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3dpdGNoQ2hhaW4uanMubWFwIl0sIm5hbWVzIjpbIkNoYWluTm90Q29uZmlndXJlZEVycm9yIiwiU3dpdGNoQ2hhaW5Ob3RTdXBwb3J0ZWRFcnJvciIsInN3aXRjaENoYWluIiwiY29uZmlnIiwicGFyYW1ldGVycyIsImFkZEV0aGVyZXVtQ2hhaW5QYXJhbWV0ZXIiLCJjaGFpbklkIiwiY29ubmVjdGlvbiIsInN0YXRlIiwiY29ubmVjdGlvbnMiLCJnZXQiLCJjb25uZWN0b3IiLCJ1aWQiLCJjdXJyZW50IiwiY2hhaW4iLCJjaGFpbnMiLCJmaW5kIiwieCIsImlkIiwic2V0U3RhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/switchChain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/waitForTransactionReceipt.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/waitForTransactionReceipt.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   waitForTransactionReceipt: () => (/* binding */ waitForTransactionReceipt)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/fromHex.js\");\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/waitForTransactionReceipt.js\");\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/getTransaction.js\");\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/call.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n\nasync function waitForTransactionReceipt(config, parameters) {\n    const { chainId, timeout = 0, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.waitForTransactionReceipt, \"waitForTransactionReceipt\");\n    const receipt = await action({\n        ...rest,\n        timeout\n    });\n    if (receipt.status === \"reverted\") {\n        const action_getTransaction = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_2__.getTransaction, \"getTransaction\");\n        const txn = await action_getTransaction({\n            hash: receipt.transactionHash\n        });\n        const action_call = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_3__.call, \"call\");\n        const code = await action_call({\n            ...txn,\n            gasPrice: txn.type !== \"eip1559\" ? txn.gasPrice : undefined,\n            maxFeePerGas: txn.type === \"eip1559\" ? txn.maxFeePerGas : undefined,\n            maxPriorityFeePerGas: txn.type === \"eip1559\" ? txn.maxPriorityFeePerGas : undefined\n        });\n        const reason = code?.data ? (0,viem__WEBPACK_IMPORTED_MODULE_4__.hexToString)(`0x${code.data.substring(138)}`) : \"unknown reason\";\n        throw new Error(reason);\n    }\n    return {\n        ...receipt,\n        chainId: client.chain.id\n    };\n} //# sourceMappingURL=waitForTransactionReceipt.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFtQztBQUMrRTtBQUNoRTtBQUMzQyxlQUFlRywwQkFBMEJHLE1BQU0sRUFBRUMsVUFBVTtJQUM5RCxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsVUFBVSxDQUFDLEVBQUUsR0FBR0MsTUFBTSxHQUFHSDtJQUMxQyxNQUFNSSxTQUFTTCxPQUFPTSxTQUFTLENBQUM7UUFBRUo7SUFBUTtJQUMxQyxNQUFNSyxTQUFTUiw4REFBU0EsQ0FBQ00sUUFBUVAsbUVBQThCQSxFQUFFO0lBQ2pFLE1BQU1VLFVBQVUsTUFBTUQsT0FBTztRQUFFLEdBQUdILElBQUk7UUFBRUQ7SUFBUTtJQUNoRCxJQUFJSyxRQUFRQyxNQUFNLEtBQUssWUFBWTtRQUMvQixNQUFNQyx3QkFBd0JYLDhEQUFTQSxDQUFDTSxRQUFRVCx3REFBY0EsRUFBRTtRQUNoRSxNQUFNZSxNQUFNLE1BQU1ELHNCQUFzQjtZQUFFRSxNQUFNSixRQUFRSyxlQUFlO1FBQUM7UUFDeEUsTUFBTUMsY0FBY2YsOERBQVNBLENBQUNNLFFBQVFWLDhDQUFJQSxFQUFFO1FBQzVDLE1BQU1vQixPQUFPLE1BQU1ELFlBQVk7WUFDM0IsR0FBR0gsR0FBRztZQUNOSyxVQUFVTCxJQUFJTSxJQUFJLEtBQUssWUFBWU4sSUFBSUssUUFBUSxHQUFHRTtZQUNsREMsY0FBY1IsSUFBSU0sSUFBSSxLQUFLLFlBQVlOLElBQUlRLFlBQVksR0FBR0Q7WUFDMURFLHNCQUFzQlQsSUFBSU0sSUFBSSxLQUFLLFlBQVlOLElBQUlTLG9CQUFvQixHQUFHRjtRQUM5RTtRQUNBLE1BQU1HLFNBQVNOLE1BQU1PLE9BQ2Y1QixpREFBV0EsQ0FBQyxDQUFDLEVBQUUsRUFBRXFCLEtBQUtPLElBQUksQ0FBQ0MsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUMzQztRQUNOLE1BQU0sSUFBSUMsTUFBTUg7SUFDcEI7SUFDQSxPQUFPO1FBQ0gsR0FBR2IsT0FBTztRQUNWTixTQUFTRyxPQUFPb0IsS0FBSyxDQUFDQyxFQUFFO0lBQzVCO0FBQ0osRUFDQSxxREFBcUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0LmpzPzgzNWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGV4VG9TdHJpbmcgfSBmcm9tICd2aWVtJztcbmltcG9ydCB7IGNhbGwsIGdldFRyYW5zYWN0aW9uLCB3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0IGFzIHZpZW1fd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdCwgfSBmcm9tICd2aWVtL2FjdGlvbnMnO1xuaW1wb3J0IHsgZ2V0QWN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvZ2V0QWN0aW9uLmpzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0KGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgY2hhaW5JZCwgdGltZW91dCA9IDAsIC4uLnJlc3QgfSA9IHBhcmFtZXRlcnM7XG4gICAgY29uc3QgY2xpZW50ID0gY29uZmlnLmdldENsaWVudCh7IGNoYWluSWQgfSk7XG4gICAgY29uc3QgYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgdmllbV93YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0LCAnd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdCcpO1xuICAgIGNvbnN0IHJlY2VpcHQgPSBhd2FpdCBhY3Rpb24oeyAuLi5yZXN0LCB0aW1lb3V0IH0pO1xuICAgIGlmIChyZWNlaXB0LnN0YXR1cyA9PT0gJ3JldmVydGVkJykge1xuICAgICAgICBjb25zdCBhY3Rpb25fZ2V0VHJhbnNhY3Rpb24gPSBnZXRBY3Rpb24oY2xpZW50LCBnZXRUcmFuc2FjdGlvbiwgJ2dldFRyYW5zYWN0aW9uJyk7XG4gICAgICAgIGNvbnN0IHR4biA9IGF3YWl0IGFjdGlvbl9nZXRUcmFuc2FjdGlvbih7IGhhc2g6IHJlY2VpcHQudHJhbnNhY3Rpb25IYXNoIH0pO1xuICAgICAgICBjb25zdCBhY3Rpb25fY2FsbCA9IGdldEFjdGlvbihjbGllbnQsIGNhbGwsICdjYWxsJyk7XG4gICAgICAgIGNvbnN0IGNvZGUgPSBhd2FpdCBhY3Rpb25fY2FsbCh7XG4gICAgICAgICAgICAuLi50eG4sXG4gICAgICAgICAgICBnYXNQcmljZTogdHhuLnR5cGUgIT09ICdlaXAxNTU5JyA/IHR4bi5nYXNQcmljZSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG1heEZlZVBlckdhczogdHhuLnR5cGUgPT09ICdlaXAxNTU5JyA/IHR4bi5tYXhGZWVQZXJHYXMgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhczogdHhuLnR5cGUgPT09ICdlaXAxNTU5JyA/IHR4bi5tYXhQcmlvcml0eUZlZVBlckdhcyA6IHVuZGVmaW5lZCxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHJlYXNvbiA9IGNvZGU/LmRhdGFcbiAgICAgICAgICAgID8gaGV4VG9TdHJpbmcoYDB4JHtjb2RlLmRhdGEuc3Vic3RyaW5nKDEzOCl9YClcbiAgICAgICAgICAgIDogJ3Vua25vd24gcmVhc29uJztcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHJlYXNvbik7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIC4uLnJlY2VpcHQsXG4gICAgICAgIGNoYWluSWQ6IGNsaWVudC5jaGFpbi5pZCxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdC5qcy5tYXAiXSwibmFtZXMiOlsiaGV4VG9TdHJpbmciLCJjYWxsIiwiZ2V0VHJhbnNhY3Rpb24iLCJ3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0IiwidmllbV93YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0IiwiZ2V0QWN0aW9uIiwiY29uZmlnIiwicGFyYW1ldGVycyIsImNoYWluSWQiLCJ0aW1lb3V0IiwicmVzdCIsImNsaWVudCIsImdldENsaWVudCIsImFjdGlvbiIsInJlY2VpcHQiLCJzdGF0dXMiLCJhY3Rpb25fZ2V0VHJhbnNhY3Rpb24iLCJ0eG4iLCJoYXNoIiwidHJhbnNhY3Rpb25IYXNoIiwiYWN0aW9uX2NhbGwiLCJjb2RlIiwiZ2FzUHJpY2UiLCJ0eXBlIiwidW5kZWZpbmVkIiwibWF4RmVlUGVyR2FzIiwibWF4UHJpb3JpdHlGZWVQZXJHYXMiLCJyZWFzb24iLCJkYXRhIiwic3Vic3RyaW5nIiwiRXJyb3IiLCJjaGFpbiIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/waitForTransactionReceipt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchAccount.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchAccount.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchAccount: () => (/* binding */ watchAccount)\n/* harmony export */ });\n/* harmony import */ var _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/deepEqual.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\");\n/* harmony import */ var _getAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getAccount.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getAccount.js\");\n\n\n/** https://wagmi.sh/core/api/actions/watchAccount */ function watchAccount(config, parameters) {\n    const { onChange } = parameters;\n    return config.subscribe(()=>(0,_getAccount_js__WEBPACK_IMPORTED_MODULE_0__.getAccount)(config), onChange, {\n        equalityFn (a, b) {\n            const { connector: aConnector, ...aRest } = a;\n            const { connector: bConnector, ...bRest } = b;\n            return (0,_utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_1__.deepEqual)(aRest, bRest) && // check connector separately\n            aConnector?.id === bConnector?.id && aConnector?.uid === bConnector?.uid;\n        }\n    });\n} //# sourceMappingURL=watchAccount.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaEFjY291bnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQ0w7QUFDN0MsbURBQW1ELEdBQzVDLFNBQVNFLGFBQWFDLE1BQU0sRUFBRUMsVUFBVTtJQUMzQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRDtJQUNyQixPQUFPRCxPQUFPRyxTQUFTLENBQUMsSUFBTUwsMERBQVVBLENBQUNFLFNBQVNFLFVBQVU7UUFDeERFLFlBQVdDLENBQUMsRUFBRUMsQ0FBQztZQUNYLE1BQU0sRUFBRUMsV0FBV0MsVUFBVSxFQUFFLEdBQUdDLE9BQU8sR0FBR0o7WUFDNUMsTUFBTSxFQUFFRSxXQUFXRyxVQUFVLEVBQUUsR0FBR0MsT0FBTyxHQUFHTDtZQUM1QyxPQUFRVCw4REFBU0EsQ0FBQ1ksT0FBT0UsVUFDckIsNkJBQTZCO1lBQzdCSCxZQUFZSSxPQUFPRixZQUFZRSxNQUMvQkosWUFBWUssUUFBUUgsWUFBWUc7UUFDeEM7SUFDSjtBQUNKLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvd2F0Y2hBY2NvdW50LmpzPzdiNDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVlcEVxdWFsIH0gZnJvbSAnLi4vdXRpbHMvZGVlcEVxdWFsLmpzJztcbmltcG9ydCB7IGdldEFjY291bnQgfSBmcm9tICcuL2dldEFjY291bnQuanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy93YXRjaEFjY291bnQgKi9cbmV4cG9ydCBmdW5jdGlvbiB3YXRjaEFjY291bnQoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBvbkNoYW5nZSB9ID0gcGFyYW1ldGVycztcbiAgICByZXR1cm4gY29uZmlnLnN1YnNjcmliZSgoKSA9PiBnZXRBY2NvdW50KGNvbmZpZyksIG9uQ2hhbmdlLCB7XG4gICAgICAgIGVxdWFsaXR5Rm4oYSwgYikge1xuICAgICAgICAgICAgY29uc3QgeyBjb25uZWN0b3I6IGFDb25uZWN0b3IsIC4uLmFSZXN0IH0gPSBhO1xuICAgICAgICAgICAgY29uc3QgeyBjb25uZWN0b3I6IGJDb25uZWN0b3IsIC4uLmJSZXN0IH0gPSBiO1xuICAgICAgICAgICAgcmV0dXJuIChkZWVwRXF1YWwoYVJlc3QsIGJSZXN0KSAmJlxuICAgICAgICAgICAgICAgIC8vIGNoZWNrIGNvbm5lY3RvciBzZXBhcmF0ZWx5XG4gICAgICAgICAgICAgICAgYUNvbm5lY3Rvcj8uaWQgPT09IGJDb25uZWN0b3I/LmlkICYmXG4gICAgICAgICAgICAgICAgYUNvbm5lY3Rvcj8udWlkID09PSBiQ29ubmVjdG9yPy51aWQpO1xuICAgICAgICB9LFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2F0Y2hBY2NvdW50LmpzLm1hcCJdLCJuYW1lcyI6WyJkZWVwRXF1YWwiLCJnZXRBY2NvdW50Iiwid2F0Y2hBY2NvdW50IiwiY29uZmlnIiwicGFyYW1ldGVycyIsIm9uQ2hhbmdlIiwic3Vic2NyaWJlIiwiZXF1YWxpdHlGbiIsImEiLCJiIiwiY29ubmVjdG9yIiwiYUNvbm5lY3RvciIsImFSZXN0IiwiYkNvbm5lY3RvciIsImJSZXN0IiwiaWQiLCJ1aWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchBlockNumber.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchBlockNumber.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchBlockNumber: () => (/* binding */ watchBlockNumber)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/watchBlockNumber.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n// TODO: wrap in viem's `observe` to avoid duplicate invocations.\n/** https://wagmi.sh/core/api/actions/watchBlockNumber */ function watchBlockNumber(config, parameters) {\n    const { syncConnectedChain = config._internal.syncConnectedChain, ...rest } = parameters;\n    let unwatch;\n    const listener = (chainId)=>{\n        if (unwatch) unwatch();\n        const client = config.getClient({\n            chainId\n        });\n        const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.watchBlockNumber, \"watchBlockNumber\");\n        unwatch = action(rest);\n        return unwatch;\n    };\n    // set up listener for block number changes\n    const unlisten = listener(parameters.chainId);\n    // set up subscriber for connected chain changes\n    let unsubscribe;\n    if (syncConnectedChain && !parameters.chainId) unsubscribe = config.subscribe(({ chainId })=>chainId, async (chainId)=>listener(chainId));\n    return ()=>{\n        unlisten?.();\n        unsubscribe?.();\n    };\n} //# sourceMappingURL=watchBlockNumber.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaEJsb2NrTnVtYmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwRTtBQUN4QjtBQUNsRCxpRUFBaUU7QUFDakUsdURBQXVELEdBQ2hELFNBQVNBLGlCQUFpQkcsTUFBTSxFQUFFQyxVQUFVO0lBQy9DLE1BQU0sRUFBRUMscUJBQXFCRixPQUFPRyxTQUFTLENBQUNELGtCQUFrQixFQUFFLEdBQUdFLE1BQU0sR0FBR0g7SUFDOUUsSUFBSUk7SUFDSixNQUFNQyxXQUFXLENBQUNDO1FBQ2QsSUFBSUYsU0FDQUE7UUFDSixNQUFNRyxTQUFTUixPQUFPUyxTQUFTLENBQUM7WUFBRUY7UUFBUTtRQUMxQyxNQUFNRyxTQUFTWCw4REFBU0EsQ0FBQ1MsUUFBUVYsMERBQXFCQSxFQUFFO1FBQ3hETyxVQUFVSyxPQUFPTjtRQUNqQixPQUFPQztJQUNYO0lBQ0EsMkNBQTJDO0lBQzNDLE1BQU1NLFdBQVdMLFNBQVNMLFdBQVdNLE9BQU87SUFDNUMsZ0RBQWdEO0lBQ2hELElBQUlLO0lBQ0osSUFBSVYsc0JBQXNCLENBQUNELFdBQVdNLE9BQU8sRUFDekNLLGNBQWNaLE9BQU9hLFNBQVMsQ0FBQyxDQUFDLEVBQUVOLE9BQU8sRUFBRSxHQUFLQSxTQUFTLE9BQU9BLFVBQVlELFNBQVNDO0lBQ3pGLE9BQU87UUFDSEk7UUFDQUM7SUFDSjtBQUNKLEVBQ0EsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvd2F0Y2hCbG9ja051bWJlci5qcz9jOWEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdhdGNoQmxvY2tOdW1iZXIgYXMgdmllbV93YXRjaEJsb2NrTnVtYmVyLCB9IGZyb20gJ3ZpZW0vYWN0aW9ucyc7XG5pbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICcuLi91dGlscy9nZXRBY3Rpb24uanMnO1xuLy8gVE9ETzogd3JhcCBpbiB2aWVtJ3MgYG9ic2VydmVgIHRvIGF2b2lkIGR1cGxpY2F0ZSBpbnZvY2F0aW9ucy5cbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvd2F0Y2hCbG9ja051bWJlciAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdhdGNoQmxvY2tOdW1iZXIoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBzeW5jQ29ubmVjdGVkQ2hhaW4gPSBjb25maWcuX2ludGVybmFsLnN5bmNDb25uZWN0ZWRDaGFpbiwgLi4ucmVzdCB9ID0gcGFyYW1ldGVycztcbiAgICBsZXQgdW53YXRjaDtcbiAgICBjb25zdCBsaXN0ZW5lciA9IChjaGFpbklkKSA9PiB7XG4gICAgICAgIGlmICh1bndhdGNoKVxuICAgICAgICAgICAgdW53YXRjaCgpO1xuICAgICAgICBjb25zdCBjbGllbnQgPSBjb25maWcuZ2V0Q2xpZW50KHsgY2hhaW5JZCB9KTtcbiAgICAgICAgY29uc3QgYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgdmllbV93YXRjaEJsb2NrTnVtYmVyLCAnd2F0Y2hCbG9ja051bWJlcicpO1xuICAgICAgICB1bndhdGNoID0gYWN0aW9uKHJlc3QpO1xuICAgICAgICByZXR1cm4gdW53YXRjaDtcbiAgICB9O1xuICAgIC8vIHNldCB1cCBsaXN0ZW5lciBmb3IgYmxvY2sgbnVtYmVyIGNoYW5nZXNcbiAgICBjb25zdCB1bmxpc3RlbiA9IGxpc3RlbmVyKHBhcmFtZXRlcnMuY2hhaW5JZCk7XG4gICAgLy8gc2V0IHVwIHN1YnNjcmliZXIgZm9yIGNvbm5lY3RlZCBjaGFpbiBjaGFuZ2VzXG4gICAgbGV0IHVuc3Vic2NyaWJlO1xuICAgIGlmIChzeW5jQ29ubmVjdGVkQ2hhaW4gJiYgIXBhcmFtZXRlcnMuY2hhaW5JZClcbiAgICAgICAgdW5zdWJzY3JpYmUgPSBjb25maWcuc3Vic2NyaWJlKCh7IGNoYWluSWQgfSkgPT4gY2hhaW5JZCwgYXN5bmMgKGNoYWluSWQpID0+IGxpc3RlbmVyKGNoYWluSWQpKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICB1bmxpc3Rlbj8uKCk7XG4gICAgICAgIHVuc3Vic2NyaWJlPy4oKTtcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2F0Y2hCbG9ja051bWJlci5qcy5tYXAiXSwibmFtZXMiOlsid2F0Y2hCbG9ja051bWJlciIsInZpZW1fd2F0Y2hCbG9ja051bWJlciIsImdldEFjdGlvbiIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJzeW5jQ29ubmVjdGVkQ2hhaW4iLCJfaW50ZXJuYWwiLCJyZXN0IiwidW53YXRjaCIsImxpc3RlbmVyIiwiY2hhaW5JZCIsImNsaWVudCIsImdldENsaWVudCIsImFjdGlvbiIsInVubGlzdGVuIiwidW5zdWJzY3JpYmUiLCJzdWJzY3JpYmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchBlockNumber.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchChainId.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchChainId.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchChainId: () => (/* binding */ watchChainId)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/watchChainId */ function watchChainId(config, parameters) {\n    const { onChange } = parameters;\n    return config.subscribe((state)=>state.chainId, onChange);\n} //# sourceMappingURL=watchChainId.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENoYWluSWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLG1EQUFtRCxHQUM1QyxTQUFTQSxhQUFhQyxNQUFNLEVBQUVDLFVBQVU7SUFDM0MsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0Q7SUFDckIsT0FBT0QsT0FBT0csU0FBUyxDQUFDLENBQUNDLFFBQVVBLE1BQU1DLE9BQU8sRUFBRUg7QUFDdEQsRUFDQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENoYWluSWQuanM/ZDA1NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL3dhdGNoQ2hhaW5JZCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdhdGNoQ2hhaW5JZChjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IG9uQ2hhbmdlIH0gPSBwYXJhbWV0ZXJzO1xuICAgIHJldHVybiBjb25maWcuc3Vic2NyaWJlKChzdGF0ZSkgPT4gc3RhdGUuY2hhaW5JZCwgb25DaGFuZ2UpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2F0Y2hDaGFpbklkLmpzLm1hcCJdLCJuYW1lcyI6WyJ3YXRjaENoYWluSWQiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwib25DaGFuZ2UiLCJzdWJzY3JpYmUiLCJzdGF0ZSIsImNoYWluSWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchChainId.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchChains.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchChains.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchChains: () => (/* binding */ watchChains)\n/* harmony export */ });\n/**\n * @internal\n * We don't expose this because as far as consumers know, you can't chainge (lol) `config.chains` at runtime.\n * Setting `config.chains` via `config._internal.chains.setState(...)` is an extremely advanced use case that's not worth documenting or supporting in the public API at this time.\n */ function watchChains(config, parameters) {\n    const { onChange } = parameters;\n    return config._internal.chains.subscribe((chains, prevChains)=>{\n        onChange(chains, prevChains);\n    });\n} //# sourceMappingURL=watchChains.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENoYWlucy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUNNLFNBQVNBLFlBQVlDLE1BQU0sRUFBRUMsVUFBVTtJQUMxQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRDtJQUNyQixPQUFPRCxPQUFPRyxTQUFTLENBQUNDLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDLENBQUNELFFBQVFFO1FBQzlDSixTQUFTRSxRQUFRRTtJQUNyQjtBQUNKLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvd2F0Y2hDaGFpbnMuanM/NjhjZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbnRlcm5hbFxuICogV2UgZG9uJ3QgZXhwb3NlIHRoaXMgYmVjYXVzZSBhcyBmYXIgYXMgY29uc3VtZXJzIGtub3csIHlvdSBjYW4ndCBjaGFpbmdlIChsb2wpIGBjb25maWcuY2hhaW5zYCBhdCBydW50aW1lLlxuICogU2V0dGluZyBgY29uZmlnLmNoYWluc2AgdmlhIGBjb25maWcuX2ludGVybmFsLmNoYWlucy5zZXRTdGF0ZSguLi4pYCBpcyBhbiBleHRyZW1lbHkgYWR2YW5jZWQgdXNlIGNhc2UgdGhhdCdzIG5vdCB3b3J0aCBkb2N1bWVudGluZyBvciBzdXBwb3J0aW5nIGluIHRoZSBwdWJsaWMgQVBJIGF0IHRoaXMgdGltZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdhdGNoQ2hhaW5zKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHBhcmFtZXRlcnM7XG4gICAgcmV0dXJuIGNvbmZpZy5faW50ZXJuYWwuY2hhaW5zLnN1YnNjcmliZSgoY2hhaW5zLCBwcmV2Q2hhaW5zKSA9PiB7XG4gICAgICAgIG9uQ2hhbmdlKGNoYWlucywgcHJldkNoYWlucyk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YXRjaENoYWlucy5qcy5tYXAiXSwibmFtZXMiOlsid2F0Y2hDaGFpbnMiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwib25DaGFuZ2UiLCJfaW50ZXJuYWwiLCJjaGFpbnMiLCJzdWJzY3JpYmUiLCJwcmV2Q2hhaW5zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchChains.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchConnections.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchConnections.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchConnections: () => (/* binding */ watchConnections)\n/* harmony export */ });\n/* harmony import */ var _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/deepEqual.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\");\n/* harmony import */ var _getConnections_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getConnections.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnections.js\");\n\n\n/** https://wagmi.sh/core/api/actions/watchConnections */ function watchConnections(config, parameters) {\n    const { onChange } = parameters;\n    return config.subscribe(()=>(0,_getConnections_js__WEBPACK_IMPORTED_MODULE_0__.getConnections)(config), onChange, {\n        equalityFn: _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_1__.deepEqual\n    });\n} //# sourceMappingURL=watchConnections.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENvbm5lY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrRDtBQUNJO0FBQ3RELHVEQUF1RCxHQUNoRCxTQUFTRSxpQkFBaUJDLE1BQU0sRUFBRUMsVUFBVTtJQUMvQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRDtJQUNyQixPQUFPRCxPQUFPRyxTQUFTLENBQUMsSUFBTUwsa0VBQWNBLENBQUNFLFNBQVNFLFVBQVU7UUFDNURFLFlBQVlQLDBEQUFTQTtJQUN6QjtBQUNKLEVBQ0EsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvd2F0Y2hDb25uZWN0aW9ucy5qcz82OWVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZXBFcXVhbCB9IGZyb20gJy4uL3V0aWxzL2RlZXBFcXVhbC5qcyc7XG5pbXBvcnQgeyBnZXRDb25uZWN0aW9ucywgfSBmcm9tICcuL2dldENvbm5lY3Rpb25zLmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvd2F0Y2hDb25uZWN0aW9ucyAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdhdGNoQ29ubmVjdGlvbnMoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBvbkNoYW5nZSB9ID0gcGFyYW1ldGVycztcbiAgICByZXR1cm4gY29uZmlnLnN1YnNjcmliZSgoKSA9PiBnZXRDb25uZWN0aW9ucyhjb25maWcpLCBvbkNoYW5nZSwge1xuICAgICAgICBlcXVhbGl0eUZuOiBkZWVwRXF1YWwsXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YXRjaENvbm5lY3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6WyJkZWVwRXF1YWwiLCJnZXRDb25uZWN0aW9ucyIsIndhdGNoQ29ubmVjdGlvbnMiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwib25DaGFuZ2UiLCJzdWJzY3JpYmUiLCJlcXVhbGl0eUZuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchConnections.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchConnectors.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchConnectors.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchConnectors: () => (/* binding */ watchConnectors)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/watchConnectors */ function watchConnectors(config, parameters) {\n    const { onChange } = parameters;\n    return config._internal.connectors.subscribe((connectors, prevConnectors)=>{\n        onChange(Object.values(connectors), prevConnectors);\n    });\n} //# sourceMappingURL=watchConnectors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENvbm5lY3RvcnMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNEQUFzRCxHQUMvQyxTQUFTQSxnQkFBZ0JDLE1BQU0sRUFBRUMsVUFBVTtJQUM5QyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRDtJQUNyQixPQUFPRCxPQUFPRyxTQUFTLENBQUNDLFVBQVUsQ0FBQ0MsU0FBUyxDQUFDLENBQUNELFlBQVlFO1FBQ3RESixTQUFTSyxPQUFPQyxNQUFNLENBQUNKLGFBQWFFO0lBQ3hDO0FBQ0osRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENvbm5lY3RvcnMuanM/MzZlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL3dhdGNoQ29ubmVjdG9ycyAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdhdGNoQ29ubmVjdG9ycyhjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IG9uQ2hhbmdlIH0gPSBwYXJhbWV0ZXJzO1xuICAgIHJldHVybiBjb25maWcuX2ludGVybmFsLmNvbm5lY3RvcnMuc3Vic2NyaWJlKChjb25uZWN0b3JzLCBwcmV2Q29ubmVjdG9ycykgPT4ge1xuICAgICAgICBvbkNoYW5nZShPYmplY3QudmFsdWVzKGNvbm5lY3RvcnMpLCBwcmV2Q29ubmVjdG9ycyk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YXRjaENvbm5lY3RvcnMuanMubWFwIl0sIm5hbWVzIjpbIndhdGNoQ29ubmVjdG9ycyIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJvbkNoYW5nZSIsIl9pbnRlcm5hbCIsImNvbm5lY3RvcnMiLCJzdWJzY3JpYmUiLCJwcmV2Q29ubmVjdG9ycyIsIk9iamVjdCIsInZhbHVlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchConnectors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchContractEvent.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchContractEvent.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchContractEvent: () => (/* binding */ watchContractEvent)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/watchContractEvent.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n// TODO: wrap in viem's `observe` to avoid duplicate invocations.\n/** https://wagmi.sh/core/api/actions/watchContractEvent */ function watchContractEvent(config, parameters) {\n    const { syncConnectedChain = config._internal.syncConnectedChain, ...rest } = parameters;\n    let unwatch;\n    const listener = (chainId)=>{\n        if (unwatch) unwatch();\n        const client = config.getClient({\n            chainId\n        });\n        const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.watchContractEvent, \"watchContractEvent\");\n        unwatch = action(rest);\n        return unwatch;\n    };\n    // set up listener for transaction changes\n    const unlisten = listener(parameters.chainId);\n    // set up subscriber for connected chain changes\n    let unsubscribe;\n    if (syncConnectedChain && !parameters.chainId) unsubscribe = config.subscribe(({ chainId })=>chainId, async (chainId)=>listener(chainId));\n    return ()=>{\n        unlisten?.();\n        unsubscribe?.();\n    };\n} //# sourceMappingURL=watchContractEvent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENvbnRyYWN0RXZlbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThFO0FBQzVCO0FBQ2xELGlFQUFpRTtBQUNqRSx5REFBeUQsR0FDbEQsU0FBU0EsbUJBQW1CRyxNQUFNLEVBQUVDLFVBQVU7SUFDakQsTUFBTSxFQUFFQyxxQkFBcUJGLE9BQU9HLFNBQVMsQ0FBQ0Qsa0JBQWtCLEVBQUUsR0FBR0UsTUFBTSxHQUFHSDtJQUM5RSxJQUFJSTtJQUNKLE1BQU1DLFdBQVcsQ0FBQ0M7UUFDZCxJQUFJRixTQUNBQTtRQUNKLE1BQU1HLFNBQVNSLE9BQU9TLFNBQVMsQ0FBQztZQUFFRjtRQUFRO1FBQzFDLE1BQU1HLFNBQVNYLDhEQUFTQSxDQUFDUyxRQUFRViw0REFBdUJBLEVBQUU7UUFDMURPLFVBQVVLLE9BQU9OO1FBQ2pCLE9BQU9DO0lBQ1g7SUFDQSwwQ0FBMEM7SUFDMUMsTUFBTU0sV0FBV0wsU0FBU0wsV0FBV00sT0FBTztJQUM1QyxnREFBZ0Q7SUFDaEQsSUFBSUs7SUFDSixJQUFJVixzQkFBc0IsQ0FBQ0QsV0FBV00sT0FBTyxFQUN6Q0ssY0FBY1osT0FBT2EsU0FBUyxDQUFDLENBQUMsRUFBRU4sT0FBTyxFQUFFLEdBQUtBLFNBQVMsT0FBT0EsVUFBWUQsU0FBU0M7SUFDekYsT0FBTztRQUNISTtRQUNBQztJQUNKO0FBQ0osRUFDQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENvbnRyYWN0RXZlbnQuanM/Y2M2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3YXRjaENvbnRyYWN0RXZlbnQgYXMgdmllbV93YXRjaENvbnRyYWN0RXZlbnQsIH0gZnJvbSAndmllbS9hY3Rpb25zJztcbmltcG9ydCB7IGdldEFjdGlvbiB9IGZyb20gJy4uL3V0aWxzL2dldEFjdGlvbi5qcyc7XG4vLyBUT0RPOiB3cmFwIGluIHZpZW0ncyBgb2JzZXJ2ZWAgdG8gYXZvaWQgZHVwbGljYXRlIGludm9jYXRpb25zLlxuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy93YXRjaENvbnRyYWN0RXZlbnQgKi9cbmV4cG9ydCBmdW5jdGlvbiB3YXRjaENvbnRyYWN0RXZlbnQoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBzeW5jQ29ubmVjdGVkQ2hhaW4gPSBjb25maWcuX2ludGVybmFsLnN5bmNDb25uZWN0ZWRDaGFpbiwgLi4ucmVzdCB9ID0gcGFyYW1ldGVycztcbiAgICBsZXQgdW53YXRjaDtcbiAgICBjb25zdCBsaXN0ZW5lciA9IChjaGFpbklkKSA9PiB7XG4gICAgICAgIGlmICh1bndhdGNoKVxuICAgICAgICAgICAgdW53YXRjaCgpO1xuICAgICAgICBjb25zdCBjbGllbnQgPSBjb25maWcuZ2V0Q2xpZW50KHsgY2hhaW5JZCB9KTtcbiAgICAgICAgY29uc3QgYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgdmllbV93YXRjaENvbnRyYWN0RXZlbnQsICd3YXRjaENvbnRyYWN0RXZlbnQnKTtcbiAgICAgICAgdW53YXRjaCA9IGFjdGlvbihyZXN0KTtcbiAgICAgICAgcmV0dXJuIHVud2F0Y2g7XG4gICAgfTtcbiAgICAvLyBzZXQgdXAgbGlzdGVuZXIgZm9yIHRyYW5zYWN0aW9uIGNoYW5nZXNcbiAgICBjb25zdCB1bmxpc3RlbiA9IGxpc3RlbmVyKHBhcmFtZXRlcnMuY2hhaW5JZCk7XG4gICAgLy8gc2V0IHVwIHN1YnNjcmliZXIgZm9yIGNvbm5lY3RlZCBjaGFpbiBjaGFuZ2VzXG4gICAgbGV0IHVuc3Vic2NyaWJlO1xuICAgIGlmIChzeW5jQ29ubmVjdGVkQ2hhaW4gJiYgIXBhcmFtZXRlcnMuY2hhaW5JZClcbiAgICAgICAgdW5zdWJzY3JpYmUgPSBjb25maWcuc3Vic2NyaWJlKCh7IGNoYWluSWQgfSkgPT4gY2hhaW5JZCwgYXN5bmMgKGNoYWluSWQpID0+IGxpc3RlbmVyKGNoYWluSWQpKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICB1bmxpc3Rlbj8uKCk7XG4gICAgICAgIHVuc3Vic2NyaWJlPy4oKTtcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2F0Y2hDb250cmFjdEV2ZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJ3YXRjaENvbnRyYWN0RXZlbnQiLCJ2aWVtX3dhdGNoQ29udHJhY3RFdmVudCIsImdldEFjdGlvbiIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJzeW5jQ29ubmVjdGVkQ2hhaW4iLCJfaW50ZXJuYWwiLCJyZXN0IiwidW53YXRjaCIsImxpc3RlbmVyIiwiY2hhaW5JZCIsImNsaWVudCIsImdldENsaWVudCIsImFjdGlvbiIsInVubGlzdGVuIiwidW5zdWJzY3JpYmUiLCJzdWJzY3JpYmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchContractEvent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchPublicClient.js":
/*!************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchPublicClient.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchPublicClient: () => (/* binding */ watchPublicClient)\n/* harmony export */ });\n/* harmony import */ var _getPublicClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getPublicClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getPublicClient.js\");\n\n/** https://wagmi.sh/core/api/actions/watchPublicClient */ function watchPublicClient(config, parameters) {\n    const { onChange } = parameters;\n    return config.subscribe(()=>(0,_getPublicClient_js__WEBPACK_IMPORTED_MODULE_0__.getPublicClient)(config), onChange, {\n        equalityFn (a, b) {\n            return a?.uid === b?.uid;\n        }\n    });\n} //# sourceMappingURL=watchPublicClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaFB1YmxpY0NsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3RDtBQUN4RCx3REFBd0QsR0FDakQsU0FBU0Msa0JBQWtCQyxNQUFNLEVBQUVDLFVBQVU7SUFDaEQsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0Q7SUFDckIsT0FBT0QsT0FBT0csU0FBUyxDQUFDLElBQU1MLG9FQUFlQSxDQUFDRSxTQUFTRSxVQUFVO1FBQzdERSxZQUFXQyxDQUFDLEVBQUVDLENBQUM7WUFDWCxPQUFPRCxHQUFHRSxRQUFRRCxHQUFHQztRQUN6QjtJQUNKO0FBQ0osRUFDQSw2Q0FBNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaFB1YmxpY0NsaWVudC5qcz8xYzY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFB1YmxpY0NsaWVudCwgfSBmcm9tICcuL2dldFB1YmxpY0NsaWVudC5qcyc7XG4vKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL3dhdGNoUHVibGljQ2xpZW50ICovXG5leHBvcnQgZnVuY3Rpb24gd2F0Y2hQdWJsaWNDbGllbnQoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBvbkNoYW5nZSB9ID0gcGFyYW1ldGVycztcbiAgICByZXR1cm4gY29uZmlnLnN1YnNjcmliZSgoKSA9PiBnZXRQdWJsaWNDbGllbnQoY29uZmlnKSwgb25DaGFuZ2UsIHtcbiAgICAgICAgZXF1YWxpdHlGbihhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4gYT8udWlkID09PSBiPy51aWQ7XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YXRjaFB1YmxpY0NsaWVudC5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0UHVibGljQ2xpZW50Iiwid2F0Y2hQdWJsaWNDbGllbnQiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwib25DaGFuZ2UiLCJzdWJzY3JpYmUiLCJlcXVhbGl0eUZuIiwiYSIsImIiLCJ1aWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchPublicClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/writeContract.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/writeContract.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   writeContract: () => (/* binding */ writeContract)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/wallet/writeContract.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n/* harmony import */ var _getAccount_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getAccount.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getAccount.js\");\n/* harmony import */ var _getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getConnectorClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\");\n/* harmony import */ var _simulateContract_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./simulateContract.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/simulateContract.js\");\n\n\n\n\n\n/** https://wagmi.sh/core/api/actions/writeContract */ async function writeContract(config, parameters) {\n    const { account, chainId, connector, __mode, ...rest } = parameters;\n    let client;\n    if (typeof account === \"object\" && account.type === \"local\") client = config.getClient({\n        chainId\n    });\n    else client = await (0,_getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__.getConnectorClient)(config, {\n        account,\n        chainId,\n        connector\n    });\n    const { connector: activeConnector } = (0,_getAccount_js__WEBPACK_IMPORTED_MODULE_1__.getAccount)(config);\n    let request;\n    if (__mode === \"prepared\" || activeConnector?.supportsSimulation) request = rest;\n    else {\n        const { request: simulateRequest } = await (0,_simulateContract_js__WEBPACK_IMPORTED_MODULE_2__.simulateContract)(config, {\n            ...rest,\n            account,\n            chainId\n        });\n        request = simulateRequest;\n    }\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_3__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_4__.writeContract, \"writeContract\");\n    const hash = await action({\n        ...request,\n        ...account ? {\n            account\n        } : {},\n        chain: chainId ? {\n            id: chainId\n        } : null\n    });\n    return hash;\n} //# sourceMappingURL=writeContract.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93cml0ZUNvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvRTtBQUNsQjtBQUNMO0FBQ2lCO0FBQ0o7QUFDMUQsb0RBQW9ELEdBQzdDLGVBQWVBLGNBQWNNLE1BQU0sRUFBRUMsVUFBVTtJQUNsRCxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFFQyxTQUFTLEVBQUVDLE1BQU0sRUFBRSxHQUFHQyxNQUFNLEdBQUdMO0lBQ3pELElBQUlNO0lBQ0osSUFBSSxPQUFPTCxZQUFZLFlBQVlBLFFBQVFNLElBQUksS0FBSyxTQUNoREQsU0FBU1AsT0FBT1MsU0FBUyxDQUFDO1FBQUVOO0lBQVE7U0FFcENJLFNBQVMsTUFBTVQsMEVBQWtCQSxDQUFDRSxRQUFRO1FBQUVFO1FBQVNDO1FBQVNDO0lBQVU7SUFDNUUsTUFBTSxFQUFFQSxXQUFXTSxlQUFlLEVBQUUsR0FBR2IsMERBQVVBLENBQUNHO0lBQ2xELElBQUlXO0lBQ0osSUFBSU4sV0FBVyxjQUFjSyxpQkFBaUJFLG9CQUMxQ0QsVUFBVUw7U0FDVDtRQUNELE1BQU0sRUFBRUssU0FBU0UsZUFBZSxFQUFFLEdBQUcsTUFBTWQsc0VBQWdCQSxDQUFDQyxRQUFRO1lBQ2hFLEdBQUdNLElBQUk7WUFDUEo7WUFDQUM7UUFDSjtRQUNBUSxVQUFVRTtJQUNkO0lBQ0EsTUFBTUMsU0FBU2xCLDhEQUFTQSxDQUFDVyxRQUFRWix1REFBa0JBLEVBQUU7SUFDckQsTUFBTW9CLE9BQU8sTUFBTUQsT0FBTztRQUN0QixHQUFHSCxPQUFPO1FBQ1YsR0FBSVQsVUFBVTtZQUFFQTtRQUFRLElBQUksQ0FBQyxDQUFDO1FBQzlCYyxPQUFPYixVQUFVO1lBQUVjLElBQUlkO1FBQVEsSUFBSTtJQUN2QztJQUNBLE9BQU9ZO0FBQ1gsRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93cml0ZUNvbnRyYWN0LmpzPzM3ZDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd3JpdGVDb250cmFjdCBhcyB2aWVtX3dyaXRlQ29udHJhY3QsIH0gZnJvbSAndmllbS9hY3Rpb25zJztcbmltcG9ydCB7IGdldEFjdGlvbiB9IGZyb20gJy4uL3V0aWxzL2dldEFjdGlvbi5qcyc7XG5pbXBvcnQgeyBnZXRBY2NvdW50IH0gZnJvbSAnLi9nZXRBY2NvdW50LmpzJztcbmltcG9ydCB7IGdldENvbm5lY3RvckNsaWVudCwgfSBmcm9tICcuL2dldENvbm5lY3RvckNsaWVudC5qcyc7XG5pbXBvcnQgeyBzaW11bGF0ZUNvbnRyYWN0LCB9IGZyb20gJy4vc2ltdWxhdGVDb250cmFjdC5qcyc7XG4vKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL3dyaXRlQ29udHJhY3QgKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB3cml0ZUNvbnRyYWN0KGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgYWNjb3VudCwgY2hhaW5JZCwgY29ubmVjdG9yLCBfX21vZGUsIC4uLnJlc3QgfSA9IHBhcmFtZXRlcnM7XG4gICAgbGV0IGNsaWVudDtcbiAgICBpZiAodHlwZW9mIGFjY291bnQgPT09ICdvYmplY3QnICYmIGFjY291bnQudHlwZSA9PT0gJ2xvY2FsJylcbiAgICAgICAgY2xpZW50ID0gY29uZmlnLmdldENsaWVudCh7IGNoYWluSWQgfSk7XG4gICAgZWxzZVxuICAgICAgICBjbGllbnQgPSBhd2FpdCBnZXRDb25uZWN0b3JDbGllbnQoY29uZmlnLCB7IGFjY291bnQsIGNoYWluSWQsIGNvbm5lY3RvciB9KTtcbiAgICBjb25zdCB7IGNvbm5lY3RvcjogYWN0aXZlQ29ubmVjdG9yIH0gPSBnZXRBY2NvdW50KGNvbmZpZyk7XG4gICAgbGV0IHJlcXVlc3Q7XG4gICAgaWYgKF9fbW9kZSA9PT0gJ3ByZXBhcmVkJyB8fCBhY3RpdmVDb25uZWN0b3I/LnN1cHBvcnRzU2ltdWxhdGlvbilcbiAgICAgICAgcmVxdWVzdCA9IHJlc3Q7XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHsgcmVxdWVzdDogc2ltdWxhdGVSZXF1ZXN0IH0gPSBhd2FpdCBzaW11bGF0ZUNvbnRyYWN0KGNvbmZpZywge1xuICAgICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICAgIGFjY291bnQsXG4gICAgICAgICAgICBjaGFpbklkLFxuICAgICAgICB9KTtcbiAgICAgICAgcmVxdWVzdCA9IHNpbXVsYXRlUmVxdWVzdDtcbiAgICB9XG4gICAgY29uc3QgYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgdmllbV93cml0ZUNvbnRyYWN0LCAnd3JpdGVDb250cmFjdCcpO1xuICAgIGNvbnN0IGhhc2ggPSBhd2FpdCBhY3Rpb24oe1xuICAgICAgICAuLi5yZXF1ZXN0LFxuICAgICAgICAuLi4oYWNjb3VudCA/IHsgYWNjb3VudCB9IDoge30pLFxuICAgICAgICBjaGFpbjogY2hhaW5JZCA/IHsgaWQ6IGNoYWluSWQgfSA6IG51bGwsXG4gICAgfSk7XG4gICAgcmV0dXJuIGhhc2g7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cml0ZUNvbnRyYWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJ3cml0ZUNvbnRyYWN0IiwidmllbV93cml0ZUNvbnRyYWN0IiwiZ2V0QWN0aW9uIiwiZ2V0QWNjb3VudCIsImdldENvbm5lY3RvckNsaWVudCIsInNpbXVsYXRlQ29udHJhY3QiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiYWNjb3VudCIsImNoYWluSWQiLCJjb25uZWN0b3IiLCJfX21vZGUiLCJyZXN0IiwiY2xpZW50IiwidHlwZSIsImdldENsaWVudCIsImFjdGl2ZUNvbm5lY3RvciIsInJlcXVlc3QiLCJzdXBwb3J0c1NpbXVsYXRpb24iLCJzaW11bGF0ZVJlcXVlc3QiLCJhY3Rpb24iLCJoYXNoIiwiY2hhaW4iLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/writeContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConnector: () => (/* binding */ createConnector)\n/* harmony export */ });\nfunction createConnector(createConnectorFn) {\n    return createConnectorFn;\n} //# sourceMappingURL=createConnector.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY29ubmVjdG9ycy9jcmVhdGVDb25uZWN0b3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLGdCQUFnQkMsaUJBQWlCO0lBQzdDLE9BQU9BO0FBQ1gsRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY29ubmVjdG9ycy9jcmVhdGVDb25uZWN0b3IuanM/MThlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29ubmVjdG9yKGNyZWF0ZUNvbm5lY3RvckZuKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUNvbm5lY3RvckZuO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlQ29ubmVjdG9yLmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVDb25uZWN0b3IiLCJjcmVhdGVDb25uZWN0b3JGbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/injected.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/connectors/injected.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   injected: () => (/* binding */ injected)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/promise/withTimeout.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/promise/withRetry.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/connector.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\");\n/* harmony import */ var _createConnector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createConnector.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\");\n\n\n\n\n// Regex of wallets/providers that can accurately simulate contract calls & display contract revert reasons.\nconst supportsSimulationIdRegex = /(rabby|trustwallet)/;\nconst targetMap = {\n    coinbaseWallet: {\n        id: \"coinbaseWallet\",\n        name: \"Coinbase Wallet\",\n        provider (window1) {\n            if (window1?.coinbaseWalletExtension) return window1.coinbaseWalletExtension;\n            return findProvider(window1, \"isCoinbaseWallet\");\n        }\n    },\n    metaMask: {\n        id: \"metaMask\",\n        name: \"MetaMask\",\n        provider (window1) {\n            return findProvider(window1, (provider)=>{\n                if (!provider.isMetaMask) return false;\n                // Brave tries to make itself look like MetaMask\n                // Could also try RPC `web3_clientVersion` if following is unreliable\n                if (provider.isBraveWallet && !provider._events && !provider._state) return false;\n                // Other wallets that try to look like MetaMask\n                const flags = [\n                    \"isApexWallet\",\n                    \"isAvalanche\",\n                    \"isBitKeep\",\n                    \"isBlockWallet\",\n                    \"isKuCoinWallet\",\n                    \"isMathWallet\",\n                    \"isOkxWallet\",\n                    \"isOKExWallet\",\n                    \"isOneInchIOSWallet\",\n                    \"isOneInchAndroidWallet\",\n                    \"isOpera\",\n                    \"isPortal\",\n                    \"isRabby\",\n                    \"isTokenPocket\",\n                    \"isTokenary\",\n                    \"isZerion\"\n                ];\n                for (const flag of flags)if (provider[flag]) return false;\n                return true;\n            });\n        }\n    },\n    phantom: {\n        id: \"phantom\",\n        name: \"Phantom\",\n        provider (window1) {\n            if (window1?.phantom?.ethereum) return window1.phantom?.ethereum;\n            return findProvider(window1, \"isPhantom\");\n        }\n    }\n};\ninjected.type = \"injected\";\nfunction injected(parameters = {}) {\n    const { shimDisconnect = true, unstable_shimAsyncInject } = parameters;\n    function getTarget() {\n        const target = parameters.target;\n        if (typeof target === \"function\") {\n            const result = target();\n            if (result) return result;\n        }\n        if (typeof target === \"object\") return target;\n        if (typeof target === \"string\") return {\n            ...targetMap[target] ?? {\n                id: target,\n                name: `${target[0].toUpperCase()}${target.slice(1)}`,\n                provider: `is${target[0].toUpperCase()}${target.slice(1)}`\n            }\n        };\n        return {\n            id: \"injected\",\n            name: \"Injected\",\n            provider (window1) {\n                return window1?.ethereum;\n            }\n        };\n    }\n    let accountsChanged;\n    let chainChanged;\n    let connect;\n    let disconnect;\n    return (0,_createConnector_js__WEBPACK_IMPORTED_MODULE_0__.createConnector)((config)=>({\n            get icon () {\n                return getTarget().icon;\n            },\n            get id () {\n                return getTarget().id;\n            },\n            get name () {\n                return getTarget().name;\n            },\n            get supportsSimulation () {\n                return supportsSimulationIdRegex.test(this.id.toLowerCase());\n            },\n            type: injected.type,\n            async setup () {\n                const provider = await this.getProvider();\n                // Only start listening for events if `target` is set, otherwise `injected()` will also receive events\n                if (provider && parameters.target) {\n                    if (!connect) {\n                        connect = this.onConnect.bind(this);\n                        provider.on(\"connect\", connect);\n                    }\n                    // We shouldn't need to listen for `'accountsChanged'` here since the `'connect'` event should suffice (and wallet shouldn't be connected yet).\n                    // Some wallets, like MetaMask, do not implement the `'connect'` event and overload `'accountsChanged'` instead.\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                }\n            },\n            async connect ({ chainId, isReconnecting } = {}) {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                let accounts = [];\n                if (isReconnecting) accounts = await this.getAccounts().catch(()=>[]);\n                else if (shimDisconnect) {\n                    // Attempt to show another prompt for selecting account if `shimDisconnect` flag is enabled\n                    try {\n                        const permissions = await provider.request({\n                            method: \"wallet_requestPermissions\",\n                            params: [\n                                {\n                                    eth_accounts: {}\n                                }\n                            ]\n                        });\n                        accounts = permissions[0]?.caveats?.[0]?.value?.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n                    } catch (err) {\n                        const error = err;\n                        // Not all injected providers support `wallet_requestPermissions` (e.g. MetaMask iOS).\n                        // Only bubble up error if user rejects request\n                        if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError.code) throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                        // Or prompt is already open\n                        if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.ResourceUnavailableRpcError.code) throw error;\n                    }\n                }\n                try {\n                    if (!accounts?.length && !isReconnecting) {\n                        const requestedAccounts = await provider.request({\n                            method: \"eth_requestAccounts\"\n                        });\n                        accounts = requestedAccounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n                    }\n                    // Manage EIP-1193 event listeners\n                    // https://eips.ethereum.org/EIPS/eip-1193#events\n                    if (connect) {\n                        provider.removeListener(\"connect\", connect);\n                        connect = undefined;\n                    }\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                    // Switch to chain if provided\n                    let currentChainId = await this.getChainId();\n                    if (chainId && currentChainId !== chainId) {\n                        const chain = await this.switchChain({\n                            chainId\n                        }).catch((error)=>{\n                            if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError.code) throw error;\n                            return {\n                                id: currentChainId\n                            };\n                        });\n                        currentChainId = chain?.id ?? currentChainId;\n                    }\n                    // Remove disconnected shim if it exists\n                    if (shimDisconnect) await config.storage?.removeItem(`${this.id}.disconnected`);\n                    // Add connected shim if no target exists\n                    if (!parameters.target) await config.storage?.setItem(\"injected.connected\", true);\n                    return {\n                        accounts,\n                        chainId: currentChainId\n                    };\n                } catch (err) {\n                    const error = err;\n                    if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError.code) throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                    if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.ResourceUnavailableRpcError.code) throw new viem__WEBPACK_IMPORTED_MODULE_3__.ResourceUnavailableRpcError(error);\n                    throw error;\n                }\n            },\n            async disconnect () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                // Manage EIP-1193 event listeners\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                if (!connect) {\n                    connect = this.onConnect.bind(this);\n                    provider.on(\"connect\", connect);\n                }\n                // Experimental support for MetaMask disconnect\n                // https://github.com/MetaMask/metamask-improvement-proposals/blob/main/MIPs/mip-2.md\n                try {\n                    // Adding timeout as not all wallets support this method and can hang\n                    // https://github.com/wevm/wagmi/issues/4064\n                    await (0,viem__WEBPACK_IMPORTED_MODULE_4__.withTimeout)(()=>// TODO: Remove explicit type for viem@3\n                        provider.request({\n                            // `'wallet_revokePermissions'` added in `viem@2.10.3`\n                            method: \"wallet_revokePermissions\",\n                            params: [\n                                {\n                                    eth_accounts: {}\n                                }\n                            ]\n                        }), {\n                        timeout: 100\n                    });\n                } catch  {}\n                // Add shim signalling connector is disconnected\n                if (shimDisconnect) {\n                    await config.storage?.setItem(`${this.id}.disconnected`, true);\n                }\n                if (!parameters.target) await config.storage?.removeItem(\"injected.connected\");\n            },\n            async getAccounts () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const accounts = await provider.request({\n                    method: \"eth_accounts\"\n                });\n                return accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n            },\n            async getChainId () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const hexChainId = await provider.request({\n                    method: \"eth_chainId\"\n                });\n                return Number(hexChainId);\n            },\n            async getProvider () {\n                if (true) return undefined;\n                let provider;\n                const target = getTarget();\n                if (typeof target.provider === \"function\") provider = target.provider(window);\n                else if (typeof target.provider === \"string\") provider = findProvider(window, target.provider);\n                else provider = target.provider;\n                // Some wallets do not conform to EIP-1193 (e.g. Trust Wallet)\n                // https://github.com/wevm/wagmi/issues/3526#issuecomment-1912683002\n                if (provider && !provider.removeListener) {\n                    // Try using `off` handler if it exists, otherwise noop\n                    if (\"off\" in provider && typeof provider.off === \"function\") provider.removeListener = provider.off;\n                    else provider.removeListener = ()=>{};\n                }\n                return provider;\n            },\n            async isAuthorized () {\n                try {\n                    const isDisconnected = shimDisconnect && // If shim exists in storage, connector is disconnected\n                    await config.storage?.getItem(`${this.id}.disconnected`);\n                    if (isDisconnected) return false;\n                    // Don't allow injected connector to connect if no target is set and it hasn't already connected\n                    // (e.g. flag in storage is not set). This prevents a targetless injected connector from connecting\n                    // automatically whenever there is a targeted connector configured.\n                    if (!parameters.target) {\n                        const connected = await config.storage?.getItem(\"injected.connected\");\n                        if (!connected) return false;\n                    }\n                    const provider = await this.getProvider();\n                    if (!provider) {\n                        if (unstable_shimAsyncInject !== undefined && unstable_shimAsyncInject !== false) {\n                            // If no provider is found, check for async injection\n                            // https://github.com/wevm/references/issues/167\n                            // https://github.com/MetaMask/detect-provider\n                            const handleEthereum = async ()=>{\n                                if (false) {}\n                                const provider = await this.getProvider();\n                                return !!provider;\n                            };\n                            const timeout = typeof unstable_shimAsyncInject === \"number\" ? unstable_shimAsyncInject : 1000;\n                            const res = await Promise.race([\n                                ... false ? 0 : [],\n                                new Promise((resolve)=>setTimeout(()=>resolve(handleEthereum()), timeout))\n                            ]);\n                            if (res) return true;\n                        }\n                        throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                    }\n                    // Use retry strategy as some injected wallets (e.g. MetaMask) fail to\n                    // immediately resolve JSON-RPC requests on page load.\n                    const accounts = await (0,viem__WEBPACK_IMPORTED_MODULE_5__.withRetry)(()=>this.getAccounts());\n                    return !!accounts.length;\n                } catch  {\n                    return false;\n                }\n            },\n            async switchChain ({ addEthereumChainParameter, chainId }) {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const chain = config.chains.find((x)=>x.id === chainId);\n                if (!chain) throw new viem__WEBPACK_IMPORTED_MODULE_3__.SwitchChainError(new _errors_config_js__WEBPACK_IMPORTED_MODULE_6__.ChainNotConfiguredError());\n                try {\n                    await Promise.all([\n                        provider.request({\n                            method: \"wallet_switchEthereumChain\",\n                            params: [\n                                {\n                                    chainId: (0,viem__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(chainId)\n                                }\n                            ]\n                        })// During `'wallet_switchEthereumChain'`, MetaMask makes a `'net_version'` RPC call to the target chain.\n                        // If this request fails, MetaMask does not emit the `'chainChanged'` event, but will still switch the chain.\n                        // To counter this behavior, we request and emit the current chain ID to confirm the chain switch either via\n                        // this callback or an externally emitted `'chainChanged'` event.\n                        // https://github.com/MetaMask/metamask-extension/issues/24247\n                        .then(async ()=>{\n                            const currentChainId = await this.getChainId();\n                            if (currentChainId === chainId) config.emitter.emit(\"change\", {\n                                chainId\n                            });\n                        }),\n                        new Promise((resolve)=>config.emitter.once(\"change\", ({ chainId: currentChainId })=>{\n                                if (currentChainId === chainId) resolve();\n                            }))\n                    ]);\n                    return chain;\n                } catch (err) {\n                    const error = err;\n                    // Indicates chain is not added to provider\n                    if (error.code === 4902 || // Unwrapping for MetaMask Mobile\n                    // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n                    error?.data?.originalError?.code === 4902) {\n                        try {\n                            const { default: blockExplorer, ...blockExplorers } = chain.blockExplorers ?? {};\n                            let blockExplorerUrls;\n                            if (addEthereumChainParameter?.blockExplorerUrls) blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;\n                            else if (blockExplorer) blockExplorerUrls = [\n                                blockExplorer.url,\n                                ...Object.values(blockExplorers).map((x)=>x.url)\n                            ];\n                            let rpcUrls;\n                            if (addEthereumChainParameter?.rpcUrls?.length) rpcUrls = addEthereumChainParameter.rpcUrls;\n                            else rpcUrls = [\n                                chain.rpcUrls.default?.http[0] ?? \"\"\n                            ];\n                            const addEthereumChain = {\n                                blockExplorerUrls,\n                                chainId: (0,viem__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(chainId),\n                                chainName: addEthereumChainParameter?.chainName ?? chain.name,\n                                iconUrls: addEthereumChainParameter?.iconUrls,\n                                nativeCurrency: addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n                                rpcUrls\n                            };\n                            await provider.request({\n                                method: \"wallet_addEthereumChain\",\n                                params: [\n                                    addEthereumChain\n                                ]\n                            });\n                            const currentChainId = await this.getChainId();\n                            if (currentChainId !== chainId) throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(new Error(\"User rejected switch after adding network.\"));\n                            return chain;\n                        } catch (error) {\n                            throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                        }\n                    }\n                    if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError.code) throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                    throw new viem__WEBPACK_IMPORTED_MODULE_3__.SwitchChainError(error);\n                }\n            },\n            async onAccountsChanged (accounts) {\n                // Disconnect if there are no accounts\n                if (accounts.length === 0) this.onDisconnect();\n                else if (config.emitter.listenerCount(\"connect\")) {\n                    const chainId = (await this.getChainId()).toString();\n                    this.onConnect({\n                        chainId\n                    });\n                    // Remove disconnected shim if it exists\n                    if (shimDisconnect) await config.storage?.removeItem(`${this.id}.disconnected`);\n                } else config.emitter.emit(\"change\", {\n                    accounts: accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x))\n                });\n            },\n            onChainChanged (chain) {\n                const chainId = Number(chain);\n                config.emitter.emit(\"change\", {\n                    chainId\n                });\n            },\n            async onConnect (connectInfo) {\n                const accounts = await this.getAccounts();\n                if (accounts.length === 0) return;\n                const chainId = Number(connectInfo.chainId);\n                config.emitter.emit(\"connect\", {\n                    accounts,\n                    chainId\n                });\n                // Manage EIP-1193 event listeners\n                const provider = await this.getProvider();\n                if (provider) {\n                    if (connect) {\n                        provider.removeListener(\"connect\", connect);\n                        connect = undefined;\n                    }\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                }\n            },\n            async onDisconnect (error) {\n                const provider = await this.getProvider();\n                // If MetaMask emits a `code: 1013` error, wait for reconnection before disconnecting\n                // https://github.com/MetaMask/providers/pull/120\n                if (error && error.code === 1013) {\n                    if (provider && !!(await this.getAccounts()).length) return;\n                }\n                // No need to remove `${this.id}.disconnected` from storage because `onDisconnect` is typically\n                // only called when the wallet is disconnected through the wallet's interface, meaning the wallet\n                // actually disconnected and we don't need to simulate it.\n                config.emitter.emit(\"disconnect\");\n                // Manage EIP-1193 event listeners\n                if (provider) {\n                    if (chainChanged) {\n                        provider.removeListener(\"chainChanged\", chainChanged);\n                        chainChanged = undefined;\n                    }\n                    if (disconnect) {\n                        provider.removeListener(\"disconnect\", disconnect);\n                        disconnect = undefined;\n                    }\n                    if (!connect) {\n                        connect = this.onConnect.bind(this);\n                        provider.on(\"connect\", connect);\n                    }\n                }\n            }\n        }));\n}\nfunction findProvider(window1, select) {\n    function isProvider(provider) {\n        if (typeof select === \"function\") return select(provider);\n        if (typeof select === \"string\") return provider[select];\n        return true;\n    }\n    const ethereum = window1.ethereum;\n    if (ethereum?.providers) return ethereum.providers.find((provider)=>isProvider(provider));\n    if (ethereum && isProvider(ethereum)) return ethereum;\n    return undefined;\n} //# sourceMappingURL=injected.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/injected.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/createConfig.js":
/*!***********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/createConfig.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConfig: () => (/* binding */ createConfig)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createClient.js\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! zustand/middleware */ \"(ssr)/./node_modules/@wagmi/core/node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/vanilla */ \"(ssr)/./node_modules/@wagmi/core/node_modules/zustand/esm/vanilla.mjs\");\n/* harmony import */ var _connectors_injected_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./connectors/injected.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/injected.js\");\n/* harmony import */ var _createEmitter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createEmitter.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/createEmitter.js\");\n/* harmony import */ var _createStorage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createStorage.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/createStorage.js\");\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var _utils_uid_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/uid.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/uid.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./version.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/version.js\");\n\n\n\n\n\n\n\n\n\n\nfunction createConfig(parameters) {\n    const { multiInjectedProviderDiscovery = true, storage = (0,_createStorage_js__WEBPACK_IMPORTED_MODULE_0__.createStorage)({\n        storage:  false ? 0 : _createStorage_js__WEBPACK_IMPORTED_MODULE_0__.noopStorage\n    }), syncConnectedChain = true, ssr = false, ...rest } = parameters;\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Set up connectors, clients, etc.\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    const mipd =  false ? 0 : undefined;\n    const chains = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__.createStore)(()=>rest.chains);\n    const connectors = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__.createStore)(()=>[\n            ...rest.connectors ?? [],\n            ...!ssr ? mipd?.getProviders().map(providerDetailToConnector) ?? [] : []\n        ].map(setup));\n    function setup(connectorFn) {\n        // Set up emitter with uid and add to connector so they are \"linked\" together.\n        const emitter = (0,_createEmitter_js__WEBPACK_IMPORTED_MODULE_2__.createEmitter)((0,_utils_uid_js__WEBPACK_IMPORTED_MODULE_3__.uid)());\n        const connector = {\n            ...connectorFn({\n                emitter,\n                chains: chains.getState(),\n                storage\n            }),\n            emitter,\n            uid: emitter.uid\n        };\n        // Start listening for `connect` events on connector setup\n        // This allows connectors to \"connect\" themselves without user interaction (e.g. MetaMask's \"Manually connect to current site\")\n        emitter.on(\"connect\", connect);\n        connector.setup?.();\n        return connector;\n    }\n    function providerDetailToConnector(providerDetail) {\n        const { info } = providerDetail;\n        const provider = providerDetail.provider;\n        return (0,_connectors_injected_js__WEBPACK_IMPORTED_MODULE_4__.injected)({\n            target: {\n                ...info,\n                id: info.rdns,\n                provider\n            }\n        });\n    }\n    const clients = new Map();\n    function getClient(config = {}) {\n        const chainId = config.chainId ?? store.getState().chainId;\n        const chain = chains.getState().find((x)=>x.id === chainId);\n        // chainId specified and not configured\n        if (config.chainId && !chain) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_5__.ChainNotConfiguredError();\n        {\n            const client = clients.get(store.getState().chainId);\n            if (client && !chain) return client;\n            if (!chain) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_5__.ChainNotConfiguredError();\n        }\n        // If a memoized client exists for a chain id, use that.\n        {\n            const client = clients.get(chainId);\n            if (client) return client;\n        }\n        let client;\n        if (rest.client) client = rest.client({\n            chain\n        });\n        else {\n            const chainId = chain.id;\n            const chainIds = chains.getState().map((x)=>x.id);\n            // Grab all properties off `rest` and resolve for use in `createClient`\n            const properties = {};\n            const entries = Object.entries(rest);\n            for (const [key, value] of entries){\n                if (key === \"chains\" || key === \"client\" || key === \"connectors\" || key === \"transports\") continue;\n                if (typeof value === \"object\") {\n                    // check if value is chainId-specific since some values can be objects\n                    // e.g. { batch: { multicall: { batchSize: 1024 } } }\n                    if (chainId in value) properties[key] = value[chainId];\n                    else {\n                        // check if value is chainId-specific, but does not have value for current chainId\n                        const hasChainSpecificValue = chainIds.some((x)=>x in value);\n                        if (hasChainSpecificValue) continue;\n                        properties[key] = value;\n                    }\n                } else properties[key] = value;\n            }\n            client = (0,viem__WEBPACK_IMPORTED_MODULE_6__.createClient)({\n                ...properties,\n                chain,\n                batch: properties.batch ?? {\n                    multicall: true\n                },\n                transport: (parameters)=>rest.transports[chainId]({\n                        ...parameters,\n                        connectors\n                    })\n            });\n        }\n        clients.set(chainId, client);\n        return client;\n    }\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Create store\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    function getInitialState() {\n        return {\n            chainId: chains.getState()[0].id,\n            connections: new Map(),\n            current: null,\n            status: \"disconnected\"\n        };\n    }\n    let currentVersion;\n    const prefix = \"0.0.0-canary-\";\n    if (_version_js__WEBPACK_IMPORTED_MODULE_7__.version.startsWith(prefix)) currentVersion = Number.parseInt(_version_js__WEBPACK_IMPORTED_MODULE_7__.version.replace(prefix, \"\"));\n    else currentVersion = Number.parseInt(_version_js__WEBPACK_IMPORTED_MODULE_7__.version.split(\".\")[0] ?? \"0\");\n    const store = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__.createStore)((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_8__.subscribeWithSelector)(// only use persist middleware if storage exists\n    storage ? (0,zustand_middleware__WEBPACK_IMPORTED_MODULE_8__.persist)(getInitialState, {\n        migrate (persistedState, version) {\n            if (version === currentVersion) return persistedState;\n            const initialState = getInitialState();\n            const chainId = persistedState && typeof persistedState === \"object\" && \"chainId\" in persistedState && typeof persistedState.chainId === \"number\" && chains.getState().some((x)=>x.id === persistedState.chainId) ? persistedState.chainId : initialState.chainId;\n            return {\n                ...initialState,\n                chainId\n            };\n        },\n        name: \"store\",\n        partialize (state) {\n            // Only persist \"critical\" store properties to preserve storage size.\n            return {\n                connections: {\n                    __type: \"Map\",\n                    value: Array.from(state.connections.entries()).map(([key, connection])=>{\n                        const { id, name, type, uid } = connection.connector;\n                        const connector = {\n                            id,\n                            name,\n                            type,\n                            uid\n                        };\n                        return [\n                            key,\n                            {\n                                ...connection,\n                                connector\n                            }\n                        ];\n                    })\n                },\n                chainId: state.chainId,\n                current: state.current,\n                status: state.status\n            };\n        },\n        skipHydration: ssr,\n        storage: storage,\n        version: currentVersion\n    }) : getInitialState));\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Subscribe to changes\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Update default chain when connector chain changes\n    if (syncConnectedChain) store.subscribe(({ connections, current })=>current ? connections.get(current)?.chainId : undefined, (chainId)=>{\n        // If chain is not configured, then don't switch over to it.\n        const isChainConfigured = chains.getState().some((x)=>x.id === chainId);\n        if (!isChainConfigured) return;\n        return store.setState((x)=>({\n                ...x,\n                chainId: chainId ?? x.chainId\n            }));\n    });\n    // EIP-6963 subscribe for new wallet providers\n    mipd?.subscribe((providerDetails)=>{\n        const currentConnectorIds = new Map();\n        for (const connector of connectors.getState()){\n            currentConnectorIds.set(connector.id, true);\n        }\n        const newConnectors = [];\n        for (const providerDetail of providerDetails){\n            const connector = setup(providerDetailToConnector(providerDetail));\n            if (currentConnectorIds.has(connector.id)) continue;\n            newConnectors.push(connector);\n        }\n        if (storage && !store.persist.hasHydrated()) return;\n        connectors.setState((x)=>[\n                ...x,\n                ...newConnectors\n            ], true);\n    });\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Emitter listeners\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    function change(data) {\n        store.setState((x)=>{\n            const connection = x.connections.get(data.uid);\n            if (!connection) return x;\n            return {\n                ...x,\n                connections: new Map(x.connections).set(data.uid, {\n                    accounts: data.accounts ?? connection.accounts,\n                    chainId: data.chainId ?? connection.chainId,\n                    connector: connection.connector\n                })\n            };\n        });\n    }\n    function connect(data) {\n        // Disable handling if reconnecting/connecting\n        if (store.getState().status === \"connecting\" || store.getState().status === \"reconnecting\") return;\n        store.setState((x)=>{\n            const connector = connectors.getState().find((x)=>x.uid === data.uid);\n            if (!connector) return x;\n            if (connector.emitter.listenerCount(\"connect\")) connector.emitter.off(\"connect\", change);\n            if (!connector.emitter.listenerCount(\"change\")) connector.emitter.on(\"change\", change);\n            if (!connector.emitter.listenerCount(\"disconnect\")) connector.emitter.on(\"disconnect\", disconnect);\n            return {\n                ...x,\n                connections: new Map(x.connections).set(data.uid, {\n                    accounts: data.accounts,\n                    chainId: data.chainId,\n                    connector: connector\n                }),\n                current: data.uid,\n                status: \"connected\"\n            };\n        });\n    }\n    function disconnect(data) {\n        store.setState((x)=>{\n            const connection = x.connections.get(data.uid);\n            if (connection) {\n                const connector = connection.connector;\n                if (connector.emitter.listenerCount(\"change\")) connection.connector.emitter.off(\"change\", change);\n                if (connector.emitter.listenerCount(\"disconnect\")) connection.connector.emitter.off(\"disconnect\", disconnect);\n                if (!connector.emitter.listenerCount(\"connect\")) connection.connector.emitter.on(\"connect\", connect);\n            }\n            x.connections.delete(data.uid);\n            if (x.connections.size === 0) return {\n                ...x,\n                connections: new Map(),\n                current: null,\n                status: \"disconnected\"\n            };\n            const nextConnection = x.connections.values().next().value;\n            return {\n                ...x,\n                connections: new Map(x.connections),\n                current: nextConnection.connector.uid\n            };\n        });\n    }\n    return {\n        get chains () {\n            return chains.getState();\n        },\n        get connectors () {\n            return connectors.getState();\n        },\n        storage,\n        getClient,\n        get state () {\n            return store.getState();\n        },\n        setState (value) {\n            let newState;\n            if (typeof value === \"function\") newState = value(store.getState());\n            else newState = value;\n            // Reset state if it got set to something not matching the base state\n            const initialState = getInitialState();\n            if (typeof newState !== \"object\") newState = initialState;\n            const isCorrupt = Object.keys(initialState).some((x)=>!(x in newState));\n            if (isCorrupt) newState = initialState;\n            store.setState(newState, true);\n        },\n        subscribe (selector, listener, options) {\n            return store.subscribe(selector, listener, options ? {\n                ...options,\n                fireImmediately: options.emitImmediately\n            } : undefined);\n        },\n        _internal: {\n            mipd,\n            store,\n            ssr: Boolean(ssr),\n            syncConnectedChain,\n            transports: rest.transports,\n            chains: {\n                setState (value) {\n                    const nextChains = typeof value === \"function\" ? value(chains.getState()) : value;\n                    if (nextChains.length === 0) return;\n                    return chains.setState(nextChains, true);\n                },\n                subscribe (listener) {\n                    return chains.subscribe(listener);\n                }\n            },\n            connectors: {\n                providerDetailToConnector,\n                setup,\n                setState (value) {\n                    return connectors.setState(typeof value === \"function\" ? value(connectors.getState()) : value, true);\n                },\n                subscribe (listener) {\n                    return connectors.subscribe(listener);\n                }\n            },\n            events: {\n                change,\n                connect,\n                disconnect\n            }\n        }\n    };\n} //# sourceMappingURL=createConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/createConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/createEmitter.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/createEmitter.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Emitter: () => (/* binding */ Emitter),\n/* harmony export */   createEmitter: () => (/* binding */ createEmitter)\n/* harmony export */ });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/eventemitter3/index.mjs\");\n\nclass Emitter {\n    constructor(uid){\n        Object.defineProperty(this, \"uid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: uid\n        });\n        Object.defineProperty(this, \"_emitter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new eventemitter3__WEBPACK_IMPORTED_MODULE_0__.EventEmitter()\n        });\n    }\n    on(eventName, fn) {\n        this._emitter.on(eventName, fn);\n    }\n    once(eventName, fn) {\n        this._emitter.once(eventName, fn);\n    }\n    off(eventName, fn) {\n        this._emitter.off(eventName, fn);\n    }\n    emit(eventName, ...params) {\n        const data = params[0];\n        this._emitter.emit(eventName, {\n            uid: this.uid,\n            ...data\n        });\n    }\n    listenerCount(eventName) {\n        return this._emitter.listenerCount(eventName);\n    }\n}\nfunction createEmitter(uid) {\n    return new Emitter(uid);\n} //# sourceMappingURL=createEmitter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY3JlYXRlRW1pdHRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFDdEMsTUFBTUM7SUFDVEMsWUFBWUMsR0FBRyxDQUFFO1FBQ2JDLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsT0FBTztZQUMvQkMsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBT047UUFDWDtRQUNBQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFlBQVk7WUFDcENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU8sSUFBSVQsdURBQVlBO1FBQzNCO0lBQ0o7SUFDQVUsR0FBR0MsU0FBUyxFQUFFQyxFQUFFLEVBQUU7UUFDZCxJQUFJLENBQUNDLFFBQVEsQ0FBQ0gsRUFBRSxDQUFDQyxXQUFXQztJQUNoQztJQUNBRSxLQUFLSCxTQUFTLEVBQUVDLEVBQUUsRUFBRTtRQUNoQixJQUFJLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDSCxXQUFXQztJQUNsQztJQUNBRyxJQUFJSixTQUFTLEVBQUVDLEVBQUUsRUFBRTtRQUNmLElBQUksQ0FBQ0MsUUFBUSxDQUFDRSxHQUFHLENBQUNKLFdBQVdDO0lBQ2pDO0lBQ0FJLEtBQUtMLFNBQVMsRUFBRSxHQUFHTSxNQUFNLEVBQUU7UUFDdkIsTUFBTUMsT0FBT0QsTUFBTSxDQUFDLEVBQUU7UUFDdEIsSUFBSSxDQUFDSixRQUFRLENBQUNHLElBQUksQ0FBQ0wsV0FBVztZQUFFUixLQUFLLElBQUksQ0FBQ0EsR0FBRztZQUFFLEdBQUdlLElBQUk7UUFBQztJQUMzRDtJQUNBQyxjQUFjUixTQUFTLEVBQUU7UUFDckIsT0FBTyxJQUFJLENBQUNFLFFBQVEsQ0FBQ00sYUFBYSxDQUFDUjtJQUN2QztBQUNKO0FBQ08sU0FBU1MsY0FBY2pCLEdBQUc7SUFDN0IsT0FBTyxJQUFJRixRQUFRRTtBQUN2QixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9jcmVhdGVFbWl0dGVyLmpzP2ZkNzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnZXZlbnRlbWl0dGVyMyc7XG5leHBvcnQgY2xhc3MgRW1pdHRlciB7XG4gICAgY29uc3RydWN0b3IodWlkKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInVpZFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdWlkXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfZW1pdHRlclwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogbmV3IEV2ZW50RW1pdHRlcigpXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBvbihldmVudE5hbWUsIGZuKSB7XG4gICAgICAgIHRoaXMuX2VtaXR0ZXIub24oZXZlbnROYW1lLCBmbik7XG4gICAgfVxuICAgIG9uY2UoZXZlbnROYW1lLCBmbikge1xuICAgICAgICB0aGlzLl9lbWl0dGVyLm9uY2UoZXZlbnROYW1lLCBmbik7XG4gICAgfVxuICAgIG9mZihldmVudE5hbWUsIGZuKSB7XG4gICAgICAgIHRoaXMuX2VtaXR0ZXIub2ZmKGV2ZW50TmFtZSwgZm4pO1xuICAgIH1cbiAgICBlbWl0KGV2ZW50TmFtZSwgLi4ucGFyYW1zKSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBwYXJhbXNbMF07XG4gICAgICAgIHRoaXMuX2VtaXR0ZXIuZW1pdChldmVudE5hbWUsIHsgdWlkOiB0aGlzLnVpZCwgLi4uZGF0YSB9KTtcbiAgICB9XG4gICAgbGlzdGVuZXJDb3VudChldmVudE5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2VtaXR0ZXIubGlzdGVuZXJDb3VudChldmVudE5hbWUpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFbWl0dGVyKHVpZCkge1xuICAgIHJldHVybiBuZXcgRW1pdHRlcih1aWQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlRW1pdHRlci5qcy5tYXAiXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIiwiRW1pdHRlciIsImNvbnN0cnVjdG9yIiwidWlkIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsIm9uIiwiZXZlbnROYW1lIiwiZm4iLCJfZW1pdHRlciIsIm9uY2UiLCJvZmYiLCJlbWl0IiwicGFyYW1zIiwiZGF0YSIsImxpc3RlbmVyQ291bnQiLCJjcmVhdGVFbWl0dGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/createEmitter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/createStorage.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/createStorage.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStorage: () => (/* binding */ createStorage),\n/* harmony export */   noopStorage: () => (/* binding */ noopStorage)\n/* harmony export */ });\n/* harmony import */ var _utils_deserialize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/deserialize.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deserialize.js\");\n/* harmony import */ var _utils_serialize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/serialize.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/serialize.js\");\n\n\nfunction createStorage(parameters) {\n    const { deserialize = _utils_deserialize_js__WEBPACK_IMPORTED_MODULE_0__.deserialize, key: prefix = \"wagmi\", serialize = _utils_serialize_js__WEBPACK_IMPORTED_MODULE_1__.serialize, storage = noopStorage } = parameters;\n    function unwrap(value) {\n        if (value instanceof Promise) return value.then((x)=>x).catch(()=>null);\n        return value;\n    }\n    return {\n        ...storage,\n        key: prefix,\n        async getItem (key, defaultValue) {\n            const value = storage.getItem(`${prefix}.${key}`);\n            const unwrapped = await unwrap(value);\n            if (unwrapped) return deserialize(unwrapped) ?? null;\n            return defaultValue ?? null;\n        },\n        async setItem (key, value) {\n            const storageKey = `${prefix}.${key}`;\n            if (value === null) await unwrap(storage.removeItem(storageKey));\n            else await unwrap(storage.setItem(storageKey, serialize(value)));\n        },\n        async removeItem (key) {\n            await unwrap(storage.removeItem(`${prefix}.${key}`));\n        }\n    };\n}\nconst noopStorage = {\n    getItem: ()=>null,\n    setItem: ()=>{},\n    removeItem: ()=>{}\n}; //# sourceMappingURL=createStorage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY3JlYXRlU3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFFO0FBQ047QUFDeEQsU0FBU0ksY0FBY0MsVUFBVTtJQUNwQyxNQUFNLEVBQUVMLGNBQWNDLDhEQUFZLEVBQUVLLEtBQUtDLFNBQVMsT0FBTyxFQUFFTCxZQUFZQywwREFBVSxFQUFFSyxVQUFVQyxXQUFXLEVBQUcsR0FBR0o7SUFDOUcsU0FBU0ssT0FBT0MsS0FBSztRQUNqQixJQUFJQSxpQkFBaUJDLFNBQ2pCLE9BQU9ELE1BQU1FLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxHQUFHQyxLQUFLLENBQUMsSUFBTTtRQUM1QyxPQUFPSjtJQUNYO0lBQ0EsT0FBTztRQUNILEdBQUdILE9BQU87UUFDVkYsS0FBS0M7UUFDTCxNQUFNUyxTQUFRVixHQUFHLEVBQUVXLFlBQVk7WUFDM0IsTUFBTU4sUUFBUUgsUUFBUVEsT0FBTyxDQUFDLENBQUMsRUFBRVQsT0FBTyxDQUFDLEVBQUVELElBQUksQ0FBQztZQUNoRCxNQUFNWSxZQUFZLE1BQU1SLE9BQU9DO1lBQy9CLElBQUlPLFdBQ0EsT0FBT2xCLFlBQVlrQixjQUFjO1lBQ3JDLE9BQVFELGdCQUFnQjtRQUM1QjtRQUNBLE1BQU1FLFNBQVFiLEdBQUcsRUFBRUssS0FBSztZQUNwQixNQUFNUyxhQUFhLENBQUMsRUFBRWIsT0FBTyxDQUFDLEVBQUVELElBQUksQ0FBQztZQUNyQyxJQUFJSyxVQUFVLE1BQ1YsTUFBTUQsT0FBT0YsUUFBUWEsVUFBVSxDQUFDRDtpQkFFaEMsTUFBTVYsT0FBT0YsUUFBUVcsT0FBTyxDQUFDQyxZQUFZbEIsVUFBVVM7UUFDM0Q7UUFDQSxNQUFNVSxZQUFXZixHQUFHO1lBQ2hCLE1BQU1JLE9BQU9GLFFBQVFhLFVBQVUsQ0FBQyxDQUFDLEVBQUVkLE9BQU8sQ0FBQyxFQUFFRCxJQUFJLENBQUM7UUFDdEQ7SUFDSjtBQUNKO0FBQ08sTUFBTUcsY0FBYztJQUN2Qk8sU0FBUyxJQUFNO0lBQ2ZHLFNBQVMsS0FBUTtJQUNqQkUsWUFBWSxLQUFRO0FBQ3hCLEVBQUUsQ0FDRix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY3JlYXRlU3RvcmFnZS5qcz85MmE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlc2VyaWFsaXplIGFzIGRlc2VyaWFsaXplXyB9IGZyb20gJy4vdXRpbHMvZGVzZXJpYWxpemUuanMnO1xuaW1wb3J0IHsgc2VyaWFsaXplIGFzIHNlcmlhbGl6ZV8gfSBmcm9tICcuL3V0aWxzL3NlcmlhbGl6ZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RvcmFnZShwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBkZXNlcmlhbGl6ZSA9IGRlc2VyaWFsaXplXywga2V5OiBwcmVmaXggPSAnd2FnbWknLCBzZXJpYWxpemUgPSBzZXJpYWxpemVfLCBzdG9yYWdlID0gbm9vcFN0b3JhZ2UsIH0gPSBwYXJhbWV0ZXJzO1xuICAgIGZ1bmN0aW9uIHVud3JhcCh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKVxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnRoZW4oKHgpID0+IHgpLmNhdGNoKCgpID0+IG51bGwpO1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0b3JhZ2UsXG4gICAgICAgIGtleTogcHJlZml4LFxuICAgICAgICBhc3luYyBnZXRJdGVtKGtleSwgZGVmYXVsdFZhbHVlKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHN0b3JhZ2UuZ2V0SXRlbShgJHtwcmVmaXh9LiR7a2V5fWApO1xuICAgICAgICAgICAgY29uc3QgdW53cmFwcGVkID0gYXdhaXQgdW53cmFwKHZhbHVlKTtcbiAgICAgICAgICAgIGlmICh1bndyYXBwZWQpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlc2VyaWFsaXplKHVud3JhcHBlZCkgPz8gbnVsbDtcbiAgICAgICAgICAgIHJldHVybiAoZGVmYXVsdFZhbHVlID8/IG51bGwpO1xuICAgICAgICB9LFxuICAgICAgICBhc3luYyBzZXRJdGVtKGtleSwgdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IHN0b3JhZ2VLZXkgPSBgJHtwcmVmaXh9LiR7a2V5fWA7XG4gICAgICAgICAgICBpZiAodmFsdWUgPT09IG51bGwpXG4gICAgICAgICAgICAgICAgYXdhaXQgdW53cmFwKHN0b3JhZ2UucmVtb3ZlSXRlbShzdG9yYWdlS2V5KSk7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgYXdhaXQgdW53cmFwKHN0b3JhZ2Uuc2V0SXRlbShzdG9yYWdlS2V5LCBzZXJpYWxpemUodmFsdWUpKSk7XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIHJlbW92ZUl0ZW0oa2V5KSB7XG4gICAgICAgICAgICBhd2FpdCB1bndyYXAoc3RvcmFnZS5yZW1vdmVJdGVtKGAke3ByZWZpeH0uJHtrZXl9YCkpO1xuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnQgY29uc3Qgbm9vcFN0b3JhZ2UgPSB7XG4gICAgZ2V0SXRlbTogKCkgPT4gbnVsbCxcbiAgICBzZXRJdGVtOiAoKSA9PiB7IH0sXG4gICAgcmVtb3ZlSXRlbTogKCkgPT4geyB9LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZVN0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbImRlc2VyaWFsaXplIiwiZGVzZXJpYWxpemVfIiwic2VyaWFsaXplIiwic2VyaWFsaXplXyIsImNyZWF0ZVN0b3JhZ2UiLCJwYXJhbWV0ZXJzIiwia2V5IiwicHJlZml4Iiwic3RvcmFnZSIsIm5vb3BTdG9yYWdlIiwidW53cmFwIiwidmFsdWUiLCJQcm9taXNlIiwidGhlbiIsIngiLCJjYXRjaCIsImdldEl0ZW0iLCJkZWZhdWx0VmFsdWUiLCJ1bndyYXBwZWQiLCJzZXRJdGVtIiwic3RvcmFnZUtleSIsInJlbW92ZUl0ZW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/createStorage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/errors/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/errors/base.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseError: () => (/* binding */ BaseError)\n/* harmony export */ });\n/* harmony import */ var _utils_getVersion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getVersion.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getVersion.js\");\nvar __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BaseError_instances, _BaseError_walk;\n\nclass BaseError extends Error {\n    get docsBaseUrl() {\n        return \"https://wagmi.sh/core\";\n    }\n    get version() {\n        return (0,_utils_getVersion_js__WEBPACK_IMPORTED_MODULE_0__.getVersion)();\n    }\n    constructor(shortMessage, options = {}){\n        super();\n        _BaseError_instances.add(this);\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metaMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"WagmiCoreError\"\n        });\n        const details = options.cause instanceof BaseError ? options.cause.details : options.cause?.message ? options.cause.message : options.details;\n        const docsPath = options.cause instanceof BaseError ? options.cause.docsPath || options.docsPath : options.docsPath;\n        this.message = [\n            shortMessage || \"An error occurred.\",\n            \"\",\n            ...options.metaMessages ? [\n                ...options.metaMessages,\n                \"\"\n            ] : [],\n            ...docsPath ? [\n                `Docs: ${this.docsBaseUrl}${docsPath}.html${options.docsSlug ? `#${options.docsSlug}` : \"\"}`\n            ] : [],\n            ...details ? [\n                `Details: ${details}`\n            ] : [],\n            `Version: ${this.version}`\n        ].join(\"\\n\");\n        if (options.cause) this.cause = options.cause;\n        this.details = details;\n        this.docsPath = docsPath;\n        this.metaMessages = options.metaMessages;\n        this.shortMessage = shortMessage;\n    }\n    walk(fn) {\n        return __classPrivateFieldGet(this, _BaseError_instances, \"m\", _BaseError_walk).call(this, this, fn);\n    }\n}\n_BaseError_instances = new WeakSet(), _BaseError_walk = function _BaseError_walk(err, fn) {\n    if (fn?.(err)) return err;\n    if (err.cause) return __classPrivateFieldGet(this, _BaseError_instances, \"m\", _BaseError_walk).call(this, err.cause, fn);\n    return err;\n}; //# sourceMappingURL=base.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/errors/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/errors/config.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainNotConfiguredError: () => (/* binding */ ChainNotConfiguredError),\n/* harmony export */   ConnectorAccountNotFoundError: () => (/* binding */ ConnectorAccountNotFoundError),\n/* harmony export */   ConnectorAlreadyConnectedError: () => (/* binding */ ConnectorAlreadyConnectedError),\n/* harmony export */   ConnectorChainMismatchError: () => (/* binding */ ConnectorChainMismatchError),\n/* harmony export */   ConnectorNotConnectedError: () => (/* binding */ ConnectorNotConnectedError),\n/* harmony export */   ConnectorNotFoundError: () => (/* binding */ ConnectorNotFoundError)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/base.js\");\n\nclass ChainNotConfiguredError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Chain not configured.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ChainNotConfiguredError\"\n        });\n    }\n}\nclass ConnectorAlreadyConnectedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Connector already connected.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorAlreadyConnectedError\"\n        });\n    }\n}\nclass ConnectorNotConnectedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Connector not connected.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorNotConnectedError\"\n        });\n    }\n}\nclass ConnectorNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Connector not found.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorNotFoundError\"\n        });\n    }\n}\nclass ConnectorAccountNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ address, connector }){\n        super(`Account \"${address}\" not found for connector \"${connector.name}\".`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorAccountNotFoundError\"\n        });\n    }\n}\nclass ConnectorChainMismatchError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ connectionChainId, connectorChainId }){\n        super(`The current chain of the connector (id: ${connectorChainId}) does not match the connection's chain (id: ${connectionChainId}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${connectorChainId}`,\n                `Expected Chain ID: ${connectionChainId}`\n            ]\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorChainMismatchError\"\n        });\n    }\n} //# sourceMappingURL=config.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vZXJyb3JzL2NvbmZpZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXNDO0FBQy9CLE1BQU1DLGdDQUFnQ0QsK0NBQVNBO0lBQ2xERSxhQUFjO1FBQ1YsS0FBSyxDQUFDO1FBQ05DLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsUUFBUTtZQUNoQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTztRQUNYO0lBQ0o7QUFDSjtBQUNPLE1BQU1DLHVDQUF1Q1QsK0NBQVNBO0lBQ3pERSxhQUFjO1FBQ1YsS0FBSyxDQUFDO1FBQ05DLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsUUFBUTtZQUNoQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTztRQUNYO0lBQ0o7QUFDSjtBQUNPLE1BQU1FLG1DQUFtQ1YsK0NBQVNBO0lBQ3JERSxhQUFjO1FBQ1YsS0FBSyxDQUFDO1FBQ05DLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsUUFBUTtZQUNoQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTztRQUNYO0lBQ0o7QUFDSjtBQUNPLE1BQU1HLCtCQUErQlgsK0NBQVNBO0lBQ2pERSxhQUFjO1FBQ1YsS0FBSyxDQUFDO1FBQ05DLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsUUFBUTtZQUNoQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTztRQUNYO0lBQ0o7QUFDSjtBQUNPLE1BQU1JLHNDQUFzQ1osK0NBQVNBO0lBQ3hERSxZQUFZLEVBQUVXLE9BQU8sRUFBRUMsU0FBUyxFQUFHLENBQUU7UUFDakMsS0FBSyxDQUFDLENBQUMsU0FBUyxFQUFFRCxRQUFRLDJCQUEyQixFQUFFQyxVQUFVQyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ3pFWixPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0o7QUFDTyxNQUFNUSxvQ0FBb0NoQiwrQ0FBU0E7SUFDdERFLFlBQVksRUFBRWUsaUJBQWlCLEVBQUVDLGdCQUFnQixFQUFHLENBQUU7UUFDbEQsS0FBSyxDQUFDLENBQUMsd0NBQXdDLEVBQUVBLGlCQUFpQiw2Q0FBNkMsRUFBRUQsa0JBQWtCLEVBQUUsQ0FBQyxFQUFFO1lBQ3BJRSxjQUFjO2dCQUNWLENBQUMsbUJBQW1CLEVBQUVELGlCQUFpQixDQUFDO2dCQUN4QyxDQUFDLG1CQUFtQixFQUFFRCxrQkFBa0IsQ0FBQzthQUM1QztRQUNMO1FBQ0FkLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsUUFBUTtZQUNoQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTztRQUNYO0lBQ0o7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9lcnJvcnMvY29uZmlnLmpzP2E4M2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUVycm9yIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjbGFzcyBDaGFpbk5vdENvbmZpZ3VyZWRFcnJvciBleHRlbmRzIEJhc2VFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdDaGFpbiBub3QgY29uZmlndXJlZC4nKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogJ0NoYWluTm90Q29uZmlndXJlZEVycm9yJ1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQ29ubmVjdG9yQWxyZWFkeUNvbm5lY3RlZEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ0Nvbm5lY3RvciBhbHJlYWR5IGNvbm5lY3RlZC4nKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogJ0Nvbm5lY3RvckFscmVhZHlDb25uZWN0ZWRFcnJvcidcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIENvbm5lY3Rvck5vdENvbm5lY3RlZEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ0Nvbm5lY3RvciBub3QgY29ubmVjdGVkLicpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAnQ29ubmVjdG9yTm90Q29ubmVjdGVkRXJyb3InXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBDb25uZWN0b3JOb3RGb3VuZEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ0Nvbm5lY3RvciBub3QgZm91bmQuJyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6ICdDb25uZWN0b3JOb3RGb3VuZEVycm9yJ1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQ29ubmVjdG9yQWNjb3VudE5vdEZvdW5kRXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgYWRkcmVzcywgY29ubmVjdG9yLCB9KSB7XG4gICAgICAgIHN1cGVyKGBBY2NvdW50IFwiJHthZGRyZXNzfVwiIG5vdCBmb3VuZCBmb3IgY29ubmVjdG9yIFwiJHtjb25uZWN0b3IubmFtZX1cIi5gKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogJ0Nvbm5lY3RvckFjY291bnROb3RGb3VuZEVycm9yJ1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQ29ubmVjdG9yQ2hhaW5NaXNtYXRjaEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGNvbm5lY3Rpb25DaGFpbklkLCBjb25uZWN0b3JDaGFpbklkLCB9KSB7XG4gICAgICAgIHN1cGVyKGBUaGUgY3VycmVudCBjaGFpbiBvZiB0aGUgY29ubmVjdG9yIChpZDogJHtjb25uZWN0b3JDaGFpbklkfSkgZG9lcyBub3QgbWF0Y2ggdGhlIGNvbm5lY3Rpb24ncyBjaGFpbiAoaWQ6ICR7Y29ubmVjdGlvbkNoYWluSWR9KS5gLCB7XG4gICAgICAgICAgICBtZXRhTWVzc2FnZXM6IFtcbiAgICAgICAgICAgICAgICBgQ3VycmVudCBDaGFpbiBJRDogICR7Y29ubmVjdG9yQ2hhaW5JZH1gLFxuICAgICAgICAgICAgICAgIGBFeHBlY3RlZCBDaGFpbiBJRDogJHtjb25uZWN0aW9uQ2hhaW5JZH1gLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6ICdDb25uZWN0b3JDaGFpbk1pc21hdGNoRXJyb3InXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbmZpZy5qcy5tYXAiXSwibmFtZXMiOlsiQmFzZUVycm9yIiwiQ2hhaW5Ob3RDb25maWd1cmVkRXJyb3IiLCJjb25zdHJ1Y3RvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwidmFsdWUiLCJDb25uZWN0b3JBbHJlYWR5Q29ubmVjdGVkRXJyb3IiLCJDb25uZWN0b3JOb3RDb25uZWN0ZWRFcnJvciIsIkNvbm5lY3Rvck5vdEZvdW5kRXJyb3IiLCJDb25uZWN0b3JBY2NvdW50Tm90Rm91bmRFcnJvciIsImFkZHJlc3MiLCJjb25uZWN0b3IiLCJuYW1lIiwiQ29ubmVjdG9yQ2hhaW5NaXNtYXRjaEVycm9yIiwiY29ubmVjdGlvbkNoYWluSWQiLCJjb25uZWN0b3JDaGFpbklkIiwibWV0YU1lc3NhZ2VzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/errors/connector.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProviderNotFoundError: () => (/* binding */ ProviderNotFoundError),\n/* harmony export */   SwitchChainNotSupportedError: () => (/* binding */ SwitchChainNotSupportedError)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/base.js\");\n\nclass ProviderNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Provider not found.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ProviderNotFoundError\"\n        });\n    }\n}\nclass SwitchChainNotSupportedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ connector }){\n        super(`\"${connector.name}\" does not support programmatic chain switching.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"SwitchChainNotSupportedError\"\n        });\n    }\n} //# sourceMappingURL=connector.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vZXJyb3JzL2Nvbm5lY3Rvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDL0IsTUFBTUMsOEJBQThCRCwrQ0FBU0E7SUFDaERFLGFBQWM7UUFDVixLQUFLLENBQUM7UUFDTkMsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxRQUFRO1lBQ2hDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPO1FBQ1g7SUFDSjtBQUNKO0FBQ08sTUFBTUMscUNBQXFDVCwrQ0FBU0E7SUFDdkRFLFlBQVksRUFBRVEsU0FBUyxFQUFFLENBQUU7UUFDdkIsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFQSxVQUFVQyxJQUFJLENBQUMsZ0RBQWdELENBQUM7UUFDMUVSLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsUUFBUTtZQUNoQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTztRQUNYO0lBQ0o7QUFDSixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9lcnJvcnMvY29ubmVjdG9yLmpzPzk1ZTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUVycm9yIH0gZnJvbSAnLi9iYXNlLmpzJztcbmV4cG9ydCBjbGFzcyBQcm92aWRlck5vdEZvdW5kRXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignUHJvdmlkZXIgbm90IGZvdW5kLicpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAnUHJvdmlkZXJOb3RGb3VuZEVycm9yJ1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgU3dpdGNoQ2hhaW5Ob3RTdXBwb3J0ZWRFcnJvciBleHRlbmRzIEJhc2VFcnJvciB7XG4gICAgY29uc3RydWN0b3IoeyBjb25uZWN0b3IgfSkge1xuICAgICAgICBzdXBlcihgXCIke2Nvbm5lY3Rvci5uYW1lfVwiIGRvZXMgbm90IHN1cHBvcnQgcHJvZ3JhbW1hdGljIGNoYWluIHN3aXRjaGluZy5gKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogJ1N3aXRjaENoYWluTm90U3VwcG9ydGVkRXJyb3InXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbm5lY3Rvci5qcy5tYXAiXSwibmFtZXMiOlsiQmFzZUVycm9yIiwiUHJvdmlkZXJOb3RGb3VuZEVycm9yIiwiY29uc3RydWN0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsInZhbHVlIiwiU3dpdGNoQ2hhaW5Ob3RTdXBwb3J0ZWRFcnJvciIsImNvbm5lY3RvciIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/hydrate.js":
/*!******************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/hydrate.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hydrate: () => (/* binding */ hydrate)\n/* harmony export */ });\n/* harmony import */ var _actions_reconnect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions/reconnect.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/reconnect.js\");\n\nfunction hydrate(config, parameters) {\n    const { initialState, reconnectOnMount } = parameters;\n    if (initialState && !config._internal.store.persist.hasHydrated()) config.setState({\n        ...initialState,\n        chainId: config.chains.some((x)=>x.id === initialState.chainId) ? initialState.chainId : config.chains[0].id,\n        connections: reconnectOnMount ? initialState.connections : new Map(),\n        status: reconnectOnMount ? \"reconnecting\" : \"disconnected\"\n    });\n    return {\n        async onMount () {\n            if (config._internal.ssr) {\n                await config._internal.store.persist.rehydrate();\n                const mipdConnectors = config._internal.mipd?.getProviders().map(config._internal.connectors.providerDetailToConnector).map(config._internal.connectors.setup);\n                config._internal.connectors.setState((connectors)=>[\n                        ...connectors,\n                        ...mipdConnectors ?? []\n                    ]);\n            }\n            if (reconnectOnMount) (0,_actions_reconnect_js__WEBPACK_IMPORTED_MODULE_0__.reconnect)(config);\n            else if (config.storage) // Reset connections that may have been hydrated from storage.\n            config.setState((x)=>({\n                    ...x,\n                    connections: new Map()\n                }));\n        }\n    };\n} //# sourceMappingURL=hydrate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vaHlkcmF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRDtBQUM1QyxTQUFTQyxRQUFRQyxNQUFNLEVBQUVDLFVBQVU7SUFDdEMsTUFBTSxFQUFFQyxZQUFZLEVBQUVDLGdCQUFnQixFQUFFLEdBQUdGO0lBQzNDLElBQUlDLGdCQUFnQixDQUFDRixPQUFPSSxTQUFTLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDQyxXQUFXLElBQzNEUCxPQUFPUSxRQUFRLENBQUM7UUFDWixHQUFHTixZQUFZO1FBQ2ZPLFNBQVNULE9BQU9VLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUNDLElBQU1BLEVBQUVDLEVBQUUsS0FBS1gsYUFBYU8sT0FBTyxJQUMxRFAsYUFBYU8sT0FBTyxHQUNwQlQsT0FBT1UsTUFBTSxDQUFDLEVBQUUsQ0FBQ0csRUFBRTtRQUN6QkMsYUFBYVgsbUJBQW1CRCxhQUFhWSxXQUFXLEdBQUcsSUFBSUM7UUFDL0RDLFFBQVFiLG1CQUFtQixpQkFBaUI7SUFDaEQ7SUFDSixPQUFPO1FBQ0gsTUFBTWM7WUFDRixJQUFJakIsT0FBT0ksU0FBUyxDQUFDYyxHQUFHLEVBQUU7Z0JBQ3RCLE1BQU1sQixPQUFPSSxTQUFTLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDYSxTQUFTO2dCQUM5QyxNQUFNQyxpQkFBaUJwQixPQUFPSSxTQUFTLENBQUNpQixJQUFJLEVBQ3RDQyxlQUNEQyxJQUFJdkIsT0FBT0ksU0FBUyxDQUFDb0IsVUFBVSxDQUFDQyx5QkFBeUIsRUFDekRGLElBQUl2QixPQUFPSSxTQUFTLENBQUNvQixVQUFVLENBQUNFLEtBQUs7Z0JBQzFDMUIsT0FBT0ksU0FBUyxDQUFDb0IsVUFBVSxDQUFDaEIsUUFBUSxDQUFDLENBQUNnQixhQUFlOzJCQUM5Q0E7MkJBQ0NKLGtCQUFrQixFQUFFO3FCQUMzQjtZQUNMO1lBQ0EsSUFBSWpCLGtCQUNBTCxnRUFBU0EsQ0FBQ0U7aUJBQ1QsSUFBSUEsT0FBTzJCLE9BQU8sRUFDbkIsOERBQThEO1lBQzlEM0IsT0FBT1EsUUFBUSxDQUFDLENBQUNJLElBQU87b0JBQ3BCLEdBQUdBLENBQUM7b0JBQ0pFLGFBQWEsSUFBSUM7Z0JBQ3JCO1FBQ1I7SUFDSjtBQUNKLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2h5ZHJhdGUuanM/MjdjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWNvbm5lY3QgfSBmcm9tICcuL2FjdGlvbnMvcmVjb25uZWN0LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBoeWRyYXRlKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgaW5pdGlhbFN0YXRlLCByZWNvbm5lY3RPbk1vdW50IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGlmIChpbml0aWFsU3RhdGUgJiYgIWNvbmZpZy5faW50ZXJuYWwuc3RvcmUucGVyc2lzdC5oYXNIeWRyYXRlZCgpKVxuICAgICAgICBjb25maWcuc2V0U3RhdGUoe1xuICAgICAgICAgICAgLi4uaW5pdGlhbFN0YXRlLFxuICAgICAgICAgICAgY2hhaW5JZDogY29uZmlnLmNoYWlucy5zb21lKCh4KSA9PiB4LmlkID09PSBpbml0aWFsU3RhdGUuY2hhaW5JZClcbiAgICAgICAgICAgICAgICA/IGluaXRpYWxTdGF0ZS5jaGFpbklkXG4gICAgICAgICAgICAgICAgOiBjb25maWcuY2hhaW5zWzBdLmlkLFxuICAgICAgICAgICAgY29ubmVjdGlvbnM6IHJlY29ubmVjdE9uTW91bnQgPyBpbml0aWFsU3RhdGUuY29ubmVjdGlvbnMgOiBuZXcgTWFwKCksXG4gICAgICAgICAgICBzdGF0dXM6IHJlY29ubmVjdE9uTW91bnQgPyAncmVjb25uZWN0aW5nJyA6ICdkaXNjb25uZWN0ZWQnLFxuICAgICAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBhc3luYyBvbk1vdW50KCkge1xuICAgICAgICAgICAgaWYgKGNvbmZpZy5faW50ZXJuYWwuc3NyKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgY29uZmlnLl9pbnRlcm5hbC5zdG9yZS5wZXJzaXN0LnJlaHlkcmF0ZSgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1pcGRDb25uZWN0b3JzID0gY29uZmlnLl9pbnRlcm5hbC5taXBkXG4gICAgICAgICAgICAgICAgICAgID8uZ2V0UHJvdmlkZXJzKClcbiAgICAgICAgICAgICAgICAgICAgLm1hcChjb25maWcuX2ludGVybmFsLmNvbm5lY3RvcnMucHJvdmlkZXJEZXRhaWxUb0Nvbm5lY3RvcilcbiAgICAgICAgICAgICAgICAgICAgLm1hcChjb25maWcuX2ludGVybmFsLmNvbm5lY3RvcnMuc2V0dXApO1xuICAgICAgICAgICAgICAgIGNvbmZpZy5faW50ZXJuYWwuY29ubmVjdG9ycy5zZXRTdGF0ZSgoY29ubmVjdG9ycykgPT4gW1xuICAgICAgICAgICAgICAgICAgICAuLi5jb25uZWN0b3JzLFxuICAgICAgICAgICAgICAgICAgICAuLi4obWlwZENvbm5lY3RvcnMgPz8gW10pLFxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlY29ubmVjdE9uTW91bnQpXG4gICAgICAgICAgICAgICAgcmVjb25uZWN0KGNvbmZpZyk7XG4gICAgICAgICAgICBlbHNlIGlmIChjb25maWcuc3RvcmFnZSlcbiAgICAgICAgICAgICAgICAvLyBSZXNldCBjb25uZWN0aW9ucyB0aGF0IG1heSBoYXZlIGJlZW4gaHlkcmF0ZWQgZnJvbSBzdG9yYWdlLlxuICAgICAgICAgICAgICAgIGNvbmZpZy5zZXRTdGF0ZSgoeCkgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgLi4ueCxcbiAgICAgICAgICAgICAgICAgICAgY29ubmVjdGlvbnM6IG5ldyBNYXAoKSxcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh5ZHJhdGUuanMubWFwIl0sIm5hbWVzIjpbInJlY29ubmVjdCIsImh5ZHJhdGUiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiaW5pdGlhbFN0YXRlIiwicmVjb25uZWN0T25Nb3VudCIsIl9pbnRlcm5hbCIsInN0b3JlIiwicGVyc2lzdCIsImhhc0h5ZHJhdGVkIiwic2V0U3RhdGUiLCJjaGFpbklkIiwiY2hhaW5zIiwic29tZSIsIngiLCJpZCIsImNvbm5lY3Rpb25zIiwiTWFwIiwic3RhdHVzIiwib25Nb3VudCIsInNzciIsInJlaHlkcmF0ZSIsIm1pcGRDb25uZWN0b3JzIiwibWlwZCIsImdldFByb3ZpZGVycyIsIm1hcCIsImNvbm5lY3RvcnMiLCJwcm92aWRlckRldGFpbFRvQ29ubmVjdG9yIiwic2V0dXAiLCJzdG9yYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/hydrate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/connect.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/connect.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectMutationOptions: () => (/* binding */ connectMutationOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_connect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/connect.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/connect.js\");\n\nfunction connectMutationOptions(config) {\n    return {\n        mutationFn (variables) {\n            return (0,_actions_connect_js__WEBPACK_IMPORTED_MODULE_0__.connect)(config, variables);\n        },\n        mutationKey: [\n            \"connect\"\n        ]\n    };\n} //# sourceMappingURL=connect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvY29ubmVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUMxQyxTQUFTQyx1QkFBdUJDLE1BQU07SUFDekMsT0FBTztRQUNIQyxZQUFXQyxTQUFTO1lBQ2hCLE9BQU9KLDREQUFPQSxDQUFDRSxRQUFRRTtRQUMzQjtRQUNBQyxhQUFhO1lBQUM7U0FBVTtJQUM1QjtBQUNKLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3F1ZXJ5L2Nvbm5lY3QuanM/MGJhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25uZWN0LCB9IGZyb20gJy4uL2FjdGlvbnMvY29ubmVjdC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gY29ubmVjdE11dGF0aW9uT3B0aW9ucyhjb25maWcpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBtdXRhdGlvbkZuKHZhcmlhYmxlcykge1xuICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3QoY29uZmlnLCB2YXJpYWJsZXMpO1xuICAgICAgICB9LFxuICAgICAgICBtdXRhdGlvbktleTogWydjb25uZWN0J10sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbm5lY3QuanMubWFwIl0sIm5hbWVzIjpbImNvbm5lY3QiLCJjb25uZWN0TXV0YXRpb25PcHRpb25zIiwiY29uZmlnIiwibXV0YXRpb25GbiIsInZhcmlhYmxlcyIsIm11dGF0aW9uS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/connect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/disconnect.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/disconnect.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   disconnectMutationOptions: () => (/* binding */ disconnectMutationOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_disconnect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/disconnect.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/disconnect.js\");\n\nfunction disconnectMutationOptions(config) {\n    return {\n        mutationFn (variables) {\n            return (0,_actions_disconnect_js__WEBPACK_IMPORTED_MODULE_0__.disconnect)(config, variables);\n        },\n        mutationKey: [\n            \"disconnect\"\n        ]\n    };\n} //# sourceMappingURL=disconnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZGlzY29ubmVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RDtBQUNoRCxTQUFTQywwQkFBMEJDLE1BQU07SUFDNUMsT0FBTztRQUNIQyxZQUFXQyxTQUFTO1lBQ2hCLE9BQU9KLGtFQUFVQSxDQUFDRSxRQUFRRTtRQUM5QjtRQUNBQyxhQUFhO1lBQUM7U0FBYTtJQUMvQjtBQUNKLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3F1ZXJ5L2Rpc2Nvbm5lY3QuanM/MjE1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkaXNjb25uZWN0LCB9IGZyb20gJy4uL2FjdGlvbnMvZGlzY29ubmVjdC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZGlzY29ubmVjdE11dGF0aW9uT3B0aW9ucyhjb25maWcpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBtdXRhdGlvbkZuKHZhcmlhYmxlcykge1xuICAgICAgICAgICAgcmV0dXJuIGRpc2Nvbm5lY3QoY29uZmlnLCB2YXJpYWJsZXMpO1xuICAgICAgICB9LFxuICAgICAgICBtdXRhdGlvbktleTogWydkaXNjb25uZWN0J10sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpc2Nvbm5lY3QuanMubWFwIl0sIm5hbWVzIjpbImRpc2Nvbm5lY3QiLCJkaXNjb25uZWN0TXV0YXRpb25PcHRpb25zIiwiY29uZmlnIiwibXV0YXRpb25GbiIsInZhcmlhYmxlcyIsIm11dGF0aW9uS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/disconnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/getBalance.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/getBalance.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBalanceQueryKey: () => (/* binding */ getBalanceQueryKey),\n/* harmony export */   getBalanceQueryOptions: () => (/* binding */ getBalanceQueryOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_getBalance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/getBalance.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getBalance.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\");\n\n\nfunction getBalanceQueryOptions(config, options = {}) {\n    return {\n        async queryFn ({ queryKey }) {\n            const { address, scopeKey: _, ...parameters } = queryKey[1];\n            if (!address) throw new Error(\"address is required\");\n            const balance = await (0,_actions_getBalance_js__WEBPACK_IMPORTED_MODULE_0__.getBalance)(config, {\n                ...parameters,\n                address\n            });\n            return balance ?? null;\n        },\n        queryKey: getBalanceQueryKey(options)\n    };\n}\nfunction getBalanceQueryKey(options = {}) {\n    return [\n        \"balance\",\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.filterQueryOptions)(options)\n    ];\n} //# sourceMappingURL=getBalance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZ2V0QmFsYW5jZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVEO0FBQ1A7QUFDekMsU0FBU0UsdUJBQXVCQyxNQUFNLEVBQUVDLFVBQVUsQ0FBQyxDQUFDO0lBQ3ZELE9BQU87UUFDSCxNQUFNQyxTQUFRLEVBQUVDLFFBQVEsRUFBRTtZQUN0QixNQUFNLEVBQUVDLE9BQU8sRUFBRUMsVUFBVUMsQ0FBQyxFQUFFLEdBQUdDLFlBQVksR0FBR0osUUFBUSxDQUFDLEVBQUU7WUFDM0QsSUFBSSxDQUFDQyxTQUNELE1BQU0sSUFBSUksTUFBTTtZQUNwQixNQUFNQyxVQUFVLE1BQU1aLGtFQUFVQSxDQUFDRyxRQUFRO2dCQUNyQyxHQUFHTyxVQUFVO2dCQUNiSDtZQUNKO1lBQ0EsT0FBT0ssV0FBVztRQUN0QjtRQUNBTixVQUFVTyxtQkFBbUJUO0lBQ2pDO0FBQ0o7QUFDTyxTQUFTUyxtQkFBbUJULFVBQVUsQ0FBQyxDQUFDO0lBQzNDLE9BQU87UUFBQztRQUFXSCw2REFBa0JBLENBQUNHO0tBQVM7QUFDbkQsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZ2V0QmFsYW5jZS5qcz80NmE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEJhbGFuY2UsIH0gZnJvbSAnLi4vYWN0aW9ucy9nZXRCYWxhbmNlLmpzJztcbmltcG9ydCB7IGZpbHRlclF1ZXJ5T3B0aW9ucyB9IGZyb20gJy4vdXRpbHMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJhbGFuY2VRdWVyeU9wdGlvbnMoY29uZmlnLCBvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBhc3luYyBxdWVyeUZuKHsgcXVlcnlLZXkgfSkge1xuICAgICAgICAgICAgY29uc3QgeyBhZGRyZXNzLCBzY29wZUtleTogXywgLi4ucGFyYW1ldGVycyB9ID0gcXVlcnlLZXlbMV07XG4gICAgICAgICAgICBpZiAoIWFkZHJlc3MpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdhZGRyZXNzIGlzIHJlcXVpcmVkJyk7XG4gICAgICAgICAgICBjb25zdCBiYWxhbmNlID0gYXdhaXQgZ2V0QmFsYW5jZShjb25maWcsIHtcbiAgICAgICAgICAgICAgICAuLi5wYXJhbWV0ZXJzLFxuICAgICAgICAgICAgICAgIGFkZHJlc3MsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBiYWxhbmNlID8/IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIHF1ZXJ5S2V5OiBnZXRCYWxhbmNlUXVlcnlLZXkob3B0aW9ucyksXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRCYWxhbmNlUXVlcnlLZXkob3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIFsnYmFsYW5jZScsIGZpbHRlclF1ZXJ5T3B0aW9ucyhvcHRpb25zKV07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRCYWxhbmNlLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRCYWxhbmNlIiwiZmlsdGVyUXVlcnlPcHRpb25zIiwiZ2V0QmFsYW5jZVF1ZXJ5T3B0aW9ucyIsImNvbmZpZyIsIm9wdGlvbnMiLCJxdWVyeUZuIiwicXVlcnlLZXkiLCJhZGRyZXNzIiwic2NvcGVLZXkiLCJfIiwicGFyYW1ldGVycyIsIkVycm9yIiwiYmFsYW5jZSIsImdldEJhbGFuY2VRdWVyeUtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/getBalance.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/getBlockNumber.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/getBlockNumber.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBlockNumberQueryKey: () => (/* binding */ getBlockNumberQueryKey),\n/* harmony export */   getBlockNumberQueryOptions: () => (/* binding */ getBlockNumberQueryOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_getBlockNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/getBlockNumber.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getBlockNumber.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\");\n\n\nfunction getBlockNumberQueryOptions(config, options = {}) {\n    return {\n        gcTime: 0,\n        async queryFn ({ queryKey }) {\n            const { scopeKey: _, ...parameters } = queryKey[1];\n            const blockNumber = await (0,_actions_getBlockNumber_js__WEBPACK_IMPORTED_MODULE_0__.getBlockNumber)(config, parameters);\n            return blockNumber ?? null;\n        },\n        queryKey: getBlockNumberQueryKey(options)\n    };\n}\nfunction getBlockNumberQueryKey(options = {}) {\n    return [\n        \"blockNumber\",\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.filterQueryOptions)(options)\n    ];\n} //# sourceMappingURL=getBlockNumber.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZ2V0QmxvY2tOdW1iZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErRDtBQUNmO0FBQ3pDLFNBQVNFLDJCQUEyQkMsTUFBTSxFQUFFQyxVQUFVLENBQUMsQ0FBQztJQUMzRCxPQUFPO1FBQ0hDLFFBQVE7UUFDUixNQUFNQyxTQUFRLEVBQUVDLFFBQVEsRUFBRTtZQUN0QixNQUFNLEVBQUVDLFVBQVVDLENBQUMsRUFBRSxHQUFHQyxZQUFZLEdBQUdILFFBQVEsQ0FBQyxFQUFFO1lBQ2xELE1BQU1JLGNBQWMsTUFBTVgsMEVBQWNBLENBQUNHLFFBQVFPO1lBQ2pELE9BQU9DLGVBQWU7UUFDMUI7UUFDQUosVUFBVUssdUJBQXVCUjtJQUNyQztBQUNKO0FBQ08sU0FBU1EsdUJBQXVCUixVQUFVLENBQUMsQ0FBQztJQUMvQyxPQUFPO1FBQUM7UUFBZUgsNkRBQWtCQSxDQUFDRztLQUFTO0FBQ3ZELEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3F1ZXJ5L2dldEJsb2NrTnVtYmVyLmpzP2MxZWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QmxvY2tOdW1iZXIsIH0gZnJvbSAnLi4vYWN0aW9ucy9nZXRCbG9ja051bWJlci5qcyc7XG5pbXBvcnQgeyBmaWx0ZXJRdWVyeU9wdGlvbnMgfSBmcm9tICcuL3V0aWxzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRCbG9ja051bWJlclF1ZXJ5T3B0aW9ucyhjb25maWcsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGdjVGltZTogMCxcbiAgICAgICAgYXN5bmMgcXVlcnlGbih7IHF1ZXJ5S2V5IH0pIHtcbiAgICAgICAgICAgIGNvbnN0IHsgc2NvcGVLZXk6IF8sIC4uLnBhcmFtZXRlcnMgfSA9IHF1ZXJ5S2V5WzFdO1xuICAgICAgICAgICAgY29uc3QgYmxvY2tOdW1iZXIgPSBhd2FpdCBnZXRCbG9ja051bWJlcihjb25maWcsIHBhcmFtZXRlcnMpO1xuICAgICAgICAgICAgcmV0dXJuIGJsb2NrTnVtYmVyID8/IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIHF1ZXJ5S2V5OiBnZXRCbG9ja051bWJlclF1ZXJ5S2V5KG9wdGlvbnMpLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0QmxvY2tOdW1iZXJRdWVyeUtleShvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gWydibG9ja051bWJlcicsIGZpbHRlclF1ZXJ5T3B0aW9ucyhvcHRpb25zKV07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRCbG9ja051bWJlci5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0QmxvY2tOdW1iZXIiLCJmaWx0ZXJRdWVyeU9wdGlvbnMiLCJnZXRCbG9ja051bWJlclF1ZXJ5T3B0aW9ucyIsImNvbmZpZyIsIm9wdGlvbnMiLCJnY1RpbWUiLCJxdWVyeUZuIiwicXVlcnlLZXkiLCJzY29wZUtleSIsIl8iLCJwYXJhbWV0ZXJzIiwiYmxvY2tOdW1iZXIiLCJnZXRCbG9ja051bWJlclF1ZXJ5S2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/getBlockNumber.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/getEnsAddress.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/getEnsAddress.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsAddressQueryKey: () => (/* binding */ getEnsAddressQueryKey),\n/* harmony export */   getEnsAddressQueryOptions: () => (/* binding */ getEnsAddressQueryOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_getEnsAddress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/getEnsAddress.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAddress.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\");\n\n\nfunction getEnsAddressQueryOptions(config, options = {}) {\n    return {\n        async queryFn ({ queryKey }) {\n            const { name, scopeKey: _, ...parameters } = queryKey[1];\n            if (!name) throw new Error(\"name is required\");\n            return (0,_actions_getEnsAddress_js__WEBPACK_IMPORTED_MODULE_0__.getEnsAddress)(config, {\n                ...parameters,\n                name\n            });\n        },\n        queryKey: getEnsAddressQueryKey(options)\n    };\n}\nfunction getEnsAddressQueryKey(options = {}) {\n    return [\n        \"ensAddress\",\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.filterQueryOptions)(options)\n    ];\n} //# sourceMappingURL=getEnsAddress.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZ2V0RW5zQWRkcmVzcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTZEO0FBQ2I7QUFDekMsU0FBU0UsMEJBQTBCQyxNQUFNLEVBQUVDLFVBQVUsQ0FBQyxDQUFDO0lBQzFELE9BQU87UUFDSCxNQUFNQyxTQUFRLEVBQUVDLFFBQVEsRUFBRTtZQUN0QixNQUFNLEVBQUVDLElBQUksRUFBRUMsVUFBVUMsQ0FBQyxFQUFFLEdBQUdDLFlBQVksR0FBR0osUUFBUSxDQUFDLEVBQUU7WUFDeEQsSUFBSSxDQUFDQyxNQUNELE1BQU0sSUFBSUksTUFBTTtZQUNwQixPQUFPWCx3RUFBYUEsQ0FBQ0csUUFBUTtnQkFBRSxHQUFHTyxVQUFVO2dCQUFFSDtZQUFLO1FBQ3ZEO1FBQ0FELFVBQVVNLHNCQUFzQlI7SUFDcEM7QUFDSjtBQUNPLFNBQVNRLHNCQUFzQlIsVUFBVSxDQUFDLENBQUM7SUFDOUMsT0FBTztRQUFDO1FBQWNILDZEQUFrQkEsQ0FBQ0c7S0FBUztBQUN0RCxFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9xdWVyeS9nZXRFbnNBZGRyZXNzLmpzP2IxNzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RW5zQWRkcmVzcywgfSBmcm9tICcuLi9hY3Rpb25zL2dldEVuc0FkZHJlc3MuanMnO1xuaW1wb3J0IHsgZmlsdGVyUXVlcnlPcHRpb25zIH0gZnJvbSAnLi91dGlscy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5zQWRkcmVzc1F1ZXJ5T3B0aW9ucyhjb25maWcsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGFzeW5jIHF1ZXJ5Rm4oeyBxdWVyeUtleSB9KSB7XG4gICAgICAgICAgICBjb25zdCB7IG5hbWUsIHNjb3BlS2V5OiBfLCAuLi5wYXJhbWV0ZXJzIH0gPSBxdWVyeUtleVsxXTtcbiAgICAgICAgICAgIGlmICghbmFtZSlcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ25hbWUgaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgICAgIHJldHVybiBnZXRFbnNBZGRyZXNzKGNvbmZpZywgeyAuLi5wYXJhbWV0ZXJzLCBuYW1lIH0pO1xuICAgICAgICB9LFxuICAgICAgICBxdWVyeUtleTogZ2V0RW5zQWRkcmVzc1F1ZXJ5S2V5KG9wdGlvbnMpLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5zQWRkcmVzc1F1ZXJ5S2V5KG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiBbJ2Vuc0FkZHJlc3MnLCBmaWx0ZXJRdWVyeU9wdGlvbnMob3B0aW9ucyldO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0RW5zQWRkcmVzcy5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0RW5zQWRkcmVzcyIsImZpbHRlclF1ZXJ5T3B0aW9ucyIsImdldEVuc0FkZHJlc3NRdWVyeU9wdGlvbnMiLCJjb25maWciLCJvcHRpb25zIiwicXVlcnlGbiIsInF1ZXJ5S2V5IiwibmFtZSIsInNjb3BlS2V5IiwiXyIsInBhcmFtZXRlcnMiLCJFcnJvciIsImdldEVuc0FkZHJlc3NRdWVyeUtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/getEnsAddress.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/getEnsAvatar.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/getEnsAvatar.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsAvatarQueryKey: () => (/* binding */ getEnsAvatarQueryKey),\n/* harmony export */   getEnsAvatarQueryOptions: () => (/* binding */ getEnsAvatarQueryOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_getEnsAvatar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/getEnsAvatar.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAvatar.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\");\n\n\nfunction getEnsAvatarQueryOptions(config, options = {}) {\n    return {\n        async queryFn ({ queryKey }) {\n            const { name, scopeKey: _, ...parameters } = queryKey[1];\n            if (!name) throw new Error(\"name is required\");\n            return (0,_actions_getEnsAvatar_js__WEBPACK_IMPORTED_MODULE_0__.getEnsAvatar)(config, {\n                ...parameters,\n                name\n            });\n        },\n        queryKey: getEnsAvatarQueryKey(options)\n    };\n}\nfunction getEnsAvatarQueryKey(options = {}) {\n    return [\n        \"ensAvatar\",\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.filterQueryOptions)(options)\n    ];\n} //# sourceMappingURL=getEnsAvatar.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZ2V0RW5zQXZhdGFyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkQ7QUFDWDtBQUN6QyxTQUFTRSx5QkFBeUJDLE1BQU0sRUFBRUMsVUFBVSxDQUFDLENBQUM7SUFDekQsT0FBTztRQUNILE1BQU1DLFNBQVEsRUFBRUMsUUFBUSxFQUFFO1lBQ3RCLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxVQUFVQyxDQUFDLEVBQUUsR0FBR0MsWUFBWSxHQUFHSixRQUFRLENBQUMsRUFBRTtZQUN4RCxJQUFJLENBQUNDLE1BQ0QsTUFBTSxJQUFJSSxNQUFNO1lBQ3BCLE9BQU9YLHNFQUFZQSxDQUFDRyxRQUFRO2dCQUFFLEdBQUdPLFVBQVU7Z0JBQUVIO1lBQUs7UUFDdEQ7UUFDQUQsVUFBVU0scUJBQXFCUjtJQUNuQztBQUNKO0FBQ08sU0FBU1EscUJBQXFCUixVQUFVLENBQUMsQ0FBQztJQUM3QyxPQUFPO1FBQUM7UUFBYUgsNkRBQWtCQSxDQUFDRztLQUFTO0FBQ3JELEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3F1ZXJ5L2dldEVuc0F2YXRhci5qcz8zZDA5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEVuc0F2YXRhciwgfSBmcm9tICcuLi9hY3Rpb25zL2dldEVuc0F2YXRhci5qcyc7XG5pbXBvcnQgeyBmaWx0ZXJRdWVyeU9wdGlvbnMgfSBmcm9tICcuL3V0aWxzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnNBdmF0YXJRdWVyeU9wdGlvbnMoY29uZmlnLCBvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBhc3luYyBxdWVyeUZuKHsgcXVlcnlLZXkgfSkge1xuICAgICAgICAgICAgY29uc3QgeyBuYW1lLCBzY29wZUtleTogXywgLi4ucGFyYW1ldGVycyB9ID0gcXVlcnlLZXlbMV07XG4gICAgICAgICAgICBpZiAoIW5hbWUpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCduYW1lIGlzIHJlcXVpcmVkJyk7XG4gICAgICAgICAgICByZXR1cm4gZ2V0RW5zQXZhdGFyKGNvbmZpZywgeyAuLi5wYXJhbWV0ZXJzLCBuYW1lIH0pO1xuICAgICAgICB9LFxuICAgICAgICBxdWVyeUtleTogZ2V0RW5zQXZhdGFyUXVlcnlLZXkob3B0aW9ucyksXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnNBdmF0YXJRdWVyeUtleShvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gWydlbnNBdmF0YXInLCBmaWx0ZXJRdWVyeU9wdGlvbnMob3B0aW9ucyldO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0RW5zQXZhdGFyLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRFbnNBdmF0YXIiLCJmaWx0ZXJRdWVyeU9wdGlvbnMiLCJnZXRFbnNBdmF0YXJRdWVyeU9wdGlvbnMiLCJjb25maWciLCJvcHRpb25zIiwicXVlcnlGbiIsInF1ZXJ5S2V5IiwibmFtZSIsInNjb3BlS2V5IiwiXyIsInBhcmFtZXRlcnMiLCJFcnJvciIsImdldEVuc0F2YXRhclF1ZXJ5S2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/getEnsAvatar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/getEnsName.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/getEnsName.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsNameQueryKey: () => (/* binding */ getEnsNameQueryKey),\n/* harmony export */   getEnsNameQueryOptions: () => (/* binding */ getEnsNameQueryOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_getEnsName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/getEnsName.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsName.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\");\n\n\nfunction getEnsNameQueryOptions(config, options = {}) {\n    return {\n        async queryFn ({ queryKey }) {\n            const { address, scopeKey: _, ...parameters } = queryKey[1];\n            if (!address) throw new Error(\"address is required\");\n            return (0,_actions_getEnsName_js__WEBPACK_IMPORTED_MODULE_0__.getEnsName)(config, {\n                ...parameters,\n                address\n            });\n        },\n        queryKey: getEnsNameQueryKey(options)\n    };\n}\nfunction getEnsNameQueryKey(options = {}) {\n    return [\n        \"ensName\",\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.filterQueryOptions)(options)\n    ];\n} //# sourceMappingURL=getEnsName.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZ2V0RW5zTmFtZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVEO0FBQ1A7QUFDekMsU0FBU0UsdUJBQXVCQyxNQUFNLEVBQUVDLFVBQVUsQ0FBQyxDQUFDO0lBQ3ZELE9BQU87UUFDSCxNQUFNQyxTQUFRLEVBQUVDLFFBQVEsRUFBRTtZQUN0QixNQUFNLEVBQUVDLE9BQU8sRUFBRUMsVUFBVUMsQ0FBQyxFQUFFLEdBQUdDLFlBQVksR0FBR0osUUFBUSxDQUFDLEVBQUU7WUFDM0QsSUFBSSxDQUFDQyxTQUNELE1BQU0sSUFBSUksTUFBTTtZQUNwQixPQUFPWCxrRUFBVUEsQ0FBQ0csUUFBUTtnQkFBRSxHQUFHTyxVQUFVO2dCQUFFSDtZQUFRO1FBQ3ZEO1FBQ0FELFVBQVVNLG1CQUFtQlI7SUFDakM7QUFDSjtBQUNPLFNBQVNRLG1CQUFtQlIsVUFBVSxDQUFDLENBQUM7SUFDM0MsT0FBTztRQUFDO1FBQVdILDZEQUFrQkEsQ0FBQ0c7S0FBUztBQUNuRCxFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9xdWVyeS9nZXRFbnNOYW1lLmpzPzUyNGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RW5zTmFtZSwgfSBmcm9tICcuLi9hY3Rpb25zL2dldEVuc05hbWUuanMnO1xuaW1wb3J0IHsgZmlsdGVyUXVlcnlPcHRpb25zIH0gZnJvbSAnLi91dGlscy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5zTmFtZVF1ZXJ5T3B0aW9ucyhjb25maWcsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGFzeW5jIHF1ZXJ5Rm4oeyBxdWVyeUtleSB9KSB7XG4gICAgICAgICAgICBjb25zdCB7IGFkZHJlc3MsIHNjb3BlS2V5OiBfLCAuLi5wYXJhbWV0ZXJzIH0gPSBxdWVyeUtleVsxXTtcbiAgICAgICAgICAgIGlmICghYWRkcmVzcylcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2FkZHJlc3MgaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgICAgIHJldHVybiBnZXRFbnNOYW1lKGNvbmZpZywgeyAuLi5wYXJhbWV0ZXJzLCBhZGRyZXNzIH0pO1xuICAgICAgICB9LFxuICAgICAgICBxdWVyeUtleTogZ2V0RW5zTmFtZVF1ZXJ5S2V5KG9wdGlvbnMpLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5zTmFtZVF1ZXJ5S2V5KG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiBbJ2Vuc05hbWUnLCBmaWx0ZXJRdWVyeU9wdGlvbnMob3B0aW9ucyldO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0RW5zTmFtZS5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0RW5zTmFtZSIsImZpbHRlclF1ZXJ5T3B0aW9ucyIsImdldEVuc05hbWVRdWVyeU9wdGlvbnMiLCJjb25maWciLCJvcHRpb25zIiwicXVlcnlGbiIsInF1ZXJ5S2V5IiwiYWRkcmVzcyIsInNjb3BlS2V5IiwiXyIsInBhcmFtZXRlcnMiLCJFcnJvciIsImdldEVuc05hbWVRdWVyeUtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/getEnsName.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/getWalletClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/getWalletClient.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getWalletClientQueryKey: () => (/* binding */ getWalletClientQueryKey),\n/* harmony export */   getWalletClientQueryOptions: () => (/* binding */ getWalletClientQueryOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_getWalletClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/getWalletClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getWalletClient.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\");\n\n\nfunction getWalletClientQueryOptions(config, options = {}) {\n    return {\n        gcTime: 0,\n        async queryFn ({ queryKey }) {\n            const { connector } = options;\n            const { connectorUid: _, scopeKey: _s, ...parameters } = queryKey[1];\n            return (0,_actions_getWalletClient_js__WEBPACK_IMPORTED_MODULE_0__.getWalletClient)(config, {\n                ...parameters,\n                connector\n            });\n        },\n        queryKey: getWalletClientQueryKey(options)\n    };\n}\nfunction getWalletClientQueryKey(options = {}) {\n    const { connector, ...parameters } = options;\n    return [\n        \"walletClient\",\n        {\n            ...(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.filterQueryOptions)(parameters),\n            connectorUid: connector?.uid\n        }\n    ];\n} //# sourceMappingURL=getWalletClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZ2V0V2FsbGV0Q2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUU7QUFDakI7QUFDekMsU0FBU0UsNEJBQTRCQyxNQUFNLEVBQUVDLFVBQVUsQ0FBQyxDQUFDO0lBQzVELE9BQU87UUFDSEMsUUFBUTtRQUNSLE1BQU1DLFNBQVEsRUFBRUMsUUFBUSxFQUFFO1lBQ3RCLE1BQU0sRUFBRUMsU0FBUyxFQUFFLEdBQUdKO1lBQ3RCLE1BQU0sRUFBRUssY0FBY0MsQ0FBQyxFQUFFQyxVQUFVQyxFQUFFLEVBQUUsR0FBR0MsWUFBWSxHQUFHTixRQUFRLENBQUMsRUFBRTtZQUNwRSxPQUFPUCw0RUFBZUEsQ0FBQ0csUUFBUTtnQkFBRSxHQUFHVSxVQUFVO2dCQUFFTDtZQUFVO1FBQzlEO1FBQ0FELFVBQVVPLHdCQUF3QlY7SUFDdEM7QUFDSjtBQUNPLFNBQVNVLHdCQUF3QlYsVUFBVSxDQUFDLENBQUM7SUFDaEQsTUFBTSxFQUFFSSxTQUFTLEVBQUUsR0FBR0ssWUFBWSxHQUFHVDtJQUNyQyxPQUFPO1FBQ0g7UUFDQTtZQUFFLEdBQUdILDZEQUFrQkEsQ0FBQ1ksV0FBVztZQUFFSixjQUFjRCxXQUFXTztRQUFJO0tBQ3JFO0FBQ0wsRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvZ2V0V2FsbGV0Q2xpZW50LmpzP2FlZDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0V2FsbGV0Q2xpZW50LCB9IGZyb20gJy4uL2FjdGlvbnMvZ2V0V2FsbGV0Q2xpZW50LmpzJztcbmltcG9ydCB7IGZpbHRlclF1ZXJ5T3B0aW9ucyB9IGZyb20gJy4vdXRpbHMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFdhbGxldENsaWVudFF1ZXJ5T3B0aW9ucyhjb25maWcsIG9wdGlvbnMgPSB7fSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGdjVGltZTogMCxcbiAgICAgICAgYXN5bmMgcXVlcnlGbih7IHF1ZXJ5S2V5IH0pIHtcbiAgICAgICAgICAgIGNvbnN0IHsgY29ubmVjdG9yIH0gPSBvcHRpb25zO1xuICAgICAgICAgICAgY29uc3QgeyBjb25uZWN0b3JVaWQ6IF8sIHNjb3BlS2V5OiBfcywgLi4ucGFyYW1ldGVycyB9ID0gcXVlcnlLZXlbMV07XG4gICAgICAgICAgICByZXR1cm4gZ2V0V2FsbGV0Q2xpZW50KGNvbmZpZywgeyAuLi5wYXJhbWV0ZXJzLCBjb25uZWN0b3IgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHF1ZXJ5S2V5OiBnZXRXYWxsZXRDbGllbnRRdWVyeUtleShvcHRpb25zKSxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFdhbGxldENsaWVudFF1ZXJ5S2V5KG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHsgY29ubmVjdG9yLCAuLi5wYXJhbWV0ZXJzIH0gPSBvcHRpb25zO1xuICAgIHJldHVybiBbXG4gICAgICAgICd3YWxsZXRDbGllbnQnLFxuICAgICAgICB7IC4uLmZpbHRlclF1ZXJ5T3B0aW9ucyhwYXJhbWV0ZXJzKSwgY29ubmVjdG9yVWlkOiBjb25uZWN0b3I/LnVpZCB9LFxuICAgIF07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRXYWxsZXRDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbImdldFdhbGxldENsaWVudCIsImZpbHRlclF1ZXJ5T3B0aW9ucyIsImdldFdhbGxldENsaWVudFF1ZXJ5T3B0aW9ucyIsImNvbmZpZyIsIm9wdGlvbnMiLCJnY1RpbWUiLCJxdWVyeUZuIiwicXVlcnlLZXkiLCJjb25uZWN0b3IiLCJjb25uZWN0b3JVaWQiLCJfIiwic2NvcGVLZXkiLCJfcyIsInBhcmFtZXRlcnMiLCJnZXRXYWxsZXRDbGllbnRRdWVyeUtleSIsInVpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/getWalletClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/readContract.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/readContract.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readContractQueryKey: () => (/* binding */ readContractQueryKey),\n/* harmony export */   readContractQueryOptions: () => (/* binding */ readContractQueryOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_readContract_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/readContract.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContract.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\");\n\n\nfunction readContractQueryOptions(config, options = {}) {\n    return {\n        // TODO: Support `signal` once Viem actions allow passthrough\n        // https://tkdodo.eu/blog/why-you-want-react-query#bonus-cancellation\n        async queryFn ({ queryKey }) {\n            const abi = options.abi;\n            if (!abi) throw new Error(\"abi is required\");\n            const { address, functionName, scopeKey: _, ...parameters } = queryKey[1];\n            if (!address) throw new Error(\"address is required\");\n            if (!functionName) throw new Error(\"functionName is required\");\n            const args = parameters.args;\n            return (0,_actions_readContract_js__WEBPACK_IMPORTED_MODULE_0__.readContract)(config, {\n                abi,\n                address,\n                functionName,\n                args,\n                ...parameters\n            });\n        },\n        queryKey: readContractQueryKey(options)\n    };\n}\nfunction readContractQueryKey(options = {}) {\n    const { abi: _, ...rest } = options;\n    return [\n        \"readContract\",\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.filterQueryOptions)(rest)\n    ];\n} //# sourceMappingURL=readContract.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvcmVhZENvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkQ7QUFDWDtBQUN6QyxTQUFTRSx5QkFBeUJDLE1BQU0sRUFBRUMsVUFBVSxDQUFDLENBQUM7SUFDekQsT0FBTztRQUNILDZEQUE2RDtRQUM3RCxxRUFBcUU7UUFDckUsTUFBTUMsU0FBUSxFQUFFQyxRQUFRLEVBQUU7WUFDdEIsTUFBTUMsTUFBTUgsUUFBUUcsR0FBRztZQUN2QixJQUFJLENBQUNBLEtBQ0QsTUFBTSxJQUFJQyxNQUFNO1lBQ3BCLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxZQUFZLEVBQUVDLFVBQVVDLENBQUMsRUFBRSxHQUFHQyxZQUFZLEdBQUdQLFFBQVEsQ0FBQyxFQUFFO1lBQ3pFLElBQUksQ0FBQ0csU0FDRCxNQUFNLElBQUlELE1BQU07WUFDcEIsSUFBSSxDQUFDRSxjQUNELE1BQU0sSUFBSUYsTUFBTTtZQUNwQixNQUFNTSxPQUFPRCxXQUFXQyxJQUFJO1lBQzVCLE9BQU9kLHNFQUFZQSxDQUFDRyxRQUFRO2dCQUN4Qkk7Z0JBQ0FFO2dCQUNBQztnQkFDQUk7Z0JBQ0EsR0FBR0QsVUFBVTtZQUNqQjtRQUNKO1FBQ0FQLFVBQVVTLHFCQUFxQlg7SUFDbkM7QUFDSjtBQUNPLFNBQVNXLHFCQUFxQlgsVUFBVSxDQUFDLENBQUM7SUFDN0MsTUFBTSxFQUFFRyxLQUFLSyxDQUFDLEVBQUUsR0FBR0ksTUFBTSxHQUFHWjtJQUM1QixPQUFPO1FBQUM7UUFBZ0JILDZEQUFrQkEsQ0FBQ2U7S0FBTTtBQUNyRCxFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9xdWVyeS9yZWFkQ29udHJhY3QuanM/ZWExNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWFkQ29udHJhY3QsIH0gZnJvbSAnLi4vYWN0aW9ucy9yZWFkQ29udHJhY3QuanMnO1xuaW1wb3J0IHsgZmlsdGVyUXVlcnlPcHRpb25zIH0gZnJvbSAnLi91dGlscy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gcmVhZENvbnRyYWN0UXVlcnlPcHRpb25zKGNvbmZpZywgb3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgLy8gVE9ETzogU3VwcG9ydCBgc2lnbmFsYCBvbmNlIFZpZW0gYWN0aW9ucyBhbGxvdyBwYXNzdGhyb3VnaFxuICAgICAgICAvLyBodHRwczovL3RrZG9kby5ldS9ibG9nL3doeS15b3Utd2FudC1yZWFjdC1xdWVyeSNib251cy1jYW5jZWxsYXRpb25cbiAgICAgICAgYXN5bmMgcXVlcnlGbih7IHF1ZXJ5S2V5IH0pIHtcbiAgICAgICAgICAgIGNvbnN0IGFiaSA9IG9wdGlvbnMuYWJpO1xuICAgICAgICAgICAgaWYgKCFhYmkpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdhYmkgaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgICAgIGNvbnN0IHsgYWRkcmVzcywgZnVuY3Rpb25OYW1lLCBzY29wZUtleTogXywgLi4ucGFyYW1ldGVycyB9ID0gcXVlcnlLZXlbMV07XG4gICAgICAgICAgICBpZiAoIWFkZHJlc3MpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdhZGRyZXNzIGlzIHJlcXVpcmVkJyk7XG4gICAgICAgICAgICBpZiAoIWZ1bmN0aW9uTmFtZSlcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2Z1bmN0aW9uTmFtZSBpcyByZXF1aXJlZCcpO1xuICAgICAgICAgICAgY29uc3QgYXJncyA9IHBhcmFtZXRlcnMuYXJncztcbiAgICAgICAgICAgIHJldHVybiByZWFkQ29udHJhY3QoY29uZmlnLCB7XG4gICAgICAgICAgICAgICAgYWJpLFxuICAgICAgICAgICAgICAgIGFkZHJlc3MsXG4gICAgICAgICAgICAgICAgZnVuY3Rpb25OYW1lLFxuICAgICAgICAgICAgICAgIGFyZ3MsXG4gICAgICAgICAgICAgICAgLi4ucGFyYW1ldGVycyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBxdWVyeUtleTogcmVhZENvbnRyYWN0UXVlcnlLZXkob3B0aW9ucyksXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZWFkQ29udHJhY3RRdWVyeUtleShvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB7IGFiaTogXywgLi4ucmVzdCB9ID0gb3B0aW9ucztcbiAgICByZXR1cm4gWydyZWFkQ29udHJhY3QnLCBmaWx0ZXJRdWVyeU9wdGlvbnMocmVzdCldO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhZENvbnRyYWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJyZWFkQ29udHJhY3QiLCJmaWx0ZXJRdWVyeU9wdGlvbnMiLCJyZWFkQ29udHJhY3RRdWVyeU9wdGlvbnMiLCJjb25maWciLCJvcHRpb25zIiwicXVlcnlGbiIsInF1ZXJ5S2V5IiwiYWJpIiwiRXJyb3IiLCJhZGRyZXNzIiwiZnVuY3Rpb25OYW1lIiwic2NvcGVLZXkiLCJfIiwicGFyYW1ldGVycyIsImFyZ3MiLCJyZWFkQ29udHJhY3RRdWVyeUtleSIsInJlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/readContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/signMessage.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/signMessage.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signMessageMutationOptions: () => (/* binding */ signMessageMutationOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_signMessage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/signMessage.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/signMessage.js\");\n\nfunction signMessageMutationOptions(config) {\n    return {\n        mutationFn (variables) {\n            return (0,_actions_signMessage_js__WEBPACK_IMPORTED_MODULE_0__.signMessage)(config, variables);\n        },\n        mutationKey: [\n            \"signMessage\"\n        ]\n    };\n} //# sourceMappingURL=signMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvc2lnbk1lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUQ7QUFDbEQsU0FBU0MsMkJBQTJCQyxNQUFNO0lBQzdDLE9BQU87UUFDSEMsWUFBV0MsU0FBUztZQUNoQixPQUFPSixvRUFBV0EsQ0FBQ0UsUUFBUUU7UUFDL0I7UUFDQUMsYUFBYTtZQUFDO1NBQWM7SUFDaEM7QUFDSixFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9xdWVyeS9zaWduTWVzc2FnZS5qcz9lMzIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNpZ25NZXNzYWdlLCB9IGZyb20gJy4uL2FjdGlvbnMvc2lnbk1lc3NhZ2UuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHNpZ25NZXNzYWdlTXV0YXRpb25PcHRpb25zKGNvbmZpZykge1xuICAgIHJldHVybiB7XG4gICAgICAgIG11dGF0aW9uRm4odmFyaWFibGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gc2lnbk1lc3NhZ2UoY29uZmlnLCB2YXJpYWJsZXMpO1xuICAgICAgICB9LFxuICAgICAgICBtdXRhdGlvbktleTogWydzaWduTWVzc2FnZSddLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaWduTWVzc2FnZS5qcy5tYXAiXSwibmFtZXMiOlsic2lnbk1lc3NhZ2UiLCJzaWduTWVzc2FnZU11dGF0aW9uT3B0aW9ucyIsImNvbmZpZyIsIm11dGF0aW9uRm4iLCJ2YXJpYWJsZXMiLCJtdXRhdGlvbktleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/signMessage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/switchChain.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/switchChain.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   switchChainMutationOptions: () => (/* binding */ switchChainMutationOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_switchChain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/switchChain.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/switchChain.js\");\n\nfunction switchChainMutationOptions(config) {\n    return {\n        mutationFn (variables) {\n            return (0,_actions_switchChain_js__WEBPACK_IMPORTED_MODULE_0__.switchChain)(config, variables);\n        },\n        mutationKey: [\n            \"switchChain\"\n        ]\n    };\n} //# sourceMappingURL=switchChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvc3dpdGNoQ2hhaW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUQ7QUFDbEQsU0FBU0MsMkJBQTJCQyxNQUFNO0lBQzdDLE9BQU87UUFDSEMsWUFBV0MsU0FBUztZQUNoQixPQUFPSixvRUFBV0EsQ0FBQ0UsUUFBUUU7UUFDL0I7UUFDQUMsYUFBYTtZQUFDO1NBQWM7SUFDaEM7QUFDSixFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9xdWVyeS9zd2l0Y2hDaGFpbi5qcz8zYWMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN3aXRjaENoYWluLCB9IGZyb20gJy4uL2FjdGlvbnMvc3dpdGNoQ2hhaW4uanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHN3aXRjaENoYWluTXV0YXRpb25PcHRpb25zKGNvbmZpZykge1xuICAgIHJldHVybiB7XG4gICAgICAgIG11dGF0aW9uRm4odmFyaWFibGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gc3dpdGNoQ2hhaW4oY29uZmlnLCB2YXJpYWJsZXMpO1xuICAgICAgICB9LFxuICAgICAgICBtdXRhdGlvbktleTogWydzd2l0Y2hDaGFpbiddLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zd2l0Y2hDaGFpbi5qcy5tYXAiXSwibmFtZXMiOlsic3dpdGNoQ2hhaW4iLCJzd2l0Y2hDaGFpbk11dGF0aW9uT3B0aW9ucyIsImNvbmZpZyIsIm11dGF0aW9uRm4iLCJ2YXJpYWJsZXMiLCJtdXRhdGlvbktleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/switchChain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/utils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filterQueryOptions: () => (/* binding */ filterQueryOptions),\n/* harmony export */   hashFn: () => (/* binding */ hashFn),\n/* harmony export */   structuralSharing: () => (/* binding */ structuralSharing)\n/* harmony export */ });\n/* harmony import */ var _tanstack_query_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/query-core */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/deepEqual.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\");\n\n\nfunction structuralSharing(oldData, newData) {\n    if ((0,_utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(oldData, newData)) return oldData;\n    return (0,_tanstack_query_core__WEBPACK_IMPORTED_MODULE_1__.replaceEqualDeep)(oldData, newData);\n}\nfunction hashFn(queryKey) {\n    return JSON.stringify(queryKey, (_, value)=>{\n        if (isPlainObject(value)) return Object.keys(value).sort().reduce((result, key)=>{\n            result[key] = value[key];\n            return result;\n        }, {});\n        if (typeof value === \"bigint\") return value.toString();\n        return value;\n    });\n}\n// biome-ignore lint/complexity/noBannedTypes:\nfunction isPlainObject(value) {\n    if (!hasObjectPrototype(value)) {\n        return false;\n    }\n    // If has modified constructor\n    const ctor = value.constructor;\n    if (typeof ctor === \"undefined\") return true;\n    // If has modified prototype\n    const prot = ctor.prototype;\n    if (!hasObjectPrototype(prot)) return false;\n    // If constructor does not have an Object-specific method\n    // biome-ignore lint/suspicious/noPrototypeBuiltins: <explanation>\n    if (!prot.hasOwnProperty(\"isPrototypeOf\")) return false;\n    // Most likely a plain Object\n    return true;\n}\nfunction hasObjectPrototype(o) {\n    return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction filterQueryOptions(options) {\n    // destructuring is super fast\n    // biome-ignore format: no formatting\n    const { // import('@tanstack/query-core').QueryOptions\n    _defaulted, behavior, gcTime, initialData, initialDataUpdatedAt, maxPages, meta, networkMode, queryFn, queryHash, queryKey, queryKeyHashFn, retry, retryDelay, structuralSharing, // import('@tanstack/query-core').InfiniteQueryObserverOptions\n    getPreviousPageParam, getNextPageParam, initialPageParam, // import('@tanstack/react-query').UseQueryOptions\n    _optimisticResults, enabled, notifyOnChangeProps, placeholderData, refetchInterval, refetchIntervalInBackground, refetchOnMount, refetchOnReconnect, refetchOnWindowFocus, retryOnMount, select, staleTime, suspense, throwOnError, ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // wagmi\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    config, connector, query, ...rest } = options;\n    return rest;\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBd0Q7QUFDTjtBQUMzQyxTQUFTRSxrQkFBa0JDLE9BQU8sRUFBRUMsT0FBTztJQUM5QyxJQUFJSCw4REFBU0EsQ0FBQ0UsU0FBU0MsVUFDbkIsT0FBT0Q7SUFDWCxPQUFPSCxzRUFBZ0JBLENBQUNHLFNBQVNDO0FBQ3JDO0FBQ08sU0FBU0MsT0FBT0MsUUFBUTtJQUMzQixPQUFPQyxLQUFLQyxTQUFTLENBQUNGLFVBQVUsQ0FBQ0csR0FBR0M7UUFDaEMsSUFBSUMsY0FBY0QsUUFDZCxPQUFPRSxPQUFPQyxJQUFJLENBQUNILE9BQ2RJLElBQUksR0FDSkMsTUFBTSxDQUFDLENBQUNDLFFBQVFDO1lBQ2pCRCxNQUFNLENBQUNDLElBQUksR0FBR1AsS0FBSyxDQUFDTyxJQUFJO1lBQ3hCLE9BQU9EO1FBQ1gsR0FBRyxDQUFDO1FBQ1IsSUFBSSxPQUFPTixVQUFVLFVBQ2pCLE9BQU9BLE1BQU1RLFFBQVE7UUFDekIsT0FBT1I7SUFDWDtBQUNKO0FBQ0EsOENBQThDO0FBQzlDLFNBQVNDLGNBQWNELEtBQUs7SUFDeEIsSUFBSSxDQUFDUyxtQkFBbUJULFFBQVE7UUFDNUIsT0FBTztJQUNYO0lBQ0EsOEJBQThCO0lBQzlCLE1BQU1VLE9BQU9WLE1BQU1XLFdBQVc7SUFDOUIsSUFBSSxPQUFPRCxTQUFTLGFBQ2hCLE9BQU87SUFDWCw0QkFBNEI7SUFDNUIsTUFBTUUsT0FBT0YsS0FBS0csU0FBUztJQUMzQixJQUFJLENBQUNKLG1CQUFtQkcsT0FDcEIsT0FBTztJQUNYLHlEQUF5RDtJQUN6RCxrRUFBa0U7SUFDbEUsSUFBSSxDQUFDQSxLQUFLRSxjQUFjLENBQUMsa0JBQ3JCLE9BQU87SUFDWCw2QkFBNkI7SUFDN0IsT0FBTztBQUNYO0FBQ0EsU0FBU0wsbUJBQW1CTSxDQUFDO0lBQ3pCLE9BQU9iLE9BQU9XLFNBQVMsQ0FBQ0wsUUFBUSxDQUFDUSxJQUFJLENBQUNELE9BQU87QUFDakQ7QUFDTyxTQUFTRSxtQkFBbUJDLE9BQU87SUFDdEMsOEJBQThCO0lBQzlCLHFDQUFxQztJQUNyQyxNQUFNLEVBQ04sOENBQThDO0lBQzlDQyxVQUFVLEVBQUVDLFFBQVEsRUFBRUMsTUFBTSxFQUFFQyxXQUFXLEVBQUVDLG9CQUFvQixFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsV0FBVyxFQUFFQyxPQUFPLEVBQUVDLFNBQVMsRUFBRWhDLFFBQVEsRUFBRWlDLGNBQWMsRUFBRUMsS0FBSyxFQUFFQyxVQUFVLEVBQUV2QyxpQkFBaUIsRUFDaEwsOERBQThEO0lBQzlEd0Msb0JBQW9CLEVBQUVDLGdCQUFnQixFQUFFQyxnQkFBZ0IsRUFDeEQsa0RBQWtEO0lBQ2xEQyxrQkFBa0IsRUFBRUMsT0FBTyxFQUFFQyxtQkFBbUIsRUFBRUMsZUFBZSxFQUFFQyxlQUFlLEVBQUVDLDJCQUEyQixFQUFFQyxjQUFjLEVBQUVDLGtCQUFrQixFQUFFQyxvQkFBb0IsRUFBRUMsWUFBWSxFQUFFQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsUUFBUSxFQUFFQyxZQUFZLEVBQ2xPLGdJQUFnSTtJQUNoSSxRQUFRO0lBQ1IsZ0lBQWdJO0lBQ2hJQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsS0FBSyxFQUFFLEdBQUdDLE1BQU0sR0FBR2xDO0lBQ3RDLE9BQU9rQztBQUNYLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3F1ZXJ5L3V0aWxzLmpzP2JiYTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVwbGFjZUVxdWFsRGVlcCB9IGZyb20gJ0B0YW5zdGFjay9xdWVyeS1jb3JlJztcbmltcG9ydCB7IGRlZXBFcXVhbCB9IGZyb20gJy4uL3V0aWxzL2RlZXBFcXVhbC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gc3RydWN0dXJhbFNoYXJpbmcob2xkRGF0YSwgbmV3RGF0YSkge1xuICAgIGlmIChkZWVwRXF1YWwob2xkRGF0YSwgbmV3RGF0YSkpXG4gICAgICAgIHJldHVybiBvbGREYXRhO1xuICAgIHJldHVybiByZXBsYWNlRXF1YWxEZWVwKG9sZERhdGEsIG5ld0RhdGEpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhhc2hGbihxdWVyeUtleSkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShxdWVyeUtleSwgKF8sIHZhbHVlKSA9PiB7XG4gICAgICAgIGlmIChpc1BsYWluT2JqZWN0KHZhbHVlKSlcbiAgICAgICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh2YWx1ZSlcbiAgICAgICAgICAgICAgICAuc29ydCgpXG4gICAgICAgICAgICAgICAgLnJlZHVjZSgocmVzdWx0LCBrZXkpID0+IHtcbiAgICAgICAgICAgICAgICByZXN1bHRba2V5XSA9IHZhbHVlW2tleV07XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgIH0sIHt9KTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2JpZ2ludCcpXG4gICAgICAgICAgICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0pO1xufVxuLy8gYmlvbWUtaWdub3JlIGxpbnQvY29tcGxleGl0eS9ub0Jhbm5lZFR5cGVzOlxuZnVuY3Rpb24gaXNQbGFpbk9iamVjdCh2YWx1ZSkge1xuICAgIGlmICghaGFzT2JqZWN0UHJvdG90eXBlKHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIElmIGhhcyBtb2RpZmllZCBjb25zdHJ1Y3RvclxuICAgIGNvbnN0IGN0b3IgPSB2YWx1ZS5jb25zdHJ1Y3RvcjtcbiAgICBpZiAodHlwZW9mIGN0b3IgPT09ICd1bmRlZmluZWQnKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAvLyBJZiBoYXMgbW9kaWZpZWQgcHJvdG90eXBlXG4gICAgY29uc3QgcHJvdCA9IGN0b3IucHJvdG90eXBlO1xuICAgIGlmICghaGFzT2JqZWN0UHJvdG90eXBlKHByb3QpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgLy8gSWYgY29uc3RydWN0b3IgZG9lcyBub3QgaGF2ZSBhbiBPYmplY3Qtc3BlY2lmaWMgbWV0aG9kXG4gICAgLy8gYmlvbWUtaWdub3JlIGxpbnQvc3VzcGljaW91cy9ub1Byb3RvdHlwZUJ1aWx0aW5zOiA8ZXhwbGFuYXRpb24+XG4gICAgaWYgKCFwcm90Lmhhc093blByb3BlcnR5KCdpc1Byb3RvdHlwZU9mJykpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAvLyBNb3N0IGxpa2VseSBhIHBsYWluIE9iamVjdFxuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gaGFzT2JqZWN0UHJvdG90eXBlKG8pIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pID09PSAnW29iamVjdCBPYmplY3RdJztcbn1cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJRdWVyeU9wdGlvbnMob3B0aW9ucykge1xuICAgIC8vIGRlc3RydWN0dXJpbmcgaXMgc3VwZXIgZmFzdFxuICAgIC8vIGJpb21lLWlnbm9yZSBmb3JtYXQ6IG5vIGZvcm1hdHRpbmdcbiAgICBjb25zdCB7IFxuICAgIC8vIGltcG9ydCgnQHRhbnN0YWNrL3F1ZXJ5LWNvcmUnKS5RdWVyeU9wdGlvbnNcbiAgICBfZGVmYXVsdGVkLCBiZWhhdmlvciwgZ2NUaW1lLCBpbml0aWFsRGF0YSwgaW5pdGlhbERhdGFVcGRhdGVkQXQsIG1heFBhZ2VzLCBtZXRhLCBuZXR3b3JrTW9kZSwgcXVlcnlGbiwgcXVlcnlIYXNoLCBxdWVyeUtleSwgcXVlcnlLZXlIYXNoRm4sIHJldHJ5LCByZXRyeURlbGF5LCBzdHJ1Y3R1cmFsU2hhcmluZywgXG4gICAgLy8gaW1wb3J0KCdAdGFuc3RhY2svcXVlcnktY29yZScpLkluZmluaXRlUXVlcnlPYnNlcnZlck9wdGlvbnNcbiAgICBnZXRQcmV2aW91c1BhZ2VQYXJhbSwgZ2V0TmV4dFBhZ2VQYXJhbSwgaW5pdGlhbFBhZ2VQYXJhbSwgXG4gICAgLy8gaW1wb3J0KCdAdGFuc3RhY2svcmVhY3QtcXVlcnknKS5Vc2VRdWVyeU9wdGlvbnNcbiAgICBfb3B0aW1pc3RpY1Jlc3VsdHMsIGVuYWJsZWQsIG5vdGlmeU9uQ2hhbmdlUHJvcHMsIHBsYWNlaG9sZGVyRGF0YSwgcmVmZXRjaEludGVydmFsLCByZWZldGNoSW50ZXJ2YWxJbkJhY2tncm91bmQsIHJlZmV0Y2hPbk1vdW50LCByZWZldGNoT25SZWNvbm5lY3QsIHJlZmV0Y2hPbldpbmRvd0ZvY3VzLCByZXRyeU9uTW91bnQsIHNlbGVjdCwgc3RhbGVUaW1lLCBzdXNwZW5zZSwgdGhyb3dPbkVycm9yLCBcbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAgIC8vIHdhZ21pXG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICBjb25maWcsIGNvbm5lY3RvciwgcXVlcnksIC4uLnJlc3QgfSA9IG9wdGlvbnM7XG4gICAgcmV0dXJuIHJlc3Q7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsicmVwbGFjZUVxdWFsRGVlcCIsImRlZXBFcXVhbCIsInN0cnVjdHVyYWxTaGFyaW5nIiwib2xkRGF0YSIsIm5ld0RhdGEiLCJoYXNoRm4iLCJxdWVyeUtleSIsIkpTT04iLCJzdHJpbmdpZnkiLCJfIiwidmFsdWUiLCJpc1BsYWluT2JqZWN0IiwiT2JqZWN0Iiwia2V5cyIsInNvcnQiLCJyZWR1Y2UiLCJyZXN1bHQiLCJrZXkiLCJ0b1N0cmluZyIsImhhc09iamVjdFByb3RvdHlwZSIsImN0b3IiLCJjb25zdHJ1Y3RvciIsInByb3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsIm8iLCJjYWxsIiwiZmlsdGVyUXVlcnlPcHRpb25zIiwib3B0aW9ucyIsIl9kZWZhdWx0ZWQiLCJiZWhhdmlvciIsImdjVGltZSIsImluaXRpYWxEYXRhIiwiaW5pdGlhbERhdGFVcGRhdGVkQXQiLCJtYXhQYWdlcyIsIm1ldGEiLCJuZXR3b3JrTW9kZSIsInF1ZXJ5Rm4iLCJxdWVyeUhhc2giLCJxdWVyeUtleUhhc2hGbiIsInJldHJ5IiwicmV0cnlEZWxheSIsImdldFByZXZpb3VzUGFnZVBhcmFtIiwiZ2V0TmV4dFBhZ2VQYXJhbSIsImluaXRpYWxQYWdlUGFyYW0iLCJfb3B0aW1pc3RpY1Jlc3VsdHMiLCJlbmFibGVkIiwibm90aWZ5T25DaGFuZ2VQcm9wcyIsInBsYWNlaG9sZGVyRGF0YSIsInJlZmV0Y2hJbnRlcnZhbCIsInJlZmV0Y2hJbnRlcnZhbEluQmFja2dyb3VuZCIsInJlZmV0Y2hPbk1vdW50IiwicmVmZXRjaE9uUmVjb25uZWN0IiwicmVmZXRjaE9uV2luZG93Rm9jdXMiLCJyZXRyeU9uTW91bnQiLCJzZWxlY3QiLCJzdGFsZVRpbWUiLCJzdXNwZW5zZSIsInRocm93T25FcnJvciIsImNvbmZpZyIsImNvbm5lY3RvciIsInF1ZXJ5IiwicmVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/waitForTransactionReceipt.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/waitForTransactionReceipt.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   waitForTransactionReceiptQueryKey: () => (/* binding */ waitForTransactionReceiptQueryKey),\n/* harmony export */   waitForTransactionReceiptQueryOptions: () => (/* binding */ waitForTransactionReceiptQueryOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_waitForTransactionReceipt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/waitForTransactionReceipt.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/waitForTransactionReceipt.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/query/utils.js\");\n\n\nfunction waitForTransactionReceiptQueryOptions(config, options = {}) {\n    return {\n        async queryFn ({ queryKey }) {\n            const { hash, ...parameters } = queryKey[1];\n            if (!hash) throw new Error(\"hash is required\");\n            return (0,_actions_waitForTransactionReceipt_js__WEBPACK_IMPORTED_MODULE_0__.waitForTransactionReceipt)(config, {\n                ...parameters,\n                onReplaced: options.onReplaced,\n                hash\n            });\n        },\n        queryKey: waitForTransactionReceiptQueryKey(options)\n    };\n}\nfunction waitForTransactionReceiptQueryKey(options = {}) {\n    const { onReplaced: _, ...rest } = options;\n    return [\n        \"waitForTransactionReceipt\",\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.filterQueryOptions)(rest)\n    ];\n} //# sourceMappingURL=waitForTransactionReceipt.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFGO0FBQ3JDO0FBQ3pDLFNBQVNFLHNDQUFzQ0MsTUFBTSxFQUFFQyxVQUFVLENBQUMsQ0FBQztJQUN0RSxPQUFPO1FBQ0gsTUFBTUMsU0FBUSxFQUFFQyxRQUFRLEVBQUU7WUFDdEIsTUFBTSxFQUFFQyxJQUFJLEVBQUUsR0FBR0MsWUFBWSxHQUFHRixRQUFRLENBQUMsRUFBRTtZQUMzQyxJQUFJLENBQUNDLE1BQ0QsTUFBTSxJQUFJRSxNQUFNO1lBQ3BCLE9BQU9ULGdHQUF5QkEsQ0FBQ0csUUFBUTtnQkFDckMsR0FBR0ssVUFBVTtnQkFDYkUsWUFBWU4sUUFBUU0sVUFBVTtnQkFDOUJIO1lBQ0o7UUFDSjtRQUNBRCxVQUFVSyxrQ0FBa0NQO0lBQ2hEO0FBQ0o7QUFDTyxTQUFTTyxrQ0FBa0NQLFVBQVUsQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRU0sWUFBWUUsQ0FBQyxFQUFFLEdBQUdDLE1BQU0sR0FBR1Q7SUFDbkMsT0FBTztRQUFDO1FBQTZCSCw2REFBa0JBLENBQUNZO0tBQU07QUFDbEUsRUFDQSxxREFBcUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdC5qcz8yMWRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdhaXRGb3JUcmFuc2FjdGlvblJlY2VpcHQsIH0gZnJvbSAnLi4vYWN0aW9ucy93YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0LmpzJztcbmltcG9ydCB7IGZpbHRlclF1ZXJ5T3B0aW9ucyB9IGZyb20gJy4vdXRpbHMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHdhaXRGb3JUcmFuc2FjdGlvblJlY2VpcHRRdWVyeU9wdGlvbnMoY29uZmlnLCBvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBhc3luYyBxdWVyeUZuKHsgcXVlcnlLZXkgfSkge1xuICAgICAgICAgICAgY29uc3QgeyBoYXNoLCAuLi5wYXJhbWV0ZXJzIH0gPSBxdWVyeUtleVsxXTtcbiAgICAgICAgICAgIGlmICghaGFzaClcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2hhc2ggaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgICAgIHJldHVybiB3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0KGNvbmZpZywge1xuICAgICAgICAgICAgICAgIC4uLnBhcmFtZXRlcnMsXG4gICAgICAgICAgICAgICAgb25SZXBsYWNlZDogb3B0aW9ucy5vblJlcGxhY2VkLFxuICAgICAgICAgICAgICAgIGhhc2gsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgcXVlcnlLZXk6IHdhaXRGb3JUcmFuc2FjdGlvblJlY2VpcHRRdWVyeUtleShvcHRpb25zKSxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdhaXRGb3JUcmFuc2FjdGlvblJlY2VpcHRRdWVyeUtleShvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB7IG9uUmVwbGFjZWQ6IF8sIC4uLnJlc3QgfSA9IG9wdGlvbnM7XG4gICAgcmV0dXJuIFsnd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdCcsIGZpbHRlclF1ZXJ5T3B0aW9ucyhyZXN0KV07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0LmpzLm1hcCJdLCJuYW1lcyI6WyJ3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0IiwiZmlsdGVyUXVlcnlPcHRpb25zIiwid2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdFF1ZXJ5T3B0aW9ucyIsImNvbmZpZyIsIm9wdGlvbnMiLCJxdWVyeUZuIiwicXVlcnlLZXkiLCJoYXNoIiwicGFyYW1ldGVycyIsIkVycm9yIiwib25SZXBsYWNlZCIsIndhaXRGb3JUcmFuc2FjdGlvblJlY2VpcHRRdWVyeUtleSIsIl8iLCJyZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/waitForTransactionReceipt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/query/writeContract.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/query/writeContract.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   writeContractMutationOptions: () => (/* binding */ writeContractMutationOptions)\n/* harmony export */ });\n/* harmony import */ var _actions_writeContract_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/writeContract.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/writeContract.js\");\n\nfunction writeContractMutationOptions(config) {\n    return {\n        mutationFn (variables) {\n            return (0,_actions_writeContract_js__WEBPACK_IMPORTED_MODULE_0__.writeContract)(config, variables);\n        },\n        mutationKey: [\n            \"writeContract\"\n        ]\n    };\n} //# sourceMappingURL=writeContract.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vcXVlcnkvd3JpdGVDb250cmFjdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE2RDtBQUN0RCxTQUFTQyw2QkFBNkJDLE1BQU07SUFDL0MsT0FBTztRQUNIQyxZQUFXQyxTQUFTO1lBQ2hCLE9BQU9KLHdFQUFhQSxDQUFDRSxRQUFRRTtRQUNqQztRQUNBQyxhQUFhO1lBQUM7U0FBZ0I7SUFDbEM7QUFDSixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9xdWVyeS93cml0ZUNvbnRyYWN0LmpzPzVlMDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd3JpdGVDb250cmFjdCwgfSBmcm9tICcuLi9hY3Rpb25zL3dyaXRlQ29udHJhY3QuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHdyaXRlQ29udHJhY3RNdXRhdGlvbk9wdGlvbnMoY29uZmlnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbXV0YXRpb25Gbih2YXJpYWJsZXMpIHtcbiAgICAgICAgICAgIHJldHVybiB3cml0ZUNvbnRyYWN0KGNvbmZpZywgdmFyaWFibGVzKTtcbiAgICAgICAgfSxcbiAgICAgICAgbXV0YXRpb25LZXk6IFsnd3JpdGVDb250cmFjdCddLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cml0ZUNvbnRyYWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJ3cml0ZUNvbnRyYWN0Iiwid3JpdGVDb250cmFjdE11dGF0aW9uT3B0aW9ucyIsImNvbmZpZyIsIm11dGF0aW9uRm4iLCJ2YXJpYWJsZXMiLCJtdXRhdGlvbktleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/query/writeContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepEqual: () => (/* binding */ deepEqual)\n/* harmony export */ });\n/** Forked from https://github.com/epoberezkin/fast-deep-equal */ function deepEqual(a, b) {\n    if (a === b) return true;\n    if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n        if (a.constructor !== b.constructor) return false;\n        let length;\n        let i;\n        if (Array.isArray(a) && Array.isArray(b)) {\n            length = a.length;\n            if (length !== b.length) return false;\n            for(i = length; i-- !== 0;)if (!deepEqual(a[i], b[i])) return false;\n            return true;\n        }\n        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n        if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n        const keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length) return false;\n        for(i = length; i-- !== 0;)if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n        for(i = length; i-- !== 0;){\n            const key = keys[i];\n            if (key && !deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n    }\n    // true if both NaN, false otherwise\n    // biome-ignore lint/suspicious/noSelfCompare: <explanation>\n    return a !== a && b !== b;\n} //# sourceMappingURL=deepEqual.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZGVlcEVxdWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSwrREFBK0QsR0FDeEQsU0FBU0EsVUFBVUMsQ0FBQyxFQUFFQyxDQUFDO0lBQzFCLElBQUlELE1BQU1DLEdBQ04sT0FBTztJQUNYLElBQUlELEtBQUtDLEtBQUssT0FBT0QsTUFBTSxZQUFZLE9BQU9DLE1BQU0sVUFBVTtRQUMxRCxJQUFJRCxFQUFFRSxXQUFXLEtBQUtELEVBQUVDLFdBQVcsRUFDL0IsT0FBTztRQUNYLElBQUlDO1FBQ0osSUFBSUM7UUFDSixJQUFJQyxNQUFNQyxPQUFPLENBQUNOLE1BQU1LLE1BQU1DLE9BQU8sQ0FBQ0wsSUFBSTtZQUN0Q0UsU0FBU0gsRUFBRUcsTUFBTTtZQUNqQixJQUFJQSxXQUFXRixFQUFFRSxNQUFNLEVBQ25CLE9BQU87WUFDWCxJQUFLQyxJQUFJRCxRQUFRQyxRQUFRLEdBQ3JCLElBQUksQ0FBQ0wsVUFBVUMsQ0FBQyxDQUFDSSxFQUFFLEVBQUVILENBQUMsQ0FBQ0csRUFBRSxHQUNyQixPQUFPO1lBQ2YsT0FBTztRQUNYO1FBQ0EsSUFBSUosRUFBRU8sT0FBTyxLQUFLQyxPQUFPQyxTQUFTLENBQUNGLE9BQU8sRUFDdEMsT0FBT1AsRUFBRU8sT0FBTyxPQUFPTixFQUFFTSxPQUFPO1FBQ3BDLElBQUlQLEVBQUVVLFFBQVEsS0FBS0YsT0FBT0MsU0FBUyxDQUFDQyxRQUFRLEVBQ3hDLE9BQU9WLEVBQUVVLFFBQVEsT0FBT1QsRUFBRVMsUUFBUTtRQUN0QyxNQUFNQyxPQUFPSCxPQUFPRyxJQUFJLENBQUNYO1FBQ3pCRyxTQUFTUSxLQUFLUixNQUFNO1FBQ3BCLElBQUlBLFdBQVdLLE9BQU9HLElBQUksQ0FBQ1YsR0FBR0UsTUFBTSxFQUNoQyxPQUFPO1FBQ1gsSUFBS0MsSUFBSUQsUUFBUUMsUUFBUSxHQUNyQixJQUFJLENBQUNJLE9BQU9DLFNBQVMsQ0FBQ0csY0FBYyxDQUFDQyxJQUFJLENBQUNaLEdBQUdVLElBQUksQ0FBQ1AsRUFBRSxHQUNoRCxPQUFPO1FBQ2YsSUFBS0EsSUFBSUQsUUFBUUMsUUFBUSxHQUFJO1lBQ3pCLE1BQU1VLE1BQU1ILElBQUksQ0FBQ1AsRUFBRTtZQUNuQixJQUFJVSxPQUFPLENBQUNmLFVBQVVDLENBQUMsQ0FBQ2MsSUFBSSxFQUFFYixDQUFDLENBQUNhLElBQUksR0FDaEMsT0FBTztRQUNmO1FBQ0EsT0FBTztJQUNYO0lBQ0Esb0NBQW9DO0lBQ3BDLDREQUE0RDtJQUM1RCxPQUFPZCxNQUFNQSxLQUFLQyxNQUFNQTtBQUM1QixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS91dGlscy9kZWVwRXF1YWwuanM/NjA5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogRm9ya2VkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2Vwb2JlcmV6a2luL2Zhc3QtZGVlcC1lcXVhbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlZXBFcXVhbChhLCBiKSB7XG4gICAgaWYgKGEgPT09IGIpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGlmIChhICYmIGIgJiYgdHlwZW9mIGEgPT09ICdvYmplY3QnICYmIHR5cGVvZiBiID09PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAoYS5jb25zdHJ1Y3RvciAhPT0gYi5jb25zdHJ1Y3RvcilcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgbGV0IGxlbmd0aDtcbiAgICAgICAgbGV0IGk7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGEpICYmIEFycmF5LmlzQXJyYXkoYikpIHtcbiAgICAgICAgICAgIGxlbmd0aCA9IGEubGVuZ3RoO1xuICAgICAgICAgICAgaWYgKGxlbmd0aCAhPT0gYi5sZW5ndGgpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgICAgICAgICAgIGlmICghZGVlcEVxdWFsKGFbaV0sIGJbaV0pKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYS52YWx1ZU9mICE9PSBPYmplY3QucHJvdG90eXBlLnZhbHVlT2YpXG4gICAgICAgICAgICByZXR1cm4gYS52YWx1ZU9mKCkgPT09IGIudmFsdWVPZigpO1xuICAgICAgICBpZiAoYS50b1N0cmluZyAhPT0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZylcbiAgICAgICAgICAgIHJldHVybiBhLnRvU3RyaW5nKCkgPT09IGIudG9TdHJpbmcoKTtcbiAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGEpO1xuICAgICAgICBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgICAgICAgaWYgKGxlbmd0aCAhPT0gT2JqZWN0LmtleXMoYikubGVuZ3RoKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICBmb3IgKGkgPSBsZW5ndGg7IGktLSAhPT0gMDspXG4gICAgICAgICAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBrZXlzW2ldKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOykge1xuICAgICAgICAgICAgY29uc3Qga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgIGlmIChrZXkgJiYgIWRlZXBFcXVhbChhW2tleV0sIGJba2V5XSkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICAvLyB0cnVlIGlmIGJvdGggTmFOLCBmYWxzZSBvdGhlcndpc2VcbiAgICAvLyBiaW9tZS1pZ25vcmUgbGludC9zdXNwaWNpb3VzL25vU2VsZkNvbXBhcmU6IDxleHBsYW5hdGlvbj5cbiAgICByZXR1cm4gYSAhPT0gYSAmJiBiICE9PSBiO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVlcEVxdWFsLmpzLm1hcCJdLCJuYW1lcyI6WyJkZWVwRXF1YWwiLCJhIiwiYiIsImNvbnN0cnVjdG9yIiwibGVuZ3RoIiwiaSIsIkFycmF5IiwiaXNBcnJheSIsInZhbHVlT2YiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImtleXMiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deserialize.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/deserialize.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserialize: () => (/* binding */ deserialize)\n/* harmony export */ });\nfunction deserialize(value, reviver) {\n    return JSON.parse(value, (key, value_)=>{\n        let value = value_;\n        if (value?.__type === \"bigint\") value = BigInt(value.value);\n        if (value?.__type === \"Map\") value = new Map(value.value);\n        return reviver?.(key, value) ?? value;\n    });\n} //# sourceMappingURL=deserialize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZGVzZXJpYWxpemUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLFlBQVlDLEtBQUssRUFBRUMsT0FBTztJQUN0QyxPQUFPQyxLQUFLQyxLQUFLLENBQUNILE9BQU8sQ0FBQ0ksS0FBS0M7UUFDM0IsSUFBSUwsUUFBUUs7UUFDWixJQUFJTCxPQUFPTSxXQUFXLFVBQ2xCTixRQUFRTyxPQUFPUCxNQUFNQSxLQUFLO1FBQzlCLElBQUlBLE9BQU9NLFdBQVcsT0FDbEJOLFFBQVEsSUFBSVEsSUFBSVIsTUFBTUEsS0FBSztRQUMvQixPQUFPQyxVQUFVRyxLQUFLSixVQUFVQTtJQUNwQztBQUNKLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3V0aWxzL2Rlc2VyaWFsaXplLmpzPzk2MWEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGRlc2VyaWFsaXplKHZhbHVlLCByZXZpdmVyKSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UodmFsdWUsIChrZXksIHZhbHVlXykgPT4ge1xuICAgICAgICBsZXQgdmFsdWUgPSB2YWx1ZV87XG4gICAgICAgIGlmICh2YWx1ZT8uX190eXBlID09PSAnYmlnaW50JylcbiAgICAgICAgICAgIHZhbHVlID0gQmlnSW50KHZhbHVlLnZhbHVlKTtcbiAgICAgICAgaWYgKHZhbHVlPy5fX3R5cGUgPT09ICdNYXAnKVxuICAgICAgICAgICAgdmFsdWUgPSBuZXcgTWFwKHZhbHVlLnZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHJldml2ZXI/LihrZXksIHZhbHVlKSA/PyB2YWx1ZTtcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlc2VyaWFsaXplLmpzLm1hcCJdLCJuYW1lcyI6WyJkZXNlcmlhbGl6ZSIsInZhbHVlIiwicmV2aXZlciIsIkpTT04iLCJwYXJzZSIsImtleSIsInZhbHVlXyIsIl9fdHlwZSIsIkJpZ0ludCIsIk1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deserialize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/getAction.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAction: () => (/* binding */ getAction)\n/* harmony export */ });\n/**\n * Retrieves and returns an action from the client (if exists), and falls\n * back to the tree-shakable action.\n *\n * Useful for extracting overridden actions from a client (ie. if a consumer\n * wants to override the `sendTransaction` implementation).\n */ function getAction(client, actionFn, // Some minifiers drop `Function.prototype.name`, or replace it with short letters,\n// meaning that `actionFn.name` will not always work. For that case, the consumer\n// needs to pass the name explicitly.\nname) {\n    const action_implicit = client[actionFn.name];\n    if (typeof action_implicit === \"function\") return action_implicit;\n    const action_explicit = client[name];\n    if (typeof action_explicit === \"function\") return action_explicit;\n    return (params)=>actionFn(client, params);\n} //# sourceMappingURL=getAction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZ2V0QWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FDTSxTQUFTQSxVQUFVQyxNQUFNLEVBQUVDLFFBQVEsRUFDMUMsbUZBQW1GO0FBQ25GLGlGQUFpRjtBQUNqRixxQ0FBcUM7QUFDckNDLElBQUk7SUFDQSxNQUFNQyxrQkFBa0JILE1BQU0sQ0FBQ0MsU0FBU0MsSUFBSSxDQUFDO0lBQzdDLElBQUksT0FBT0Msb0JBQW9CLFlBQzNCLE9BQU9BO0lBQ1gsTUFBTUMsa0JBQWtCSixNQUFNLENBQUNFLEtBQUs7SUFDcEMsSUFBSSxPQUFPRSxvQkFBb0IsWUFDM0IsT0FBT0E7SUFDWCxPQUFPLENBQUNDLFNBQVdKLFNBQVNELFFBQVFLO0FBQ3hDLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3V0aWxzL2dldEFjdGlvbi5qcz9iODFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0cmlldmVzIGFuZCByZXR1cm5zIGFuIGFjdGlvbiBmcm9tIHRoZSBjbGllbnQgKGlmIGV4aXN0cyksIGFuZCBmYWxsc1xuICogYmFjayB0byB0aGUgdHJlZS1zaGFrYWJsZSBhY3Rpb24uXG4gKlxuICogVXNlZnVsIGZvciBleHRyYWN0aW5nIG92ZXJyaWRkZW4gYWN0aW9ucyBmcm9tIGEgY2xpZW50IChpZS4gaWYgYSBjb25zdW1lclxuICogd2FudHMgdG8gb3ZlcnJpZGUgdGhlIGBzZW5kVHJhbnNhY3Rpb25gIGltcGxlbWVudGF0aW9uKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFjdGlvbihjbGllbnQsIGFjdGlvbkZuLCBcbi8vIFNvbWUgbWluaWZpZXJzIGRyb3AgYEZ1bmN0aW9uLnByb3RvdHlwZS5uYW1lYCwgb3IgcmVwbGFjZSBpdCB3aXRoIHNob3J0IGxldHRlcnMsXG4vLyBtZWFuaW5nIHRoYXQgYGFjdGlvbkZuLm5hbWVgIHdpbGwgbm90IGFsd2F5cyB3b3JrLiBGb3IgdGhhdCBjYXNlLCB0aGUgY29uc3VtZXJcbi8vIG5lZWRzIHRvIHBhc3MgdGhlIG5hbWUgZXhwbGljaXRseS5cbm5hbWUpIHtcbiAgICBjb25zdCBhY3Rpb25faW1wbGljaXQgPSBjbGllbnRbYWN0aW9uRm4ubmFtZV07XG4gICAgaWYgKHR5cGVvZiBhY3Rpb25faW1wbGljaXQgPT09ICdmdW5jdGlvbicpXG4gICAgICAgIHJldHVybiBhY3Rpb25faW1wbGljaXQ7XG4gICAgY29uc3QgYWN0aW9uX2V4cGxpY2l0ID0gY2xpZW50W25hbWVdO1xuICAgIGlmICh0eXBlb2YgYWN0aW9uX2V4cGxpY2l0ID09PSAnZnVuY3Rpb24nKVxuICAgICAgICByZXR1cm4gYWN0aW9uX2V4cGxpY2l0O1xuICAgIHJldHVybiAocGFyYW1zKSA9PiBhY3Rpb25GbihjbGllbnQsIHBhcmFtcyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRBY3Rpb24uanMubWFwIl0sIm5hbWVzIjpbImdldEFjdGlvbiIsImNsaWVudCIsImFjdGlvbkZuIiwibmFtZSIsImFjdGlvbl9pbXBsaWNpdCIsImFjdGlvbl9leHBsaWNpdCIsInBhcmFtcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getUnit.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/getUnit.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUnit: () => (/* binding */ getUnit)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/constants/unit.js\");\n\nfunction getUnit(unit) {\n    if (typeof unit === \"number\") return unit;\n    if (unit === \"wei\") return 0;\n    return Math.abs(viem__WEBPACK_IMPORTED_MODULE_0__.weiUnits[unit]);\n} //# sourceMappingURL=getUnit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZ2V0VW5pdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnQztBQUN6QixTQUFTQyxRQUFRQyxJQUFJO0lBQ3hCLElBQUksT0FBT0EsU0FBUyxVQUNoQixPQUFPQTtJQUNYLElBQUlBLFNBQVMsT0FDVCxPQUFPO0lBQ1gsT0FBT0MsS0FBS0MsR0FBRyxDQUFDSiwwQ0FBUSxDQUFDRSxLQUFLO0FBQ2xDLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3V0aWxzL2dldFVuaXQuanM/YjMxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3ZWlVbml0cyB9IGZyb20gJ3ZpZW0nO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFVuaXQodW5pdCkge1xuICAgIGlmICh0eXBlb2YgdW5pdCA9PT0gJ251bWJlcicpXG4gICAgICAgIHJldHVybiB1bml0O1xuICAgIGlmICh1bml0ID09PSAnd2VpJylcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgcmV0dXJuIE1hdGguYWJzKHdlaVVuaXRzW3VuaXRdKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFVuaXQuanMubWFwIl0sIm5hbWVzIjpbIndlaVVuaXRzIiwiZ2V0VW5pdCIsInVuaXQiLCJNYXRoIiwiYWJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getUnit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getVersion.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/getVersion.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVersion: () => (/* binding */ getVersion)\n/* harmony export */ });\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/version.js\");\n\nconst getVersion = ()=>`@wagmi/core@${_version_js__WEBPACK_IMPORTED_MODULE_0__.version}`; //# sourceMappingURL=getVersion.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZ2V0VmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUNqQyxNQUFNQyxhQUFhLElBQU0sQ0FBQyxZQUFZLEVBQUVELGdEQUFPQSxDQUFDLENBQUMsQ0FBQyxDQUN6RCxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZ2V0VmVyc2lvbi5qcz9lZTU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuLi92ZXJzaW9uLmpzJztcbmV4cG9ydCBjb25zdCBnZXRWZXJzaW9uID0gKCkgPT4gYEB3YWdtaS9jb3JlQCR7dmVyc2lvbn1gO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0VmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOlsidmVyc2lvbiIsImdldFZlcnNpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getVersion.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/serialize.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/serialize.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serialize: () => (/* binding */ serialize)\n/* harmony export */ });\n/**\n * Get the reference key for the circular value\n *\n * @param keys the keys to build the reference key from\n * @param cutoff the maximum number of keys to include\n * @returns the reference key\n */ function getReferenceKey(keys, cutoff) {\n    return keys.slice(0, cutoff).join(\".\") || \".\";\n}\n/**\n * Faster `Array.prototype.indexOf` implementation build for slicing / splicing\n *\n * @param array the array to match the value in\n * @param value the value to match\n * @returns the matching index, or -1\n */ function getCutoff(array, value) {\n    const { length } = array;\n    for(let index = 0; index < length; ++index){\n        if (array[index] === value) {\n            return index + 1;\n        }\n    }\n    return 0;\n}\n/**\n * Create a replacer method that handles circular values\n *\n * @param [replacer] a custom replacer to use for non-circular values\n * @param [circularReplacer] a custom replacer to use for circular methods\n * @returns the value to stringify\n */ function createReplacer(replacer, circularReplacer) {\n    const hasReplacer = typeof replacer === \"function\";\n    const hasCircularReplacer = typeof circularReplacer === \"function\";\n    const cache = [];\n    const keys = [];\n    return function replace(key, value) {\n        if (typeof value === \"object\") {\n            if (cache.length) {\n                const thisCutoff = getCutoff(cache, this);\n                if (thisCutoff === 0) {\n                    cache[cache.length] = this;\n                } else {\n                    cache.splice(thisCutoff);\n                    keys.splice(thisCutoff);\n                }\n                keys[keys.length] = key;\n                const valueCutoff = getCutoff(cache, value);\n                if (valueCutoff !== 0) {\n                    return hasCircularReplacer ? circularReplacer.call(this, key, value, getReferenceKey(keys, valueCutoff)) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n                }\n            } else {\n                cache[0] = value;\n                keys[0] = key;\n            }\n        }\n        return hasReplacer ? replacer.call(this, key, value) : value;\n    };\n}\n/**\n * Stringifier that handles circular values\n *\n * Forked from https://github.com/planttheidea/fast-stringify\n *\n * @param value to stringify\n * @param [replacer] a custom replacer function for handling standard values\n * @param [indent] the number of spaces to indent the output by\n * @param [circularReplacer] a custom replacer function for handling circular values\n * @returns the stringified output\n */ function serialize(value, replacer, indent, circularReplacer) {\n    return JSON.stringify(value, createReplacer((key, value_)=>{\n        let value = value_;\n        if (typeof value === \"bigint\") value = {\n            __type: \"bigint\",\n            value: value_.toString()\n        };\n        if (value instanceof Map) value = {\n            __type: \"Map\",\n            value: Array.from(value_.entries())\n        };\n        return replacer?.(key, value) ?? value;\n    }, circularReplacer), indent ?? undefined);\n} //# sourceMappingURL=serialize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvc2VyaWFsaXplLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FDRCxTQUFTQSxnQkFBZ0JDLElBQUksRUFBRUMsTUFBTTtJQUNqQyxPQUFPRCxLQUFLRSxLQUFLLENBQUMsR0FBR0QsUUFBUUUsSUFBSSxDQUFDLFFBQVE7QUFDOUM7QUFDQTs7Ozs7O0NBTUMsR0FDRCxTQUFTQyxVQUFVQyxLQUFLLEVBQUVDLEtBQUs7SUFDM0IsTUFBTSxFQUFFQyxNQUFNLEVBQUUsR0FBR0Y7SUFDbkIsSUFBSyxJQUFJRyxRQUFRLEdBQUdBLFFBQVFELFFBQVEsRUFBRUMsTUFBTztRQUN6QyxJQUFJSCxLQUFLLENBQUNHLE1BQU0sS0FBS0YsT0FBTztZQUN4QixPQUFPRSxRQUFRO1FBQ25CO0lBQ0o7SUFDQSxPQUFPO0FBQ1g7QUFDQTs7Ozs7O0NBTUMsR0FDRCxTQUFTQyxlQUFlQyxRQUFRLEVBQUVDLGdCQUFnQjtJQUM5QyxNQUFNQyxjQUFjLE9BQU9GLGFBQWE7SUFDeEMsTUFBTUcsc0JBQXNCLE9BQU9GLHFCQUFxQjtJQUN4RCxNQUFNRyxRQUFRLEVBQUU7SUFDaEIsTUFBTWQsT0FBTyxFQUFFO0lBQ2YsT0FBTyxTQUFTZSxRQUFRQyxHQUFHLEVBQUVWLEtBQUs7UUFDOUIsSUFBSSxPQUFPQSxVQUFVLFVBQVU7WUFDM0IsSUFBSVEsTUFBTVAsTUFBTSxFQUFFO2dCQUNkLE1BQU1VLGFBQWFiLFVBQVVVLE9BQU8sSUFBSTtnQkFDeEMsSUFBSUcsZUFBZSxHQUFHO29CQUNsQkgsS0FBSyxDQUFDQSxNQUFNUCxNQUFNLENBQUMsR0FBRyxJQUFJO2dCQUM5QixPQUNLO29CQUNETyxNQUFNSSxNQUFNLENBQUNEO29CQUNiakIsS0FBS2tCLE1BQU0sQ0FBQ0Q7Z0JBQ2hCO2dCQUNBakIsSUFBSSxDQUFDQSxLQUFLTyxNQUFNLENBQUMsR0FBR1M7Z0JBQ3BCLE1BQU1HLGNBQWNmLFVBQVVVLE9BQU9SO2dCQUNyQyxJQUFJYSxnQkFBZ0IsR0FBRztvQkFDbkIsT0FBT04sc0JBQ0RGLGlCQUFpQlMsSUFBSSxDQUFDLElBQUksRUFBRUosS0FBS1YsT0FBT1AsZ0JBQWdCQyxNQUFNbUIsZ0JBQzlELENBQUMsS0FBSyxFQUFFcEIsZ0JBQWdCQyxNQUFNbUIsYUFBYSxDQUFDLENBQUM7Z0JBQ3ZEO1lBQ0osT0FDSztnQkFDREwsS0FBSyxDQUFDLEVBQUUsR0FBR1I7Z0JBQ1hOLElBQUksQ0FBQyxFQUFFLEdBQUdnQjtZQUNkO1FBQ0o7UUFDQSxPQUFPSixjQUFjRixTQUFTVSxJQUFJLENBQUMsSUFBSSxFQUFFSixLQUFLVixTQUFTQTtJQUMzRDtBQUNKO0FBQ0E7Ozs7Ozs7Ozs7Q0FVQyxHQUNNLFNBQVNlLFVBQVVmLEtBQUssRUFBRUksUUFBUSxFQUFFWSxNQUFNLEVBQUVYLGdCQUFnQjtJQUMvRCxPQUFPWSxLQUFLQyxTQUFTLENBQUNsQixPQUFPRyxlQUFlLENBQUNPLEtBQUtTO1FBQzlDLElBQUluQixRQUFRbUI7UUFDWixJQUFJLE9BQU9uQixVQUFVLFVBQ2pCQSxRQUFRO1lBQUVvQixRQUFRO1lBQVVwQixPQUFPbUIsT0FBT0UsUUFBUTtRQUFHO1FBQ3pELElBQUlyQixpQkFBaUJzQixLQUNqQnRCLFFBQVE7WUFBRW9CLFFBQVE7WUFBT3BCLE9BQU91QixNQUFNQyxJQUFJLENBQUNMLE9BQU9NLE9BQU87UUFBSTtRQUNqRSxPQUFPckIsV0FBV00sS0FBS1YsVUFBVUE7SUFDckMsR0FBR0ssbUJBQW1CVyxVQUFVVTtBQUNwQyxFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS91dGlscy9zZXJpYWxpemUuanM/ZjJhMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdldCB0aGUgcmVmZXJlbmNlIGtleSBmb3IgdGhlIGNpcmN1bGFyIHZhbHVlXG4gKlxuICogQHBhcmFtIGtleXMgdGhlIGtleXMgdG8gYnVpbGQgdGhlIHJlZmVyZW5jZSBrZXkgZnJvbVxuICogQHBhcmFtIGN1dG9mZiB0aGUgbWF4aW11bSBudW1iZXIgb2Yga2V5cyB0byBpbmNsdWRlXG4gKiBAcmV0dXJucyB0aGUgcmVmZXJlbmNlIGtleVxuICovXG5mdW5jdGlvbiBnZXRSZWZlcmVuY2VLZXkoa2V5cywgY3V0b2ZmKSB7XG4gICAgcmV0dXJuIGtleXMuc2xpY2UoMCwgY3V0b2ZmKS5qb2luKCcuJykgfHwgJy4nO1xufVxuLyoqXG4gKiBGYXN0ZXIgYEFycmF5LnByb3RvdHlwZS5pbmRleE9mYCBpbXBsZW1lbnRhdGlvbiBidWlsZCBmb3Igc2xpY2luZyAvIHNwbGljaW5nXG4gKlxuICogQHBhcmFtIGFycmF5IHRoZSBhcnJheSB0byBtYXRjaCB0aGUgdmFsdWUgaW5cbiAqIEBwYXJhbSB2YWx1ZSB0aGUgdmFsdWUgdG8gbWF0Y2hcbiAqIEByZXR1cm5zIHRoZSBtYXRjaGluZyBpbmRleCwgb3IgLTFcbiAqL1xuZnVuY3Rpb24gZ2V0Q3V0b2ZmKGFycmF5LCB2YWx1ZSkge1xuICAgIGNvbnN0IHsgbGVuZ3RoIH0gPSBhcnJheTtcbiAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyArK2luZGV4KSB7XG4gICAgICAgIGlmIChhcnJheVtpbmRleF0gPT09IHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5kZXggKyAxO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiAwO1xufVxuLyoqXG4gKiBDcmVhdGUgYSByZXBsYWNlciBtZXRob2QgdGhhdCBoYW5kbGVzIGNpcmN1bGFyIHZhbHVlc1xuICpcbiAqIEBwYXJhbSBbcmVwbGFjZXJdIGEgY3VzdG9tIHJlcGxhY2VyIHRvIHVzZSBmb3Igbm9uLWNpcmN1bGFyIHZhbHVlc1xuICogQHBhcmFtIFtjaXJjdWxhclJlcGxhY2VyXSBhIGN1c3RvbSByZXBsYWNlciB0byB1c2UgZm9yIGNpcmN1bGFyIG1ldGhvZHNcbiAqIEByZXR1cm5zIHRoZSB2YWx1ZSB0byBzdHJpbmdpZnlcbiAqL1xuZnVuY3Rpb24gY3JlYXRlUmVwbGFjZXIocmVwbGFjZXIsIGNpcmN1bGFyUmVwbGFjZXIpIHtcbiAgICBjb25zdCBoYXNSZXBsYWNlciA9IHR5cGVvZiByZXBsYWNlciA9PT0gJ2Z1bmN0aW9uJztcbiAgICBjb25zdCBoYXNDaXJjdWxhclJlcGxhY2VyID0gdHlwZW9mIGNpcmN1bGFyUmVwbGFjZXIgPT09ICdmdW5jdGlvbic7XG4gICAgY29uc3QgY2FjaGUgPSBbXTtcbiAgICBjb25zdCBrZXlzID0gW107XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2Uoa2V5LCB2YWx1ZSkge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgaWYgKGNhY2hlLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRoaXNDdXRvZmYgPSBnZXRDdXRvZmYoY2FjaGUsIHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzQ3V0b2ZmID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhY2hlW2NhY2hlLmxlbmd0aF0gPSB0aGlzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGUuc3BsaWNlKHRoaXNDdXRvZmYpO1xuICAgICAgICAgICAgICAgICAgICBrZXlzLnNwbGljZSh0aGlzQ3V0b2ZmKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAga2V5c1trZXlzLmxlbmd0aF0gPSBrZXk7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWVDdXRvZmYgPSBnZXRDdXRvZmYoY2FjaGUsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICBpZiAodmFsdWVDdXRvZmYgIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGhhc0NpcmN1bGFyUmVwbGFjZXJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gY2lyY3VsYXJSZXBsYWNlci5jYWxsKHRoaXMsIGtleSwgdmFsdWUsIGdldFJlZmVyZW5jZUtleShrZXlzLCB2YWx1ZUN1dG9mZikpXG4gICAgICAgICAgICAgICAgICAgICAgICA6IGBbcmVmPSR7Z2V0UmVmZXJlbmNlS2V5KGtleXMsIHZhbHVlQ3V0b2ZmKX1dYDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjYWNoZVswXSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIGtleXNbMF0gPSBrZXk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhhc1JlcGxhY2VyID8gcmVwbGFjZXIuY2FsbCh0aGlzLCBrZXksIHZhbHVlKSA6IHZhbHVlO1xuICAgIH07XG59XG4vKipcbiAqIFN0cmluZ2lmaWVyIHRoYXQgaGFuZGxlcyBjaXJjdWxhciB2YWx1ZXNcbiAqXG4gKiBGb3JrZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vcGxhbnR0aGVpZGVhL2Zhc3Qtc3RyaW5naWZ5XG4gKlxuICogQHBhcmFtIHZhbHVlIHRvIHN0cmluZ2lmeVxuICogQHBhcmFtIFtyZXBsYWNlcl0gYSBjdXN0b20gcmVwbGFjZXIgZnVuY3Rpb24gZm9yIGhhbmRsaW5nIHN0YW5kYXJkIHZhbHVlc1xuICogQHBhcmFtIFtpbmRlbnRdIHRoZSBudW1iZXIgb2Ygc3BhY2VzIHRvIGluZGVudCB0aGUgb3V0cHV0IGJ5XG4gKiBAcGFyYW0gW2NpcmN1bGFyUmVwbGFjZXJdIGEgY3VzdG9tIHJlcGxhY2VyIGZ1bmN0aW9uIGZvciBoYW5kbGluZyBjaXJjdWxhciB2YWx1ZXNcbiAqIEByZXR1cm5zIHRoZSBzdHJpbmdpZmllZCBvdXRwdXRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZSh2YWx1ZSwgcmVwbGFjZXIsIGluZGVudCwgY2lyY3VsYXJSZXBsYWNlcikge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2YWx1ZSwgY3JlYXRlUmVwbGFjZXIoKGtleSwgdmFsdWVfKSA9PiB7XG4gICAgICAgIGxldCB2YWx1ZSA9IHZhbHVlXztcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2JpZ2ludCcpXG4gICAgICAgICAgICB2YWx1ZSA9IHsgX190eXBlOiAnYmlnaW50JywgdmFsdWU6IHZhbHVlXy50b1N0cmluZygpIH07XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIE1hcClcbiAgICAgICAgICAgIHZhbHVlID0geyBfX3R5cGU6ICdNYXAnLCB2YWx1ZTogQXJyYXkuZnJvbSh2YWx1ZV8uZW50cmllcygpKSB9O1xuICAgICAgICByZXR1cm4gcmVwbGFjZXI/LihrZXksIHZhbHVlKSA/PyB2YWx1ZTtcbiAgICB9LCBjaXJjdWxhclJlcGxhY2VyKSwgaW5kZW50ID8/IHVuZGVmaW5lZCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJpYWxpemUuanMubWFwIl0sIm5hbWVzIjpbImdldFJlZmVyZW5jZUtleSIsImtleXMiLCJjdXRvZmYiLCJzbGljZSIsImpvaW4iLCJnZXRDdXRvZmYiLCJhcnJheSIsInZhbHVlIiwibGVuZ3RoIiwiaW5kZXgiLCJjcmVhdGVSZXBsYWNlciIsInJlcGxhY2VyIiwiY2lyY3VsYXJSZXBsYWNlciIsImhhc1JlcGxhY2VyIiwiaGFzQ2lyY3VsYXJSZXBsYWNlciIsImNhY2hlIiwicmVwbGFjZSIsImtleSIsInRoaXNDdXRvZmYiLCJzcGxpY2UiLCJ2YWx1ZUN1dG9mZiIsImNhbGwiLCJzZXJpYWxpemUiLCJpbmRlbnQiLCJKU09OIiwic3RyaW5naWZ5IiwidmFsdWVfIiwiX190eXBlIiwidG9TdHJpbmciLCJNYXAiLCJBcnJheSIsImZyb20iLCJlbnRyaWVzIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/serialize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/uid.js":
/*!********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/uid.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uid: () => (/* binding */ uid)\n/* harmony export */ });\nconst size = 256;\nlet index = size;\nlet buffer;\nfunction uid(length = 11) {\n    if (!buffer || index + length > size * 2) {\n        buffer = \"\";\n        index = 0;\n        for(let i = 0; i < size; i++){\n            buffer += (256 + Math.random() * 256 | 0).toString(16).substring(1);\n        }\n    }\n    return buffer.substring(index, index++ + length);\n} //# sourceMappingURL=uid.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvdWlkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxPQUFPO0FBQ2IsSUFBSUMsUUFBUUQ7QUFDWixJQUFJRTtBQUNHLFNBQVNDLElBQUlDLFNBQVMsRUFBRTtJQUMzQixJQUFJLENBQUNGLFVBQVVELFFBQVFHLFNBQVNKLE9BQU8sR0FBRztRQUN0Q0UsU0FBUztRQUNURCxRQUFRO1FBQ1IsSUFBSyxJQUFJSSxJQUFJLEdBQUdBLElBQUlMLE1BQU1LLElBQUs7WUFDM0JILFVBQVUsQ0FBQyxNQUFPSSxLQUFLQyxNQUFNLEtBQUssTUFBTyxHQUFHQyxRQUFRLENBQUMsSUFBSUMsU0FBUyxDQUFDO1FBQ3ZFO0lBQ0o7SUFDQSxPQUFPUCxPQUFPTyxTQUFTLENBQUNSLE9BQU9BLFVBQVVHO0FBQzdDLEVBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3V0aWxzL3VpZC5qcz9hMzllIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNpemUgPSAyNTY7XG5sZXQgaW5kZXggPSBzaXplO1xubGV0IGJ1ZmZlcjtcbmV4cG9ydCBmdW5jdGlvbiB1aWQobGVuZ3RoID0gMTEpIHtcbiAgICBpZiAoIWJ1ZmZlciB8fCBpbmRleCArIGxlbmd0aCA+IHNpemUgKiAyKSB7XG4gICAgICAgIGJ1ZmZlciA9ICcnO1xuICAgICAgICBpbmRleCA9IDA7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7XG4gICAgICAgICAgICBidWZmZXIgKz0gKCgyNTYgKyBNYXRoLnJhbmRvbSgpICogMjU2KSB8IDApLnRvU3RyaW5nKDE2KS5zdWJzdHJpbmcoMSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGJ1ZmZlci5zdWJzdHJpbmcoaW5kZXgsIGluZGV4KysgKyBsZW5ndGgpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWlkLmpzLm1hcCJdLCJuYW1lcyI6WyJzaXplIiwiaW5kZXgiLCJidWZmZXIiLCJ1aWQiLCJsZW5ndGgiLCJpIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/uid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/version.js":
/*!******************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/version.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"2.11.7\"; //# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsVUFBVSxTQUFTLENBQ2hDLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS92ZXJzaW9uLmpzPzhhOTQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHZlcnNpb24gPSAnMi4xMS43Jztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbInZlcnNpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/node_modules/zustand/esm/middleware.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@wagmi/core/node_modules/zustand/esm/middleware.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   combine: () => (/* binding */ combine),\n/* harmony export */   createJSONStorage: () => (/* binding */ createJSONStorage),\n/* harmony export */   devtools: () => (/* binding */ devtools),\n/* harmony export */   persist: () => (/* binding */ persist),\n/* harmony export */   redux: () => (/* binding */ redux),\n/* harmony export */   subscribeWithSelector: () => (/* binding */ subscribeWithSelector)\n/* harmony export */ });\nconst reduxImpl = (reducer, initial)=>(set, _get, api)=>{\n        api.dispatch = (action)=>{\n            set((state)=>reducer(state, action), false, action);\n            return action;\n        };\n        api.dispatchFromDevtools = true;\n        return {\n            dispatch: (...a)=>api.dispatch(...a),\n            ...initial\n        };\n    };\nconst redux = reduxImpl;\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name)=>{\n    const api = trackedConnections.get(name);\n    if (!api) return {};\n    return Object.fromEntries(Object.entries(api.stores).map(([key, api2])=>[\n            key,\n            api2.getState()\n        ]));\n};\nconst extractConnectionInformation = (store, extensionConnector, options)=>{\n    if (store === void 0) {\n        return {\n            type: \"untracked\",\n            connection: extensionConnector.connect(options)\n        };\n    }\n    const existingConnection = trackedConnections.get(options.name);\n    if (existingConnection) {\n        return {\n            type: \"tracked\",\n            store,\n            ...existingConnection\n        };\n    }\n    const newConnection = {\n        connection: extensionConnector.connect(options),\n        stores: {}\n    };\n    trackedConnections.set(options.name, newConnection);\n    return {\n        type: \"tracked\",\n        store,\n        ...newConnection\n    };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {})=>(set, get, api)=>{\n        const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n        let extensionConnector;\n        try {\n            extensionConnector = (enabled != null ? enabled : ( false ? 0 : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n        } catch (e) {}\n        if (!extensionConnector) {\n            if (( false ? 0 : void 0) !== \"production\" && enabled) {\n                console.warn(\"[zustand devtools middleware] Please install/enable Redux devtools extension\");\n            }\n            return fn(set, get, api);\n        }\n        const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n        let isRecording = true;\n        api.setState = (state, replace, nameOrAction)=>{\n            const r = set(state, replace);\n            if (!isRecording) return r;\n            const action = nameOrAction === void 0 ? {\n                type: anonymousActionType || \"anonymous\"\n            } : typeof nameOrAction === \"string\" ? {\n                type: nameOrAction\n            } : nameOrAction;\n            if (store === void 0) {\n                connection == null ? void 0 : connection.send(action, get());\n                return r;\n            }\n            connection == null ? void 0 : connection.send({\n                ...action,\n                type: `${store}/${action.type}`\n            }, {\n                ...getTrackedConnectionState(options.name),\n                [store]: api.getState()\n            });\n            return r;\n        };\n        const setStateFromDevtools = (...a)=>{\n            const originalIsRecording = isRecording;\n            isRecording = false;\n            set(...a);\n            isRecording = originalIsRecording;\n        };\n        const initialState = fn(api.setState, get, api);\n        if (connectionInformation.type === \"untracked\") {\n            connection == null ? void 0 : connection.init(initialState);\n        } else {\n            connectionInformation.stores[connectionInformation.store] = api;\n            connection == null ? void 0 : connection.init(Object.fromEntries(Object.entries(connectionInformation.stores).map(([key, store2])=>[\n                    key,\n                    key === connectionInformation.store ? initialState : store2.getState()\n                ])));\n        }\n        if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n            let didWarnAboutReservedActionType = false;\n            const originalDispatch = api.dispatch;\n            api.dispatch = (...a)=>{\n                if (( false ? 0 : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n                    console.warn('[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.');\n                    didWarnAboutReservedActionType = true;\n                }\n                originalDispatch(...a);\n            };\n        }\n        connection.subscribe((message)=>{\n            var _a;\n            switch(message.type){\n                case \"ACTION\":\n                    if (typeof message.payload !== \"string\") {\n                        console.error(\"[zustand devtools middleware] Unsupported action format\");\n                        return;\n                    }\n                    return parseJsonThen(message.payload, (action)=>{\n                        if (action.type === \"__setState\") {\n                            if (store === void 0) {\n                                setStateFromDevtools(action.state);\n                                return;\n                            }\n                            if (Object.keys(action.state).length !== 1) {\n                                console.error(`\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `);\n                            }\n                            const stateFromDevtools = action.state[store];\n                            if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                                return;\n                            }\n                            if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                                setStateFromDevtools(stateFromDevtools);\n                            }\n                            return;\n                        }\n                        if (!api.dispatchFromDevtools) return;\n                        if (typeof api.dispatch !== \"function\") return;\n                        api.dispatch(action);\n                    });\n                case \"DISPATCH\":\n                    switch(message.payload.type){\n                        case \"RESET\":\n                            setStateFromDevtools(initialState);\n                            if (store === void 0) {\n                                return connection == null ? void 0 : connection.init(api.getState());\n                            }\n                            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n                        case \"COMMIT\":\n                            if (store === void 0) {\n                                connection == null ? void 0 : connection.init(api.getState());\n                                return;\n                            }\n                            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n                        case \"ROLLBACK\":\n                            return parseJsonThen(message.state, (state)=>{\n                                if (store === void 0) {\n                                    setStateFromDevtools(state);\n                                    connection == null ? void 0 : connection.init(api.getState());\n                                    return;\n                                }\n                                setStateFromDevtools(state[store]);\n                                connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n                            });\n                        case \"JUMP_TO_STATE\":\n                        case \"JUMP_TO_ACTION\":\n                            return parseJsonThen(message.state, (state)=>{\n                                if (store === void 0) {\n                                    setStateFromDevtools(state);\n                                    return;\n                                }\n                                if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                                    setStateFromDevtools(state[store]);\n                                }\n                            });\n                        case \"IMPORT_STATE\":\n                            {\n                                const { nextLiftedState } = message.payload;\n                                const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n                                if (!lastComputedState) return;\n                                if (store === void 0) {\n                                    setStateFromDevtools(lastComputedState);\n                                } else {\n                                    setStateFromDevtools(lastComputedState[store]);\n                                }\n                                connection == null ? void 0 : connection.send(null, // FIXME no-any\n                                nextLiftedState);\n                                return;\n                            }\n                        case \"PAUSE_RECORDING\":\n                            return isRecording = !isRecording;\n                    }\n                    return;\n            }\n        });\n        return initialState;\n    };\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f)=>{\n    let parsed;\n    try {\n        parsed = JSON.parse(stringified);\n    } catch (e) {\n        console.error(\"[zustand devtools middleware] Could not parse the received json\", e);\n    }\n    if (parsed !== void 0) f(parsed);\n};\nconst subscribeWithSelectorImpl = (fn)=>(set, get, api)=>{\n        const origSubscribe = api.subscribe;\n        api.subscribe = (selector, optListener, options)=>{\n            let listener = selector;\n            if (optListener) {\n                const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n                let currentSlice = selector(api.getState());\n                listener = (state)=>{\n                    const nextSlice = selector(state);\n                    if (!equalityFn(currentSlice, nextSlice)) {\n                        const previousSlice = currentSlice;\n                        optListener(currentSlice = nextSlice, previousSlice);\n                    }\n                };\n                if (options == null ? void 0 : options.fireImmediately) {\n                    optListener(currentSlice, currentSlice);\n                }\n            }\n            return origSubscribe(listener);\n        };\n        const initialState = fn(set, get, api);\n        return initialState;\n    };\nconst subscribeWithSelector = subscribeWithSelectorImpl;\nconst combine = (initialState, create)=>(...a)=>Object.assign({}, initialState, create(...a));\nfunction createJSONStorage(getStorage, options) {\n    let storage;\n    try {\n        storage = getStorage();\n    } catch (e) {\n        return;\n    }\n    const persistStorage = {\n        getItem: (name)=>{\n            var _a;\n            const parse = (str2)=>{\n                if (str2 === null) {\n                    return null;\n                }\n                return JSON.parse(str2, options == null ? void 0 : options.reviver);\n            };\n            const str = (_a = storage.getItem(name)) != null ? _a : null;\n            if (str instanceof Promise) {\n                return str.then(parse);\n            }\n            return parse(str);\n        },\n        setItem: (name, newValue)=>storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\n        removeItem: (name)=>storage.removeItem(name)\n    };\n    return persistStorage;\n}\nconst toThenable = (fn)=>(input)=>{\n        try {\n            const result = fn(input);\n            if (result instanceof Promise) {\n                return result;\n            }\n            return {\n                then (onFulfilled) {\n                    return toThenable(onFulfilled)(result);\n                },\n                catch (_onRejected) {\n                    return this;\n                }\n            };\n        } catch (e) {\n            return {\n                then (_onFulfilled) {\n                    return this;\n                },\n                catch (onRejected) {\n                    return toThenable(onRejected)(e);\n                }\n            };\n        }\n    };\nconst oldImpl = (config, baseOptions)=>(set, get, api)=>{\n        let options = {\n            getStorage: ()=>localStorage,\n            serialize: JSON.stringify,\n            deserialize: JSON.parse,\n            partialize: (state)=>state,\n            version: 0,\n            merge: (persistedState, currentState)=>({\n                    ...currentState,\n                    ...persistedState\n                }),\n            ...baseOptions\n        };\n        let hasHydrated = false;\n        const hydrationListeners = /* @__PURE__ */ new Set();\n        const finishHydrationListeners = /* @__PURE__ */ new Set();\n        let storage;\n        try {\n            storage = options.getStorage();\n        } catch (e) {}\n        if (!storage) {\n            return config((...args)=>{\n                console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`);\n                set(...args);\n            }, get, api);\n        }\n        const thenableSerialize = toThenable(options.serialize);\n        const setItem = ()=>{\n            const state = options.partialize({\n                ...get()\n            });\n            let errorInSync;\n            const thenable = thenableSerialize({\n                state,\n                version: options.version\n            }).then((serializedValue)=>storage.setItem(options.name, serializedValue)).catch((e)=>{\n                errorInSync = e;\n            });\n            if (errorInSync) {\n                throw errorInSync;\n            }\n            return thenable;\n        };\n        const savedSetState = api.setState;\n        api.setState = (state, replace)=>{\n            savedSetState(state, replace);\n            void setItem();\n        };\n        const configResult = config((...args)=>{\n            set(...args);\n            void setItem();\n        }, get, api);\n        let stateFromStorage;\n        const hydrate = ()=>{\n            var _a;\n            if (!storage) return;\n            hasHydrated = false;\n            hydrationListeners.forEach((cb)=>cb(get()));\n            const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n            return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue)=>{\n                if (storageValue) {\n                    return options.deserialize(storageValue);\n                }\n            }).then((deserializedStorageValue)=>{\n                if (deserializedStorageValue) {\n                    if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n                        if (options.migrate) {\n                            return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);\n                        }\n                        console.error(`State loaded from storage couldn't be migrated since no migrate function was provided`);\n                    } else {\n                        return deserializedStorageValue.state;\n                    }\n                }\n            }).then((migratedState)=>{\n                var _a2;\n                stateFromStorage = options.merge(migratedState, (_a2 = get()) != null ? _a2 : configResult);\n                set(stateFromStorage, true);\n                return setItem();\n            }).then(()=>{\n                postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n                hasHydrated = true;\n                finishHydrationListeners.forEach((cb)=>cb(stateFromStorage));\n            }).catch((e)=>{\n                postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n            });\n        };\n        api.persist = {\n            setOptions: (newOptions)=>{\n                options = {\n                    ...options,\n                    ...newOptions\n                };\n                if (newOptions.getStorage) {\n                    storage = newOptions.getStorage();\n                }\n            },\n            clearStorage: ()=>{\n                storage == null ? void 0 : storage.removeItem(options.name);\n            },\n            getOptions: ()=>options,\n            rehydrate: ()=>hydrate(),\n            hasHydrated: ()=>hasHydrated,\n            onHydrate: (cb)=>{\n                hydrationListeners.add(cb);\n                return ()=>{\n                    hydrationListeners.delete(cb);\n                };\n            },\n            onFinishHydration: (cb)=>{\n                finishHydrationListeners.add(cb);\n                return ()=>{\n                    finishHydrationListeners.delete(cb);\n                };\n            }\n        };\n        hydrate();\n        return stateFromStorage || configResult;\n    };\nconst newImpl = (config, baseOptions)=>(set, get, api)=>{\n        let options = {\n            storage: createJSONStorage(()=>localStorage),\n            partialize: (state)=>state,\n            version: 0,\n            merge: (persistedState, currentState)=>({\n                    ...currentState,\n                    ...persistedState\n                }),\n            ...baseOptions\n        };\n        let hasHydrated = false;\n        const hydrationListeners = /* @__PURE__ */ new Set();\n        const finishHydrationListeners = /* @__PURE__ */ new Set();\n        let storage = options.storage;\n        if (!storage) {\n            return config((...args)=>{\n                console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`);\n                set(...args);\n            }, get, api);\n        }\n        const setItem = ()=>{\n            const state = options.partialize({\n                ...get()\n            });\n            return storage.setItem(options.name, {\n                state,\n                version: options.version\n            });\n        };\n        const savedSetState = api.setState;\n        api.setState = (state, replace)=>{\n            savedSetState(state, replace);\n            void setItem();\n        };\n        const configResult = config((...args)=>{\n            set(...args);\n            void setItem();\n        }, get, api);\n        let stateFromStorage;\n        const hydrate = ()=>{\n            var _a, _b;\n            if (!storage) return;\n            hasHydrated = false;\n            hydrationListeners.forEach((cb)=>{\n                var _a2;\n                return cb((_a2 = get()) != null ? _a2 : configResult);\n            });\n            const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n            return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue)=>{\n                if (deserializedStorageValue) {\n                    if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n                        if (options.migrate) {\n                            return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);\n                        }\n                        console.error(`State loaded from storage couldn't be migrated since no migrate function was provided`);\n                    } else {\n                        return deserializedStorageValue.state;\n                    }\n                }\n            }).then((migratedState)=>{\n                var _a2;\n                stateFromStorage = options.merge(migratedState, (_a2 = get()) != null ? _a2 : configResult);\n                set(stateFromStorage, true);\n                return setItem();\n            }).then(()=>{\n                postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n                stateFromStorage = get();\n                hasHydrated = true;\n                finishHydrationListeners.forEach((cb)=>cb(stateFromStorage));\n            }).catch((e)=>{\n                postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n            });\n        };\n        api.persist = {\n            setOptions: (newOptions)=>{\n                options = {\n                    ...options,\n                    ...newOptions\n                };\n                if (newOptions.storage) {\n                    storage = newOptions.storage;\n                }\n            },\n            clearStorage: ()=>{\n                storage == null ? void 0 : storage.removeItem(options.name);\n            },\n            getOptions: ()=>options,\n            rehydrate: ()=>hydrate(),\n            hasHydrated: ()=>hasHydrated,\n            onHydrate: (cb)=>{\n                hydrationListeners.add(cb);\n                return ()=>{\n                    hydrationListeners.delete(cb);\n                };\n            },\n            onFinishHydration: (cb)=>{\n                finishHydrationListeners.add(cb);\n                return ()=>{\n                    finishHydrationListeners.delete(cb);\n                };\n            }\n        };\n        if (!options.skipHydration) {\n            hydrate();\n        }\n        return stateFromStorage || configResult;\n    };\nconst persistImpl = (config, baseOptions)=>{\n    if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n        if (( false ? 0 : void 0) !== \"production\") {\n            console.warn(\"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\");\n        }\n        return oldImpl(config, baseOptions);\n    }\n    return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/node_modules/zustand/esm/middleware.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/node_modules/zustand/esm/vanilla.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@wagmi/core/node_modules/zustand/esm/vanilla.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStore: () => (/* binding */ createStore),\n/* harmony export */   \"default\": () => (/* binding */ vanilla)\n/* harmony export */ });\nconst createStoreImpl = (createState)=>{\n    let state;\n    const listeners = /* @__PURE__ */ new Set();\n    const setState = (partial, replace)=>{\n        const nextState = typeof partial === \"function\" ? partial(state) : partial;\n        if (!Object.is(nextState, state)) {\n            const previousState = state;\n            state = (replace != null ? replace : typeof nextState !== \"object\") ? nextState : Object.assign({}, state, nextState);\n            listeners.forEach((listener)=>listener(state, previousState));\n        }\n    };\n    const getState = ()=>state;\n    const subscribe = (listener)=>{\n        listeners.add(listener);\n        return ()=>listeners.delete(listener);\n    };\n    const destroy = ()=>{\n        if (( false ? 0 : void 0) !== \"production\") {\n            console.warn(\"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\");\n        }\n        listeners.clear();\n    };\n    const api = {\n        setState,\n        getState,\n        subscribe,\n        destroy\n    };\n    state = createState(setState, getState, api);\n    return api;\n};\nconst createStore = (createState)=>createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState)=>{\n    if (( false ? 0 : void 0) !== \"production\") {\n        console.warn(\"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\");\n    }\n    return createStore(createState);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvbm9kZV9tb2R1bGVzL3p1c3RhbmQvZXNtL3ZhbmlsbGEubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsa0JBQWtCLENBQUNDO0lBQ3ZCLElBQUlDO0lBQ0osTUFBTUMsWUFBWSxhQUFhLEdBQUcsSUFBSUM7SUFDdEMsTUFBTUMsV0FBVyxDQUFDQyxTQUFTQztRQUN6QixNQUFNQyxZQUFZLE9BQU9GLFlBQVksYUFBYUEsUUFBUUosU0FBU0k7UUFDbkUsSUFBSSxDQUFDRyxPQUFPQyxFQUFFLENBQUNGLFdBQVdOLFFBQVE7WUFDaEMsTUFBTVMsZ0JBQWdCVDtZQUN0QkEsUUFBUSxDQUFDSyxXQUFXLE9BQU9BLFVBQVUsT0FBT0MsY0FBYyxRQUFPLElBQUtBLFlBQVlDLE9BQU9HLE1BQU0sQ0FBQyxDQUFDLEdBQUdWLE9BQU9NO1lBQzNHTCxVQUFVVSxPQUFPLENBQUMsQ0FBQ0MsV0FBYUEsU0FBU1osT0FBT1M7UUFDbEQ7SUFDRjtJQUNBLE1BQU1JLFdBQVcsSUFBTWI7SUFDdkIsTUFBTWMsWUFBWSxDQUFDRjtRQUNqQlgsVUFBVWMsR0FBRyxDQUFDSDtRQUNkLE9BQU8sSUFBTVgsVUFBVWUsTUFBTSxDQUFDSjtJQUNoQztJQUNBLE1BQU1LLFVBQVU7UUFDZCxJQUFJLENBQUMsTUFBZSxHQUFHLENBQW9CLEdBQUcsS0FBSyxPQUFPLGNBQWM7WUFDdEVHLFFBQVFDLElBQUksQ0FDVjtRQUVKO1FBQ0FwQixVQUFVcUIsS0FBSztJQUNqQjtJQUNBLE1BQU1DLE1BQU07UUFBRXBCO1FBQVVVO1FBQVVDO1FBQVdHO0lBQVE7SUFDckRqQixRQUFRRCxZQUFZSSxVQUFVVSxVQUFVVTtJQUN4QyxPQUFPQTtBQUNUO0FBQ0EsTUFBTUMsY0FBYyxDQUFDekIsY0FBZ0JBLGNBQWNELGdCQUFnQkMsZUFBZUQ7QUFDbEYsSUFBSTJCLFVBQVUsQ0FBQzFCO0lBQ2IsSUFBSSxDQUFDLE1BQWUsR0FBRyxDQUFvQixHQUFHLEtBQUssT0FBTyxjQUFjO1FBQ3RFcUIsUUFBUUMsSUFBSSxDQUNWO0lBRUo7SUFDQSxPQUFPRyxZQUFZekI7QUFDckI7QUFFMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvbm9kZV9tb2R1bGVzL3p1c3RhbmQvZXNtL3ZhbmlsbGEubWpzPzRiYTEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY3JlYXRlU3RvcmVJbXBsID0gKGNyZWF0ZVN0YXRlKSA9PiB7XG4gIGxldCBzdGF0ZTtcbiAgY29uc3QgbGlzdGVuZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbiAgY29uc3Qgc2V0U3RhdGUgPSAocGFydGlhbCwgcmVwbGFjZSkgPT4ge1xuICAgIGNvbnN0IG5leHRTdGF0ZSA9IHR5cGVvZiBwYXJ0aWFsID09PSBcImZ1bmN0aW9uXCIgPyBwYXJ0aWFsKHN0YXRlKSA6IHBhcnRpYWw7XG4gICAgaWYgKCFPYmplY3QuaXMobmV4dFN0YXRlLCBzdGF0ZSkpIHtcbiAgICAgIGNvbnN0IHByZXZpb3VzU3RhdGUgPSBzdGF0ZTtcbiAgICAgIHN0YXRlID0gKHJlcGxhY2UgIT0gbnVsbCA/IHJlcGxhY2UgOiB0eXBlb2YgbmV4dFN0YXRlICE9PSBcIm9iamVjdFwiKSA/IG5leHRTdGF0ZSA6IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCBuZXh0U3RhdGUpO1xuICAgICAgbGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiBsaXN0ZW5lcihzdGF0ZSwgcHJldmlvdXNTdGF0ZSkpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgZ2V0U3RhdGUgPSAoKSA9PiBzdGF0ZTtcbiAgY29uc3Qgc3Vic2NyaWJlID0gKGxpc3RlbmVyKSA9PiB7XG4gICAgbGlzdGVuZXJzLmFkZChsaXN0ZW5lcik7XG4gICAgcmV0dXJuICgpID0+IGxpc3RlbmVycy5kZWxldGUobGlzdGVuZXIpO1xuICB9O1xuICBjb25zdCBkZXN0cm95ID0gKCkgPT4ge1xuICAgIGlmICgoaW1wb3J0Lm1ldGEuZW52ID8gaW1wb3J0Lm1ldGEuZW52Lk1PREUgOiB2b2lkIDApICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICBcIltERVBSRUNBVEVEXSBUaGUgYGRlc3Ryb3lgIG1ldGhvZCB3aWxsIGJlIHVuc3VwcG9ydGVkIGluIGEgZnV0dXJlIHZlcnNpb24uIEluc3RlYWQgdXNlIHVuc3Vic2NyaWJlIGZ1bmN0aW9uIHJldHVybmVkIGJ5IHN1YnNjcmliZS4gRXZlcnl0aGluZyB3aWxsIGJlIGdhcmJhZ2UtY29sbGVjdGVkIGlmIHN0b3JlIGlzIGdhcmJhZ2UtY29sbGVjdGVkLlwiXG4gICAgICApO1xuICAgIH1cbiAgICBsaXN0ZW5lcnMuY2xlYXIoKTtcbiAgfTtcbiAgY29uc3QgYXBpID0geyBzZXRTdGF0ZSwgZ2V0U3RhdGUsIHN1YnNjcmliZSwgZGVzdHJveSB9O1xuICBzdGF0ZSA9IGNyZWF0ZVN0YXRlKHNldFN0YXRlLCBnZXRTdGF0ZSwgYXBpKTtcbiAgcmV0dXJuIGFwaTtcbn07XG5jb25zdCBjcmVhdGVTdG9yZSA9IChjcmVhdGVTdGF0ZSkgPT4gY3JlYXRlU3RhdGUgPyBjcmVhdGVTdG9yZUltcGwoY3JlYXRlU3RhdGUpIDogY3JlYXRlU3RvcmVJbXBsO1xudmFyIHZhbmlsbGEgPSAoY3JlYXRlU3RhdGUpID0+IHtcbiAgaWYgKChpbXBvcnQubWV0YS5lbnYgPyBpbXBvcnQubWV0YS5lbnYuTU9ERSA6IHZvaWQgMCkgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgXCJbREVQUkVDQVRFRF0gRGVmYXVsdCBleHBvcnQgaXMgZGVwcmVjYXRlZC4gSW5zdGVhZCB1c2UgaW1wb3J0IHsgY3JlYXRlU3RvcmUgfSBmcm9tICd6dXN0YW5kL3ZhbmlsbGEnLlwiXG4gICAgKTtcbiAgfVxuICByZXR1cm4gY3JlYXRlU3RvcmUoY3JlYXRlU3RhdGUpO1xufTtcblxuZXhwb3J0IHsgY3JlYXRlU3RvcmUsIHZhbmlsbGEgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbImNyZWF0ZVN0b3JlSW1wbCIsImNyZWF0ZVN0YXRlIiwic3RhdGUiLCJsaXN0ZW5lcnMiLCJTZXQiLCJzZXRTdGF0ZSIsInBhcnRpYWwiLCJyZXBsYWNlIiwibmV4dFN0YXRlIiwiT2JqZWN0IiwiaXMiLCJwcmV2aW91c1N0YXRlIiwiYXNzaWduIiwiZm9yRWFjaCIsImxpc3RlbmVyIiwiZ2V0U3RhdGUiLCJzdWJzY3JpYmUiLCJhZGQiLCJkZWxldGUiLCJkZXN0cm95IiwiZW52IiwiTU9ERSIsImNvbnNvbGUiLCJ3YXJuIiwiY2xlYXIiLCJhcGkiLCJjcmVhdGVTdG9yZSIsInZhbmlsbGEiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/node_modules/zustand/esm/vanilla.mjs\n");

/***/ })

};
;