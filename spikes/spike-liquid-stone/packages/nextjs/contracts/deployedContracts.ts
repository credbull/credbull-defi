/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    "SimpleUSDC#0": {
      address: "0x67d269191c92caf3cd7723f116c85e6e9bf55933",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "initialSupply",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "allowance",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "decimals",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "mint",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transfer",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ERC20InsufficientAllowance",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "allowance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InsufficientBalance",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidApprover",
          inputs: [
            {
              name: "approver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidReceiver",
          inputs: [
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSender",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSpender",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
      ],
      inheritedFunctions: {
        allowance: "contracts/OwnableToken.sol",
        approve: "contracts/OwnableToken.sol",
        balanceOf: "contracts/OwnableToken.sol",
        decimals: "contracts/OwnableToken.sol",
        mint: "contracts/OwnableToken.sol",
        name: "contracts/OwnableToken.sol",
        owner: "contracts/OwnableToken.sol",
        renounceOwnership: "contracts/OwnableToken.sol",
        symbol: "contracts/OwnableToken.sol",
        totalSupply: "contracts/OwnableToken.sol",
        transfer: "contracts/OwnableToken.sol",
        transferFrom: "contracts/OwnableToken.sol",
        transferOwnership: "contracts/OwnableToken.sol",
      },
    },
    "TripleRateYieldStrategy#0": {
      address: "0xe6e340d132b5f46d1e472debcd681b2abc16e57e",
      abi: [
        {
          type: "function",
          name: "calcPrice",
          inputs: [
            {
              name: "contextContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "numPeriodsElapsed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "price",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "calcYield",
          inputs: [
            {
              name: "contextContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "principal",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "fromPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "toPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "yield",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "error",
          name: "IYieldStrategy_InvalidContextAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "IYieldStrategy_InvalidPeriodRange",
          inputs: [
            {
              name: "from",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "to",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "MathOverflowedMulDiv",
          inputs: [],
        },
      ],
      inheritedFunctions: {
        calcPrice: "contracts/yield/strategy/AbstractYieldStrategy.sol",
        calcYield: "contracts/yield/strategy/AbstractYieldStrategy.sol",
      },
    },
    "RedeemOptimizerFIFO#0": {
      address: "0xc3e53f4d16ae77db1c982e75a937b9f60fe63690",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "defaultBasis",
              type: "uint8",
              internalType: "enum IRedeemOptimizer.OptimizerBasis",
            },
            {
              name: "startDepositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "DEFAULT_BASIS",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "enum IRedeemOptimizer.OptimizerBasis",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "START_DEPOSIT_PERIOD",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "optimize",
          inputs: [
            {
              name: "vault",
              type: "address",
              internalType: "contract IMultiTokenVault",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "redeemPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "depositPeriods_",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "sharesAtPeriods_",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "optimizeRedeemShares",
          inputs: [
            {
              name: "vault",
              type: "address",
              internalType: "contract IMultiTokenVault",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "redeemPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "depositPeriods_",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "sharesAtPeriods_",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "optimizeWithdrawAssets",
          inputs: [
            {
              name: "vault",
              type: "address",
              internalType: "contract IMultiTokenVault",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "redeemPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "depositPeriods",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "sharesAtPeriods",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "error",
          name: "MathOverflowedMulDiv",
          inputs: [],
        },
        {
          type: "error",
          name: "RedeemOptimizer__FutureToDepositPeriod",
          inputs: [
            {
              name: "toPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "currentPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "RedeemOptimizer__InvalidDepositPeriodRange",
          inputs: [
            {
              name: "fromPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "toPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "RedeemOptimizer__OptimizerFailed",
          inputs: [
            {
              name: "amountFound",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amountToFind",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
      ],
      inheritedFunctions: {
        optimize: "contracts/token/ERC1155/IRedeemOptimizer.sol",
        optimizeRedeemShares: "contracts/token/ERC1155/IRedeemOptimizer.sol",
        optimizeWithdrawAssets: "contracts/token/ERC1155/IRedeemOptimizer.sol",
      },
    },
    "LiquidContinuousMultiTokenVault#0": {
      address: "0x84ea74d481ee0a5332c457a4d796187f6ba67feb",
      abi: [
        {
          type: "function",
          name: "CLOCK_MODE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "DEFAULT_ADMIN_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "FREQUENCY",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "OPERATOR_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "RATE_PERCENT_SCALED",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "SCALE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "TENOR",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "UPGRADER_ROLE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "UPGRADE_INTERFACE_VERSION",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "_redeemOptimizer",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IRedeemOptimizer",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "_vaultStartTimestamp",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "_yieldStrategy",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IYieldStrategy",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "asset",
          inputs: [],
          outputs: [
            {
              name: "asset_",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOfBatch",
          inputs: [
            {
              name: "accounts",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "calcPrice",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "price",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "calcYield",
          inputs: [
            {
              name: "principal",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "fromPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "toPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "yield",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "clock",
          inputs: [],
          outputs: [
            {
              name: "clock_",
              type: "uint48",
              internalType: "uint48",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "convertToAssetsForDepositPeriod",
          inputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "redeemPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "convertToAssetsForDepositPeriod",
          inputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "convertToAssetsForDepositPeriods",
          inputs: [
            {
              name: "shares",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "depositPeriods",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "redeemPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "assets_",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "convertToShares",
          inputs: [
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "convertToSharesForDepositPeriod",
          inputs: [
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "currentPeriod",
          inputs: [],
          outputs: [
            {
              name: "currentPeriod_",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "currentPeriodRate",
          inputs: [],
          outputs: [
            {
              name: "currentPeriodRate_",
              type: "tuple",
              internalType: "struct ITripleRateContext.PeriodRate",
              components: [
                {
                  name: "interestRate",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "effectiveFromPeriod",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "currentPeriodsElapsed",
          inputs: [],
          outputs: [
            {
              name: "numPeriodsElapsed_",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "deposit",
          inputs: [
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "executeBuy",
          inputs: [
            {
              name: "requestor",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "currencyTokenAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "componentTokenAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "executeSell",
          inputs: [
            {
              name: "requestor",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "currencyTokenAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "componentTokenAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "executeSell",
          inputs: [
            {
              name: "requestor",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriods",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "sharesAtPeriods",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "exists",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "frequency",
          inputs: [],
          outputs: [
            {
              name: "frequency_",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRoleAdmin",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRoleMember",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "index",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getRoleMemberCount",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getVersion",
          inputs: [],
          outputs: [
            {
              name: "version",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "grantRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "hasRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "initialize",
          inputs: [
            {
              name: "vaultParams",
              type: "tuple",
              internalType:
                "struct LiquidContinuousMultiTokenVault.VaultParams",
              components: [
                {
                  name: "vaultAuth",
                  type: "tuple",
                  internalType:
                    "struct LiquidContinuousMultiTokenVault.VaultAuth",
                  components: [
                    {
                      name: "owner",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "operator",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "upgrader",
                      type: "address",
                      internalType: "address",
                    },
                  ],
                },
                {
                  name: "asset",
                  type: "address",
                  internalType: "contract IERC20Metadata",
                },
                {
                  name: "yieldStrategy",
                  type: "address",
                  internalType: "contract IYieldStrategy",
                },
                {
                  name: "redeemOptimizer",
                  type: "address",
                  internalType: "contract IRedeemOptimizer",
                },
                {
                  name: "vaultStartTimestamp",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "redeemNoticePeriod",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "contextParams",
                  type: "tuple",
                  internalType: "struct TripleRateContext.ContextParams",
                  components: [
                    {
                      name: "fullRateScaled",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "initialReducedRate",
                      type: "tuple",
                      internalType: "struct ITripleRateContext.PeriodRate",
                      components: [
                        {
                          name: "interestRate",
                          type: "uint256",
                          internalType: "uint256",
                        },
                        {
                          name: "effectiveFromPeriod",
                          type: "uint256",
                          internalType: "uint256",
                        },
                      ],
                    },
                    {
                      name: "frequency",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "tenor",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "decimals",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
              ],
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "lock",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "lockedAmount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "lockedAmount_",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "maxDeposit",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "maxRedeemAtPeriod",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "maxShares",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "maxRequestUnlock",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "minUnlockPeriod",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "noticePeriod",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "numPeriodsForFullRate",
          inputs: [],
          outputs: [
            {
              name: "numPeriods",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "pause",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "paused",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "previewDeposit",
          inputs: [
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "previewRedeemForDepositPeriod",
          inputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "previewRedeemForDepositPeriod",
          inputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "redeemPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "previousPeriodRate",
          inputs: [],
          outputs: [
            {
              name: "previousPeriodRate_",
              type: "tuple",
              internalType: "struct ITripleRateContext.PeriodRate",
              components: [
                {
                  name: "interestRate",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "effectiveFromPeriod",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "proxiableUUID",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "rateScaled",
          inputs: [],
          outputs: [
            {
              name: "ratePercentageScaled_",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "redeemForDepositPeriod",
          inputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "redeemPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "redeemForDepositPeriod",
          inputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "renounceRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "callerConfirmation",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "requestBuy",
          inputs: [
            {
              name: "currencyTokenAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "requestId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "requestSell",
          inputs: [
            {
              name: "depositPeriods",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "sharesAtPeriods",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          outputs: [
            {
              name: "requestId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "requestSell",
          inputs: [
            {
              name: "componentTokenAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "requestId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "requestUnlock",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "unlockPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "revokeRole",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeBatchTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "amounts",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "scale",
          inputs: [],
          outputs: [
            {
              name: "scale_",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setRedeemOptimizer",
          inputs: [
            {
              name: "redeemOptimizer",
              type: "address",
              internalType: "contract IRedeemOptimizer",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setReducedRate",
          inputs: [
            {
              name: "reducedRateScaled_",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "effectiveFromPeriod_",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setReducedRateAtCurrent",
          inputs: [
            {
              name: "reducedRateScaled_",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setVaultStartTimestamp",
          inputs: [
            {
              name: "vaultStartTimestamp",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setYieldStrategy",
          inputs: [
            {
              name: "yieldStrategy",
              type: "address",
              internalType: "contract IYieldStrategy",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "sharesAtPeriod",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "unlock",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "unlockPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "unlockRequested",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "unlockPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "unlockRequested",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "unpause",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "upgradeToAndCall",
          inputs: [
            {
              name: "newImplementation",
              type: "address",
              internalType: "address",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "uri",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CurrentPeriodRateChanged",
          inputs: [
            {
              name: "interestRate",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "effectiveFromPeriod",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CurrentTenorPeriodAndRateChanged",
          inputs: [
            {
              name: "tenorPeriod",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "reducedRate",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Deposit",
          inputs: [
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "receiver",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "assets",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "shares",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Initialized",
          inputs: [
            {
              name: "version",
              type: "uint64",
              indexed: false,
              internalType: "uint64",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Paused",
          inputs: [
            {
              name: "account",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleAdminChanged",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "previousAdminRole",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "newAdminRole",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleGranted",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RoleRevoked",
          inputs: [
            {
              name: "role",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "account",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferBatch",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "ids",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
            {
              name: "values",
              type: "uint256[]",
              indexed: false,
              internalType: "uint256[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TransferSingle",
          inputs: [
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "URI",
          inputs: [
            {
              name: "value",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "id",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Unpaused",
          inputs: [
            {
              name: "account",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Upgraded",
          inputs: [
            {
              name: "implementation",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Withdraw",
          inputs: [
            {
              name: "sender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "receiver",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "assets",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "shares",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "AccessControlBadConfirmation",
          inputs: [],
        },
        {
          type: "error",
          name: "AccessControlUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
            {
              name: "neededRole",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
        {
          type: "error",
          name: "AddressEmptyCode",
          inputs: [
            {
              name: "target",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "AddressInsufficientBalance",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC1155InsufficientBalance",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC1155InvalidApprover",
          inputs: [
            {
              name: "approver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC1155InvalidArrayLength",
          inputs: [
            {
              name: "idsLength",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "valuesLength",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC1155InvalidOperator",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC1155InvalidReceiver",
          inputs: [
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC1155InvalidSender",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC1155MissingApprovalForAll",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC1967InvalidImplementation",
          inputs: [
            {
              name: "implementation",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC1967NonPayable",
          inputs: [],
        },
        {
          type: "error",
          name: "EnforcedPause",
          inputs: [],
        },
        {
          type: "error",
          name: "ExpectedPause",
          inputs: [],
        },
        {
          type: "error",
          name: "FailedInnerCall",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidInitialization",
          inputs: [],
        },
        {
          type: "error",
          name: "LiquidContinuousMultiTokenVault__AmountMismatch",
          inputs: [
            {
              name: "amount1",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "amount2",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "LiquidContinuousMultiTokenVault__InvalidAuthAddress",
          inputs: [
            {
              name: "authName",
              type: "string",
              internalType: "string",
            },
            {
              name: "authAddress",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "LiquidContinuousMultiTokenVault__InvalidFrequency",
          inputs: [
            {
              name: "frequency",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "LiquidContinuousMultiTokenVault__UnlockPeriodMismatch",
          inputs: [
            {
              name: "unlockPeriod1",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "unlockPeriod2",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "MultiTokenVault__CallerMissingApprovalForAll",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "MultiTokenVault__ExceededMaxDeposit",
          inputs: [
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "maxAssets",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "MultiTokenVault__ExceededMaxRedeem",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "maxShares",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "MultiTokenVault__InvalidArrayLength",
          inputs: [
            {
              name: "depositPeriodsLength",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "sharesLength",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "MultiTokenVault__RedeemBeforeDeposit",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "redeemPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "MultiTokenVault__RedeemTimePeriodNotSupported",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "period",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "redeemPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "NotInitializing",
          inputs: [],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "SafeCastOverflowedUintDowncast",
          inputs: [
            {
              name: "bits",
              type: "uint8",
              internalType: "uint8",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "SafeERC20FailedOperation",
          inputs: [
            {
              name: "token",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "TimelockAsyncUnlock__AuthorizeCallerFailed",
          inputs: [
            {
              name: "caller",
              type: "address",
              internalType: "address",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "TimelockAsyncUnlock__ExceededMaxRequestUnlock",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "maxRequestUnlockAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "TimelockAsyncUnlock__ExceededMaxUnlock",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "unlockRequestedAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "TimelockAsyncUnlock__UnlockBeforeDepositPeriod",
          inputs: [
            {
              name: "caller",
              type: "address",
              internalType: "address",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "depositPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "unlockPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "TimelockAsyncUnlock__UnlockBeforeUnlockPeriod",
          inputs: [
            {
              name: "caller",
              type: "address",
              internalType: "address",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "currentPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "unlockPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "Timer__StartTimeNotReached",
          inputs: [
            {
              name: "currentTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "startTime",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "TripleRateContext_PeriodRegressionNotAllowed",
          inputs: [
            {
              name: "currentPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "updatePeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "TripleRateContext_TenorPeriodRegressionNotAllowed",
          inputs: [
            {
              name: "tenorPeriod",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "newTenorPeriod",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "UUPSUnauthorizedCallContext",
          inputs: [],
        },
        {
          type: "error",
          name: "UUPSUnsupportedProxiableUUID",
          inputs: [
            {
              name: "slot",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
      ],
      inheritedFunctions: {
        UPGRADE_INTERFACE_VERSION:
          "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        proxiableUUID:
          "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        upgradeToAndCall:
          "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        asset: "contracts/token/ERC1155/MultiTokenVault.sol",
        balanceOf: "contracts/token/ERC1155/MultiTokenVault.sol",
        balanceOfBatch: "contracts/token/ERC1155/MultiTokenVault.sol",
        convertToAssetsForDepositPeriod:
          "contracts/token/ERC1155/MultiTokenVault.sol",
        convertToAssetsForDepositPeriods:
          "contracts/token/ERC1155/MultiTokenVault.sol",
        convertToShares: "contracts/token/ERC1155/MultiTokenVault.sol",
        convertToSharesForDepositPeriod:
          "contracts/token/ERC1155/MultiTokenVault.sol",
        currentPeriodsElapsed: "contracts/token/ERC1155/MultiTokenVault.sol",
        deposit: "contracts/token/ERC1155/MultiTokenVault.sol",
        exists: "contracts/token/ERC1155/MultiTokenVault.sol",
        isApprovedForAll: "contracts/token/ERC1155/MultiTokenVault.sol",
        maxDeposit: "contracts/token/ERC1155/MultiTokenVault.sol",
        maxRedeemAtPeriod: "contracts/token/ERC1155/MultiTokenVault.sol",
        paused: "contracts/token/ERC1155/MultiTokenVault.sol",
        previewDeposit: "contracts/token/ERC1155/MultiTokenVault.sol",
        previewRedeemForDepositPeriod:
          "contracts/token/ERC1155/MultiTokenVault.sol",
        redeemForDepositPeriod: "contracts/token/ERC1155/MultiTokenVault.sol",
        safeBatchTransferFrom: "contracts/token/ERC1155/MultiTokenVault.sol",
        safeTransferFrom: "contracts/token/ERC1155/MultiTokenVault.sol",
        setApprovalForAll: "contracts/token/ERC1155/MultiTokenVault.sol",
        sharesAtPeriod: "contracts/token/ERC1155/MultiTokenVault.sol",
        supportsInterface:
          "lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlEnumerableUpgradeable.sol",
        totalSupply: "contracts/token/ERC1155/MultiTokenVault.sol",
        uri: "contracts/token/ERC1155/MultiTokenVault.sol",
        executeBuy: "contracts/token/component/IComponentToken.sol",
        executeSell: "contracts/token/component/IComponentToken.sol",
        getVersion: "contracts/token/component/IComponentToken.sol",
        requestBuy: "contracts/token/component/IComponentToken.sol",
        requestSell: "contracts/token/component/IComponentToken.sol",
        currentPeriod: "contracts/timelock/TimelockAsyncUnlock.sol",
        lockedAmount: "contracts/timelock/TimelockAsyncUnlock.sol",
        maxRequestUnlock: "contracts/timelock/TimelockAsyncUnlock.sol",
        minUnlockPeriod: "contracts/timelock/TimelockAsyncUnlock.sol",
        noticePeriod: "contracts/timelock/TimelockAsyncUnlock.sol",
        requestUnlock: "contracts/timelock/TimelockAsyncUnlock.sol",
        unlock: "contracts/timelock/TimelockAsyncUnlock.sol",
        unlockRequested: "contracts/timelock/TimelockAsyncUnlock.sol",
        FREQUENCY: "contracts/yield/context/TripleRateContext.sol",
        RATE_PERCENT_SCALED: "contracts/yield/context/TripleRateContext.sol",
        SCALE: "contracts/yield/context/TripleRateContext.sol",
        TENOR: "contracts/yield/context/TripleRateContext.sol",
        currentPeriodRate: "contracts/yield/context/TripleRateContext.sol",
        frequency: "contracts/yield/context/TripleRateContext.sol",
        numPeriodsForFullRate: "contracts/yield/context/TripleRateContext.sol",
        previousPeriodRate: "contracts/yield/context/TripleRateContext.sol",
        rateScaled: "contracts/yield/context/TripleRateContext.sol",
        scale: "contracts/yield/context/TripleRateContext.sol",
        setReducedRate: "contracts/yield/context/TripleRateContext.sol",
        DEFAULT_ADMIN_ROLE:
          "lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlEnumerableUpgradeable.sol",
        getRoleAdmin:
          "lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlEnumerableUpgradeable.sol",
        getRoleMember:
          "lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlEnumerableUpgradeable.sol",
        getRoleMemberCount:
          "lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlEnumerableUpgradeable.sol",
        grantRole:
          "lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlEnumerableUpgradeable.sol",
        hasRole:
          "lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlEnumerableUpgradeable.sol",
        renounceRole:
          "lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlEnumerableUpgradeable.sol",
        revokeRole:
          "lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlEnumerableUpgradeable.sol",
        CLOCK_MODE:
          "lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol",
        clock: "lib/openzeppelin-contracts/contracts/interfaces/IERC6372.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
