/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { WindowPlugIn, WindowPlugInInterface } from "../WindowPlugIn";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "windowOpensAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "windowClosesAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "CredbullVault__OperationOutsideRequiredWindow",
    type: "error",
  },
  {
    inputs: [],
    name: "checkWindow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositClosesAtTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositOpensAtTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "redemptionClosesAtTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "redemptionOpensAtTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class WindowPlugIn__factory {
  static readonly abi = _abi;
  static createInterface(): WindowPlugInInterface {
    return new utils.Interface(_abi) as WindowPlugInInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WindowPlugIn {
    return new Contract(address, _abi, signerOrProvider) as WindowPlugIn;
  }
}
