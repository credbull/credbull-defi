create type "public"."vault_status" as enum ('created', 'ready');

create type "public"."vault_type" as enum ('fixed_yield');

create table "public"."vaults" (
    "id" bigint generated by default as identity not null,
    "type" vault_type default 'fixed_yield'::vault_type,
    "status" vault_status not null default 'created'::vault_status,
    "address" text not null,
    "strategy_address" text not null,
    "opened_at" timestamp with time zone not null,
    "closed_at" timestamp with time zone not null,
    "owner" uuid,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."vaults" enable row level security;

CREATE UNIQUE INDEX vaults_pkey ON public.vaults USING btree (id);

alter table "public"."vaults" add constraint "vaults_pkey" PRIMARY KEY using index "vaults_pkey";

alter table "public"."vaults" add constraint "vaults_owner_fkey" FOREIGN KEY (owner) REFERENCES auth.users(id) not valid;

alter table "public"."vaults" validate constraint "vaults_owner_fkey";

grant delete on table "public"."vaults" to "anon";

grant insert on table "public"."vaults" to "anon";

grant references on table "public"."vaults" to "anon";

grant select on table "public"."vaults" to "anon";

grant trigger on table "public"."vaults" to "anon";

grant truncate on table "public"."vaults" to "anon";

grant update on table "public"."vaults" to "anon";

grant delete on table "public"."vaults" to "authenticated";

grant insert on table "public"."vaults" to "authenticated";

grant references on table "public"."vaults" to "authenticated";

grant select on table "public"."vaults" to "authenticated";

grant trigger on table "public"."vaults" to "authenticated";

grant truncate on table "public"."vaults" to "authenticated";

grant update on table "public"."vaults" to "authenticated";

grant delete on table "public"."vaults" to "service_role";

grant insert on table "public"."vaults" to "service_role";

grant references on table "public"."vaults" to "service_role";

grant select on table "public"."vaults" to "service_role";

grant trigger on table "public"."vaults" to "service_role";

grant truncate on table "public"."vaults" to "service_role";

grant update on table "public"."vaults" to "service_role";

create policy "Enable read for authenticated users only"
on "public"."vaults"
as permissive
for select
to authenticated
using (true);



