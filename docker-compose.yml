version: '3.8'

services:
  anvil:
    container_name: anvil
    image: anvil
    network_mode: "host"
    platform: linux/amd64
    build: 
      context: .
      dockerfile: Dockerfile-anvil

  api:
    container_name: api
    image: api
    network_mode: "host"
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile-api
    environment:
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      NEXT_PUBLIC_TARGET_NETWORK_WSS: ${NEXT_PUBLIC_TARGET_NETWORK_WSS}
      OPERATOR_PRIVATE_KEY: ${OPERATOR_PRIVATE_KEY}
      CUSTODIAN_PRIVATE_KEY: ${CUSTODIAN_PRIVATE_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      SUPABASE_JWT_SECRET: ${SUPABASE_JWT_SECRET}
      CRON_SECRET: ${CRON_SECRET}
      SLACK_TOKEN: ${SLACK_TOKEN}

  #   depends_on:
  #     - supabase

  # supabase:
  #   container_name: supabase
  #   image: public.ecr.aws/supabase/postgres:15.1.1.9
  #   ports:
  #     - 5432:5432
  #   environment:
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_USER: postgres
  
  # supabase-kong:
  #   container_name: supabase-kong
  #   image: public.ecr.aws/supabase/kong:2.8.1
  #   ports:
  #     - 54321:8000
  #   environment:
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_USER: postgres

# docker build -f Dockerfile -t imagename ../..
